"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[66113],{3905:(n,e,t)=>{t.d(e,{Zo:()=>g,kt:()=>N});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var p=r.createContext({}),s=function(n){var e=r.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},g=function(n){var e=s(n.components);return r.createElement(p.Provider,{value:e},n.children)},k="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,l=n.originalType,p=n.parentName,g=o(n,["components","mdxType","originalType","parentName"]),k=s(t),c=a,N=k["".concat(p,".").concat(c)]||k[c]||m[c]||l;return t?r.createElement(N,i(i({ref:e},g),{},{components:t})):r.createElement(N,i({ref:e},g))}));function N(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=n,o[k]="string"==typeof n?n:a,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},45249:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const l={title:"\u4f7f\u7528 golang \u958b\u767c\u7b2c\u4e00\u500b CNI \u7a0b\u5f0f",sidebar_position:11,date:new Date("2019-09-27T06:19:48.000Z"),tags:["CNI","Kubernetes","Golang","iThome"],description:"\u672c\u7bc7\u6587\u7ae0\u7b97\u662f\u4e00\u500b\u624b\u628a\u624b\u5be6\u4f5c\u7684\u6587\u7ae0\uff0c\u4e3b\u8981\u6703\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 golang \u958b\u767c\u4e00\u500b\u57fa\u65bc Linux Bridge \u7684 CNI \u61c9\u7528\u7a0b\u5f0f\uff0c\u4e26\u4e14\u4ecb\u7d39\u5982\u4f55\u642d\u914d\u8a2d\u5b9a\u6a94\u4f86\u4f7f\u7528\u9019\u500b CNI \u64cd\u4f5c Linux Network Namespace, \u85c9\u7531\u9019\u7bc7\u6587\u7ae0\u7684\u904e\u7a0b\u7406\u89e3\u5230\u4e00\u500b CNI \u7684\u904b\u4f5c\u53ca\u958b\u767c\uff0c\u5c0d\u65bc\u5f80\u5f8c\u7814\u7a76\u5176\u4ed6 CNI \u90fd\u6703\u6709\u4e00\u4e9b\u5e6b\u52a9\uff0c\u7279\u5225\u662f\u57ce\u5e02\u7684\u6846\u67b6\u8ddf\u6982\u5ff5\u3002 \u6700\u5f8c\u672c\u7bc7\u958b\u767c\u7684 CNI \u61c9\u7528\u7a0b\u5f0f\u5176\u5be6\u662f\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u5230 Kubernetes \u88e1\u9762\u4f7f\u7528\uff0c\u5c31\u56e0\u70ba\u90fd\u9075\u5faa CNI \u7684\u898f\u5247"},i="\u524d\u8a00",o={unversionedId:"techPost/2019/iThome_Challenge/cni-golnag",id:"techPost/2019/iThome_Challenge/cni-golnag",title:"\u4f7f\u7528 golang \u958b\u767c\u7b2c\u4e00\u500b CNI \u7a0b\u5f0f",description:"\u672c\u7bc7\u6587\u7ae0\u7b97\u662f\u4e00\u500b\u624b\u628a\u624b\u5be6\u4f5c\u7684\u6587\u7ae0\uff0c\u4e3b\u8981\u6703\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 golang \u958b\u767c\u4e00\u500b\u57fa\u65bc Linux Bridge \u7684 CNI \u61c9\u7528\u7a0b\u5f0f\uff0c\u4e26\u4e14\u4ecb\u7d39\u5982\u4f55\u642d\u914d\u8a2d\u5b9a\u6a94\u4f86\u4f7f\u7528\u9019\u500b CNI \u64cd\u4f5c Linux Network Namespace, \u85c9\u7531\u9019\u7bc7\u6587\u7ae0\u7684\u904e\u7a0b\u7406\u89e3\u5230\u4e00\u500b CNI \u7684\u904b\u4f5c\u53ca\u958b\u767c\uff0c\u5c0d\u65bc\u5f80\u5f8c\u7814\u7a76\u5176\u4ed6 CNI \u90fd\u6703\u6709\u4e00\u4e9b\u5e6b\u52a9\uff0c\u7279\u5225\u662f\u57ce\u5e02\u7684\u6846\u67b6\u8ddf\u6982\u5ff5\u3002 \u6700\u5f8c\u672c\u7bc7\u958b\u767c\u7684 CNI \u61c9\u7528\u7a0b\u5f0f\u5176\u5be6\u662f\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u5230 Kubernetes \u88e1\u9762\u4f7f\u7528\uff0c\u5c31\u56e0\u70ba\u90fd\u9075\u5faa CNI \u7684\u898f\u5247",source:"@site/docs/techPost/2019/iThome_Challenge/cni-golnag.md",sourceDirName:"techPost/2019/iThome_Challenge",slug:"/techPost/2019/iThome_Challenge/cni-golnag",permalink:"/docs/techPost/2019/iThome_Challenge/cni-golnag",draft:!1,tags:[{label:"CNI",permalink:"/docs/tags/cni"},{label:"Kubernetes",permalink:"/docs/tags/kubernetes"},{label:"Golang",permalink:"/docs/tags/golang"},{label:"iThome",permalink:"/docs/tags/i-thome"}],version:"current",sidebarPosition:11,frontMatter:{title:"\u4f7f\u7528 golang \u958b\u767c\u7b2c\u4e00\u500b CNI \u7a0b\u5f0f",sidebar_position:11,date:"2019-09-27T06:19:48.000Z",tags:["CNI","Kubernetes","Golang","iThome"],description:"\u672c\u7bc7\u6587\u7ae0\u7b97\u662f\u4e00\u500b\u624b\u628a\u624b\u5be6\u4f5c\u7684\u6587\u7ae0\uff0c\u4e3b\u8981\u6703\u4ecb\u7d39\u5982\u4f55\u4f7f\u7528 golang \u958b\u767c\u4e00\u500b\u57fa\u65bc Linux Bridge \u7684 CNI \u61c9\u7528\u7a0b\u5f0f\uff0c\u4e26\u4e14\u4ecb\u7d39\u5982\u4f55\u642d\u914d\u8a2d\u5b9a\u6a94\u4f86\u4f7f\u7528\u9019\u500b CNI \u64cd\u4f5c Linux Network Namespace, \u85c9\u7531\u9019\u7bc7\u6587\u7ae0\u7684\u904e\u7a0b\u7406\u89e3\u5230\u4e00\u500b CNI \u7684\u904b\u4f5c\u53ca\u958b\u767c\uff0c\u5c0d\u65bc\u5f80\u5f8c\u7814\u7a76\u5176\u4ed6 CNI \u90fd\u6703\u6709\u4e00\u4e9b\u5e6b\u52a9\uff0c\u7279\u5225\u662f\u57ce\u5e02\u7684\u6846\u67b6\u8ddf\u6982\u5ff5\u3002 \u6700\u5f8c\u672c\u7bc7\u958b\u767c\u7684 CNI \u61c9\u7528\u7a0b\u5f0f\u5176\u5be6\u662f\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u5230 Kubernetes \u88e1\u9762\u4f7f\u7528\uff0c\u5c31\u56e0\u70ba\u90fd\u9075\u5faa CNI \u7684\u898f\u5247"},sidebar:"techPost",previous:{title:"kubernetes \u8207 CNI \u7684\u4e92\u52d5",permalink:"/docs/techPost/2019/iThome_Challenge/k8s-cni"},next:{title:"\u521d\u63a2 CNI \u7684 IP \u5206\u914d\u554f\u984c (IPAM)",permalink:"/docs/techPost/2019/iThome_Challenge/cni-ipam"}},p={},s=[{value:"Step 1",id:"step-1",level:2},{value:"Step 2",id:"step-2",level:2},{value:"Step 3",id:"step-3",level:2},{value:"Step 4",id:"step-4",level:2}],g={toc:s},k="wrapper";function m(n){let{components:e,...t}=n;return(0,a.kt)(k,(0,r.Z)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,a.kt)("p",null,"\u524d\u9762\u5169\u7bc7\u6587\u7ae0\u63a2\u8a0e\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"Container Network Interface(CNI)")," \u7684\u6982\u5ff5\uff0c\u4e26\u4e14\u5f9e Kubernetes \u7684\u74b0\u5883\u4e2d\u53bb\u63a2\u8a0e\u5982\u4f55\u4f7f\u7528 CNI\uff0c\u5305\u542b\u4e86\u5404\u7a2e\u8a2d\u5b9a\u3002"),(0,a.kt)("p",null,"\u6b64\u5916\u4e4b\u524d\u4e5f\u6709\u63d0\u904e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins"},"containernetworking GitHub")," \u6709\u63d0\u4f9b\u5f88\u591a\u57fa\u672c\u597d\u7528\u7684 CNI \u89e3\u6c7a\u65b9\u6848\u4f9b\u5176\u4ed6\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"CNI")," \u89e3\u6c7a\u65b9\u6848\u91cd\u8907\u4f7f\u7528\uff0c\u8b6c\u5982"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"bridge"),(0,a.kt)("li",{parentName:"ol"},"lo"),(0,a.kt)("li",{parentName:"ol"},"portmapper"),(0,a.kt)("li",{parentName:"ol"},"local-host"),(0,a.kt)("li",{parentName:"ol"},"dhcp"),(0,a.kt)("li",{parentName:"ol"},"...\u7b49")),(0,a.kt)("p",null,"\u800c\u4eca\u5929\u8981\u4f86\u63a2\u8a0e\u5230\u5e95 ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," \u9019\u500b\u7c21\u55ae\u7684 CNI \u600e\u9ebc\u5be6\u73fe\u7684\uff0c\u4ee5\u53ca\u6211\u5011\u5c07\u4f7f\u7528 golang \u81ea\u5df1\u6253\u9020\u4e00\u500b\u7c21\u55ae\u7248\u672c\u7684 bridge CNI\u3002"),(0,a.kt)("p",null,"\u53e6\u5916\u672c\u6587\u6240\u4f7f\u7528\u7684 golang \u57fa\u65bc\u6e2c\u8a66\u8207\u958b\u767c\u65b9\u4fbf\uff0c\u6c92\u6709\u8b1b\u7a76\u592a\u591a\u67b6\u69cb\u8207\u7dad\u8b77\u6027\uff0c\u55ae\u7d14\u5c31\u662f\u529f\u80fd\u4e0a\u7684\u9a57\u8b49\u3002"),(0,a.kt)("h1",{id:"\u4ecb\u7d39"},"\u4ecb\u7d39"),(0,a.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u4f7f\u7528\u7684\u7a0b\u5f0f\u78bc\u90fd\u57fa\u65bc\u4e0b\u5217 ",(0,a.kt)("a",{parentName:"p",href:"ttps://github.com/hwchiu/CNI_Tutorial_2018"},"CNI Tutorial")," repo\uff0c\u88e1\u9762\u9084\u6709\u542b\u6709\u4e00\u500b\u5efa\u7f6e\u597d\u6240\u6709\u74b0\u5883\u7684 ",(0,a.kt)("strong",{parentName:"p"},"vagrant")," \u6a94\u6848\uff0c\u6703\u76f4\u63a5\u6e96\u5099\u597d\u6240\u6709\u74b0\u5883\u4f9b\u6e2c\u8a66\u3002"),(0,a.kt)("p",null,"\u9019\u6b21\u7684\u76ee\u6a19\u5f88\u7c21\u55ae\uff0c\u4f7f\u7528 golang \u5beb\u4e00\u500b\u57fa\u65bc CNI \u7684\u89e3\u6c7a\u65b9\u6848\uff0c\u8a72\u89e3\u6c7a\u65b9\u6848\u6703\u57f7\u884c\u4e0b\u5217\u884c\u70ba"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8b80\u53d6 config, \u53d6\u5f97 bridge \u540d\u7a31\u4ee5\u53ca\u60f3\u8981\u8a2d\u5b9a\u7684 IP \u5730\u5740"),(0,a.kt)("li",{parentName:"ol"},"\u6839\u64da\u4e0a\u8ff0\u7684\u8cc7\u8a0a\u5275\u5efa\u5c0d\u61c9\u7684 Linux Bridge"),(0,a.kt)("li",{parentName:"ol"},"\u5275\u5efa\u4e00\u689d\u7279\u6b8a\u7684\u865b\u64ec link (veth)"),(0,a.kt)("li",{parentName:"ol"},"\u5c07\u8a72\u865b\u64ec link \u7684\u5169\u7aef\u5206\u5225\u63a5\u5230 Linux Bridge \u4ee5\u53ca \u50b3\u5165\u7684 network namespace \u4e0a\uff0c\u4e26\u4e14\u547d\u540d\u70ba eth0"),(0,a.kt)("li",{parentName:"ol"},"\u5e6b network namespace \u5167\u7684 eth0 \u8a2d\u5b9a IP \u5730\u5740")),(0,a.kt)("p",null,"\u6574\u500b\u7d50\u679c\u5c31\u5982\u540c\u4e0b\u5716\uff0c\u9019\u6b21\u7684\u6982\u5ff5\u975e\u5e38\u7c21\u55ae\uff0c\u4e5f\u6c92\u6709\u727d\u626f\u904e\u591a\u984d\u5916\u7684\u529f\u80fd\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u770b\u4e00\u4e0b\u4e00\u500b CNI \u53ef\u80fd\u6703\u600e\u9ebc\u5be6\u73fe\uff0c\u6709\u500b\u9019\u500b\u6982\u5ff5\u4e4b\u5f8c\u518d\u4f86\u770b\u5176\u4ed6\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"CNI")," \u89e3\u6c7a\u65b9\u6848\u7684\u539f\u59cb\u78bc\u7684\u6642\u5019\u5c31\u6bd4\u8f03\u6709\u6982\u5ff5\u8a72\u600e\u9ebc\u53bb\u7406\u89e3\u8207\u95b1\u8b80\u3002\n",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/botAbi0.png",alt:null})),(0,a.kt)("h1",{id:"\u6d41\u7a0b"},"\u6d41\u7a0b"),(0,a.kt)("h2",{id:"step-1"},"Step 1"),(0,a.kt)("p",null,"\u70ba\u4e86\u5feb\u901f\u4f7f\u7528 golang \u958b\u767c ",(0,a.kt)("inlineCode",{parentName:"p"},"CNI")," \u7684\u61c9\u7528\u7a0b\u5f0f\uff0c\u6211\u5011\u53ef\u4ee5\u501f\u52a9\u5b98\u65b9\u63d0\u4f9b\u7684\u51fd\u793a\u5eab\u4f86\u5e6b\u52a9\u6211\u5011\u5feb\u901f\u5efa\u7acb\u6574\u500b ",(0,a.kt)("inlineCode",{parentName:"p"},"CNI")," \u7684\u6846\u67b6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'package main\n\nimport (\n    "fmt"\n    "github.com/containernetworking/cni/pkg/skel"\n    "github.com/containernetworking/cni/pkg/version"\n)\n\nfunc cmdAdd(args *skel.CmdArgs) error {\n    fmt.Printf("interfance Name: %s\\n", args.IfName)\n    fmt.Printf("netns path: %s\\n", args.Netns)\n    fmt.Printf("the config data: %s\\n", args.StdinData)\n    return nil\n}\n\nfunc cmdDel(args *skel.CmdArgs) error {\n    return nil\n}\n\nfunc main() {\n    skel.PluginMain(cmdAdd, cmdDel, version.All)\n}\n')),(0,a.kt)("p",null,"\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u5efa\u7acb\u7684\u5169\u500b function, \u5206\u5225\u8981\u7528\u4f86\u8655\u7406 ADD/DEL \u5169\u500b\u4e8b\u4ef6\uff0c\u5c0d\u61c9\u5230 Container \u88ab\u5275\u7acb\u4ee5\u53ca Container \u88ab\u522a\u9664"),(0,a.kt)("p",null,"\u63a5\u8005\u900f\u904e ",(0,a.kt)("inlineCode",{parentName:"p"},"skel")," \u9019\u500b\u51fd\u5f0f\u5eab\u5c07\u9019\u5169\u500b function \u8207 ",(0,a.kt)("strong",{parentName:"p"},"ADD/DEL")," \u4e8b\u4ef6\u7d66\u95dc\u806f\u8d77\u4f86\n\u5176\u4e2d\u8981\u6ce8\u610f\u7684\u662f\u9019\u4e9b function \u7684\u53c3\u6578\u90fd\u5fc5\u9808\u662f ",(0,a.kt)("strong",{parentName:"p"},"skel.CmdArgs"),"\uff0c\u5176\u7d50\u69cb\u5982\u4e0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"type CmdArgs struct {\n    ContainerID string\n    Netns       string\n    IfName      string\n    Args        string\n    Path        string\n    StdinData   []byte\n}\n")),(0,a.kt)("p",null,"\u6709\u6c92\u6709\u89ba\u5f97\u9019\u4e9b\u6b04\u4f4d\u8207\u4e4b\u524d\u4ecb\u7d39\u7684 CNI \u6a19\u6e96\u5167\u5b9a\u7fa9\u7684\u6b04\u4f4d\u5f88\u76f8\u4f3c\uff1f \u9019\u500b\u7d50\u69cb\u5c31\u662f\u7528\u4f86\u5e6b\u52a9\u8655\u7406\u76f8\u95dc\u53c3\u6578\u7684\uff0c\u8a72 ",(0,a.kt)("strong",{parentName:"p"},"skel")," \u7684\u51fd\u5f0f\u5eab\u6703\u5e6b\u5fd9\u628a\u76f8\u95dc\u53c3\u6578\u6536\u96c6\u5b8c\u7562\u5f8c\u585e\u5230\u9019\u500b\u7d50\u69cb\u5167\uff0c\u4e26\u4e14\u50b3\u5165\u5230 ADD/DEL \u5c0d\u61c9\u7684 function."),(0,a.kt)("p",null,"\u6b64\u5916\u9019\u908a\u7684 ",(0,a.kt)("strong",{parentName:"p"},"StdinData")," \u5176\u5be6\u5c31\u662f\u6240\u8b02\u7684 ",(0,a.kt)("strong",{parentName:"p"},"Network Configuration")," \u7684 json\u6a94\u6848\uff0c\u800c\u9019\u500b\u7bc4\u4f8b\u4e2d\u6211\u5011\u5e0c\u671b\u900f\u904e\u4e00\u500b config \u53bb\u63cf\u8ff0 bridge \u7684\u540d\u7a31\u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"network namespace")," \u6703\u7528\u5230\u7684 IP \u5730\u5740\u3002\n\u56e0\u6b64\u6211\u5011\u5148\u8a2d\u8a08\u4e00\u500b\u7c21\u55ae\u7684 Config \u5167\u5bb9\uff0c\u4e26\u4e14\u5b58\u653e\u5230\u540d\u70ba ",(0,a.kt)("strong",{parentName:"p"},"config")," \u7684\u6a94\u6848\u5167"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json="},'{\n        "name": "mynet",\n        "BridgeName": "test",\n        "IP": "192.0.2.12/24"\n}\n')),(0,a.kt)("p",null,"\u5047\u8a2d\u4e0a\u8ff0\u7684 golang \u7a0b\u5f0f\u7de8\u8b6f\u5b8c\u6210\u5f8c\u540d\u70ba ",(0,a.kt)("strong",{parentName:"p"},"mycni"),"\uff0c\u5247\u6211\u5011\u53ef\u4ee5\u9019\u6a23\u9032\u884c\u6e2c\u8a66"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},'$ sudo ip netns add ns1\n$ sudo CNI_COMMAND=ADD CNI_CONTAINERID=ns1 CNI_NETNS=/var/run/netns/ns1 CNI_IFNAME=eth10 CNI_PATH=`pwd` ./mycni < config\n\ninterfance Name: eth10\nnetns path: /var/run/netns/ns1\nthe config data: {\n        "name": "mynet",\n        "BridgeName": "test",\n        "IP": "192.0.2.12/24"\n}\n')),(0,a.kt)("p",null,"\u5176\u4e2d\u7528\u5230\u7684\u74b0\u5883\u8b8a\u6578 ",(0,a.kt)("strong",{parentName:"p"},"CNI_XXX")," \u7531 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/cni/blob/master/SPEC.md#parameters"},"CNI SPEC")," \u6240\u5b9a\u7fa9\uff0c\u5206\u5225\u6709"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"CNI_COMMAND"),(0,a.kt)("li",{parentName:"ol"},"CNI_CONYAINERID"),(0,a.kt)("li",{parentName:"ol"},"CNI_IFNAME"),(0,a.kt)("li",{parentName:"ol"},"CNI_ARGS"),(0,a.kt)("li",{parentName:"ol"},"CNI_PATH")),(0,a.kt)("p",null,"\u5b8c\u6210\u4e86\u9019\u4e00\u6b65\u5c31\u610f\u5473\u6211\u5011\u7684\u7a0b\u5f0f\u5df2\u7d93\u53ef\u4ee5\u8655\u7406 CNI \u76f8\u95dc\u7684\u8cc7\u8a0a\u4e86\uff0c\u53ea\u8981\u628a\u4e0a\u8ff0\u7684\u8a2d\u5b9a\u6a94\u6848\u8207\u57f7\u884c\u6a94\u653e\u5165\u5230 kubernetes cluster \u5167\uff0c\u4f9d\u7167 ",(0,a.kt)("strong",{parentName:"p"},"--cni-bin-dri")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"--cni-conf-dir")," \u7684\u8a2d\u5b9a\u7684\u4f4d\u7f6e\u4e0b\uff0c\u5c31\u53ef\u4ee5\u9806\u5229\u5730\u88ab\u57f7\u884c\u7136\u5f8c\u5370\u51fa\u76f8\u95dc\u8cc7\u8a0a\u3002"),(0,a.kt)("p",null,"\u4e0d\u904e\u7531\u65bc\u76ee\u524d\u7684\u7a0b\u5f0f\u4ec0\u9ebc\u90fd\u6c92\u6709\u505a\uff0c\u6240\u4ee5\u57f7\u884c\u8d77\u4f86\u7684 Pod \u6703\u8b8a\u6210\u6c92\u6709\u5c0d\u5916\u9023\u63a5\u4e0a\u7db2\u7684\u80fd\u529b\uff0c\u4f46\u662f\u6574\u500b\u6d41\u7a0b\u7b97\u662f\u5df2\u7d93\u6253\u901a\u4e86\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u5982\u4f55\u900f\u904e\u9019\u4e9b\u8cc7\u8a0a\u4f86\u64cd\u4f5c Linux \u4ee5\u53ca Network Namespace\u3002"),(0,a.kt)("h2",{id:"step-2"},"Step 2"),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u6211\u5011\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5728\u7cfb\u7d71\u5167\u5275\u5efa\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"Linux Bridge"),"\uff0c\u9019\u90e8\u5206\u6703\u4f7f\u7528\u5230 ",(0,a.kt)("strong",{parentName:"p"},"netlink")," \u76f8\u95dc\u7684\u51fd\u793a\u5eab\u9032\u884c\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"netlink")," \u9019\u500b",(0,a.kt)("strong",{parentName:"p"},"IPC"),"\u7684\u6a5f\u5236\u76f4\u63a5\u544a\u8a34 ",(0,a.kt)("strong",{parentName:"p"},"kernel")," \u5e6b\u5fd9\u64cd\u4f5c\u3002"),(0,a.kt)("p",null,"\u6b64\u5916\uff0c\u6211\u5011\u5728\u4e0a\u4e00\u500b\u6b65\u9a5f\u5b9a\u7fa9\u4e86\u7c21\u55ae\u7684 config \u5167\u5bb9\uff0c\u56e0\u6b64\u9019\u6b21\u4e5f\u8981\u5728\u7a0b\u5f0f\u5167\u5b9a\u7fa9\u76f8\u95dc\u7684\u7d50\u69cb\u4f86\u8b80\u53d6\u9019\u4e9b\u8cc7\u6599\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json="},'{\n        "name": "mynet",\n        "BridgeName": "test",\n        "IP": "192.0.2.12/24"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'import (\n    "encoding/json"\n    "fmt"\n    "syscall"\n\n    "github.com/containernetworking/cni/pkg/skel"\n    "github.com/containernetworking/cni/pkg/version"\n    "github.com/vishvananda/netlink"\n)\n\ntype SimpleBridge struct {\n    BridgeName string `json:"bridgeName"`\n    IP         string `json:"ip"`\n}\n\nfunc cmdAdd(args *skel.CmdArgs) error {\n    sb := SimpleBridge{}\n    if err := json.Unmarshal(args.StdinData, &sb); err != nil {\n        return err\n    }\n    fmt.Println(sb)\n\n    br := &netlink.Bridge{\n        LinkAttrs: netlink.LinkAttrs{\n            Name: sb.BridgeName,\n            MTU:  1500,\n            // Let kernel use default txqueuelen; leaving it unset\n            // means 0, and a zero-length TX queue messes up FIFO\n            // traffic shapers which use TX queue length as the\n            // default packet limit\n            TxQLen: -1,\n        },\n    }\n\n    err := netlink.LinkAdd(br)\n    if err != nil && err != syscall.EEXIST {\n        return err\n    }\n\n    if err := netlink.LinkSetUp(br); err != nil {\n        return err\n    }\n    return nil\n}\n')),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5b9a\u7fa9\u4e00\u500b\u7c21\u55ae\u7684\u7d50\u69cb\uff0c\u7528\u4f86\u8b80\u53d6\u8a72 json \u6a94\u6848"),(0,a.kt)("li",{parentName:"ol"},"\u8a72 config \u6703\u653e\u5230 ",(0,a.kt)("strong",{parentName:"li"},"args.StdinData")," \uff0c\u5617\u8a66\u5f9e\u9019\u908a\u8b80\u53d6\u5167\u5bb9"),(0,a.kt)("li",{parentName:"ol"},"\u63a5\u4e0b\u4f86\u6211\u5011\u8981\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"li"},"netlink")," \u7684\u51fd\u793a\u5eab\u64cd\u4f5c ",(0,a.kt)("strong",{parentName:"li"},"Linux Bridge")," \u5206\u6210\u4e09\u500b\u6b65\u9a5f",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5275\u5efa Bridge \u7684\u7269\u4ef6"),(0,a.kt)("li",{parentName:"ul"},"\u544a\u77e5 Kernel \u5e6b\u5fd9\u5275\u5efa Bridge"),(0,a.kt)("li",{parentName:"ul"},"\u5c07\u8a72 Bridge \u555f\u52d5 (\u985e\u4f3c ifconfig br0 up)")))),(0,a.kt)("p",null,"\u7531\u65bc\u9019\u500b\u7bc4\u4f8b\u4e2d\u6211\u5011\u9084\u6c92\u6709\u771f\u7684\u53bb\u64cd\u63a7\u5230 ",(0,a.kt)("strong",{parentName:"p"},"namespace"),"\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u771f\u7684\u5275\u5efa ",(0,a.kt)("strong",{parentName:"p"},"namespace")," \u4e5f\u662f\u53ef\u4ee5\u904b\u884c\u7684"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},"$ brctl show\nbridge name     bridge id               STP enabled     interfaces\n\n$ sudo CNI_COMMAND=ADD CNI_CONTAINERID=ns1 CNI_NETNS=/var/run/netns/ns1 CNI_IFNAME=eth10 CNI_PATH=`pwd` ./mycni < config\n{test 192.0.2.12/24}\n\n$ brctl show\nbridge name     bridge id               STP enabled     interfaces\ntest            8000.000000000000       no\n\n")),(0,a.kt)("h2",{id:"step-3"},"Step 3"),(0,a.kt)("p",null,"\u518d\u4f86\u91cd\u65b0\u6aa2\u8996\u4e00\u4e0b\u6211\u5011\u7684\u76ee\u6a19\u5716\n",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/botAbi0.png",alt:null})),(0,a.kt)("p",null,"\u7b2c\u4e09\u6b65\u9a5f\u6211\u5011\u8981\u6eff\u8db3\u4e0a\u5716\u7684(2)\u7684\u529f\u80fd\uff0c\u5efa\u7acb\u4e00\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"veth")," \u4e26\u4e14\u5206\u5225\u9023\u63a5\u5230 ",(0,a.kt)("strong",{parentName:"p"},"Linux Bridge")," \u4ee5\u53ca\u9810\u5148\u5275\u7acb\u597d\u7684 ",(0,a.kt)("strong",{parentName:"p"},"network namespace")," \u4e0a\uff0c\u540c\u6642\u8a72\u540d\u7a31\u5fc5\u9808\u662f\u6211\u5011\u900f\u904e\u53c3\u6578\u50b3\u9032\u53bb\u7684\u3002"),(0,a.kt)("p",null,"\u7531\u65bc\u63a5\u4e0b\u4f86\u8981\u76f4\u63a5\u91dd\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"network namespace (netns)")," \u9032\u884c\u64cd\u4f5c\uff0c\u540c\u6642\u4e5f\u6703\u7528\u5230\u4e00\u4e9b\u76f8\u95dc\u7684\u4ecb\u9762\uff0c\u56e0\u6b64\u6211\u5011\u8981\u5f15\u7528\u66f4\u591a\u5b98\u65b9\u63d0\u4f9b\u7684\u51fd\u793a\u5eab"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'import (\n    "encoding/json"\n    "fmt"\n    "syscall"\n\n    "github.com/containernetworking/cni/pkg/skel"\n    "github.com/containernetworking/cni/pkg/types/current"\n    "github.com/containernetworking/cni/pkg/version"\n    "github.com/containernetworking/plugins/pkg/ip"\n    "github.com/containernetworking/plugins/pkg/ns"\n    "github.com/vishvananda/netlink"\n)\n')),(0,a.kt)("p",null,"\u5ef6\u7e8c Step 2\u7684\u7a0b\u5f0f\uff0c\u6211\u5011\u5275\u5efa\u5b8c\u7562 ",(0,a.kt)("strong",{parentName:"p"},"Linux Bridge")," \u4e4b\u5f8c\uff0c\u63a5\u4e0b\u4f86\u6211\u5011\u8981\u958b\u59cb\u8655\u7406 network namespace\uff0c\u904b\u4f5c\u6d41\u7a0b\u5982\u4e0b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6839\u64da\u53c3\u6578 ",(0,a.kt)("strong",{parentName:"li"},"CNI_NETNS")," \u7d66\u7684\u8def\u5f91\u53d6\u5f97\u76f8\u95dc network namespace(netns) \u7684\u7269\u4ef6"),(0,a.kt)("li",{parentName:"ol"},"\u65bc\u8a72 netns \u5167\u5275\u5efa\u4e00\u5c0d ",(0,a.kt)("strong",{parentName:"li"},"veth")," \uff0c\u9700\u8981\u4e09\u500b\u53c3\u6578\uff0c\u5206\u5225\u662f",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"interface name, \u4e5f\u5c31\u662f CNI_INFNAME"),(0,a.kt)("li",{parentName:"ul"},"mtu, \u7bc4\u4f8b\u6e2c\u8a66\u4f7f\u7528 1500 \u5373\u53ef"),(0,a.kt)("li",{parentName:"ul"},"\u53e6\u5916\u4e00\u7aef\u7684 netns \u7269\u4ef6\uff0c\u7531\u65bc\u6211\u5011\u662f\u5728\u76ee\u6a19\u7684 netns \u5167\u5275\u9020\uff0c\u6240\u4ee5\u9019\u500b\u8b8a\u6578\u5247\u662f\u8981\u7d66 ",(0,a.kt)("strong",{parentName:"li"},"host")," \u672c\u8eab\u7684 netns"))),(0,a.kt)("li",{parentName:"ol"},"\u5275\u5efa\u5b8c\u7562\u5f8c\u900f\u904e ",(0,a.kt)("strong",{parentName:"li"},"veth")," \u7684\u56de\u50b3\u8b8a\u6578\u53d6\u5f97\u5275\u5efa\u65bc ",(0,a.kt)("strong",{parentName:"li"},"host")," \u4e0a\u7684 interface \u540d\u7a31\uff0c\u901a\u5e38\u662f ",(0,a.kt)("strong",{parentName:"li"},"vethxxxxxxx")," \u9019\u7a2e\u683c\u5f0f"),(0,a.kt)("li",{parentName:"ol"},"\u6839\u64da\u4e0a\u8ff0\u7684\u540d\u7a31\u518d\u6b21\u900f\u904e ",(0,a.kt)("strong",{parentName:"li"},"netlink")," \u53bb\u53d6\u5f97\u8a72\u7db2\u8def\u4ecb\u9762\u7684\u7269\u4ef6"),(0,a.kt)("li",{parentName:"ol"},"\u6700\u5f8c\u900f\u904e ",(0,a.kt)("strong",{parentName:"li"},"netlink")," \u7684\u65b9\u5f0f\u628a\u8a72\u4ecb\u9762\u63a5\u4e0a\u5df2\u7d93\u5275\u5efa\u597d\u7684 ",(0,a.kt)("strong",{parentName:"li"},"Linux Bridfge"))),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u4e00\u500b\u6b65\u9a5f\u4e00\u500b\u6b65\u9a5f\u8a66\u8a66\u770b"),(0,a.kt)("p",null,"\u9996\u5148\u900f\u904e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/blob/master/pkg/ns/ns_linux.go#L136"},"\u5b98\u65b9\u51fd\u5f0f\u5eab")," \u63d0\u4f9b\u7684\u529f\u80fd\u4f86\u53d6\u5f97 netns \u7684\u7269\u4ef6\uff0c\u5176\u53c3\u6578\u5c31\u662f\u6211\u5011\u5728\u57f7\u884c\u6642\u50b3\u5165\u7684 ",(0,a.kt)("strong",{parentName:"p"},"/var/run/netns/ns1")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"    netns, err := ns.GetNS(args.Netns)\n    if err != nil {\n        return err\n    }\n")),(0,a.kt)("p",null,"\u63a5\u8005\u6211\u5011\u53ef\u4ee5\u900f\u904e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/blob/master/pkg/ns/ns_linux.go#L165"},"netns.Do")," \u7684\u65b9\u5f0f\u65bc\u8a72 netns \u5167\u57f7\u884c\u4efb\u610f function."),(0,a.kt)("p",null,"\u6240\u4ee5\u5148\u5b9a\u7fa9\u4e00\u500b function (handler)\uff0c\u8a72 function \u5fc5\u9808\u8981\u80fd\u5920\u5275\u5efa\u4e00\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"veth")," \u4e26\u4e14\u6536\u96c6\u5230\u5275\u5efa\u5f8c\u7684\u53e6\u5916\u4e00\u7aef\u540d\u7a31 ",(0,a.kt)("strong",{parentName:"p"},"vethxxxx")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"    hostIface := &current.Interface{}\n    var handler = func(hostNS ns.NetNS) error {\n        hostVeth, _, err := ip.SetupVeth(args.IfName, 1500, hostNS)\n        if err != nil {\n            return err\n        }\n        hostIface.Name = hostVeth.Name\n        return nil\n    }\n\n    if err := netns.Do(handler); err != nil {\n        return err\n    }\n")),(0,a.kt)("p",null,"\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"netns.Do")," \u6709\u8208\u8da3\u7684\u53ef\u4ee5\u89c0\u770b\u5176",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/blob/master/pkg/ns/ns_linux.go#L165"},"\u539f\u59cb\u78bc"),"\uff0c\u8a72\u5be6\u4f5c\u5167\u6703\u53d6\u5f97\u7576\u524d ",(0,a.kt)("strong",{parentName:"p"},"host")," \u7684 ",(0,a.kt)("strong",{parentName:"p"},"netns")," \u4e26\u4e14\u50b3\u5165\u5230\u53c3\u6578\u7684\u51fd\u5f0f\u4e2d\u3002"),(0,a.kt)("p",null,"\u4e0a\u8ff0\u6d41\u7a0b\u5176\u5be6\u53ef\u4ee5\u628a ",(0,a.kt)("strong",{parentName:"p"},"current.Interface")," \u7269\u4ef6\u55ae\u7d14\u63db\u6210\u5b57\u4e32\u5c31\u597d\uff0c\u56e0\u70ba\u6211\u5011\u9019\u500b\u7bc4\u4f8b\u4e2d\u53ea\u6709\u8981\u6536\u96c6 interface name, \u6c92\u6709\u5176\u4ed6\u7684\u7db2\u5361\u8cc7\u8a0a\u3002"),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u5c31\u662f\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"netlink")," \u5c07\u8a72 interface name \u8f49\u63db\u6210\u76f8\u95dc\u7684\u7269\u4ef6\uff0c\u4ee5\u5229\u5f8c\u9762\u7684  ",(0,a.kt)("strong",{parentName:"p"},"LinkSetMaster"),"\u64cd\u4f5c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"\n    hostVeth, err := netlink.LinkByName(hostIface.Name)\n    if err != nil {\n        return err\n    }\n\n    if err := netlink.LinkSetMaster(hostVeth, br); err != nil {\n        return err\n    }\n")),(0,a.kt)("p",null,"\u6700\u5f8c\u4f9d\u5e8f\u57f7\u884c\u4e0b\u5217\u7684\u6b65\u9a5f\uff0c\u5148\u6e05\u9664\u5148\u524d\u5275\u7acb\u904e\u7684\u6240\u6709\u8cc7\u6e90\uff0c\u7136\u5f8c\u624b\u52d5\u5275\u5efa\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"netns"),"\u3002"),(0,a.kt)("p",null,"\u8981\u6ce8\u610f ",(0,a.kt)("strong",{parentName:"p"},"netns")," \u7684\u540d\u7a31 ",(0,a.kt)("strong",{parentName:"p"},"ns1")," \u5fc5\u9808\u8981\u8207\u53c3\u6578 ",(0,a.kt)("strong",{parentName:"p"},"CNI_NETNS")," \u5f8c\u9762\u7684\u540d\u7a31\u4e00\u81f4\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},"# Teardown all resoureces\n$ sudo ip netns del ns1\n$ sudo ifconfig test down\n$ sudo brctl delbr test\n\n# Create network namespace\n$ sudo ip netns add ns1\n\n$ sudo CNI_COMMAND=ADD CNI_CONTAINERID=ns1 CNI_NETNS=/var/run/netns/ns1 CNI_IFNAME=eth10 CNI_PATH=`pwd` ./mycni < config\n$ sudo brctl show test\nbridge name     bridge id               STP enabled     interfaces\ntest            8000.6a5cc34310be       no              veth99b22b47\n$ sudo ip netns exec ns1 ifconfig -a\neth10     Link encap:Ethernet  HWaddr 96:7c:33:2b:f3:42\n          inet6 addr: fe80::947c:33ff:fe2b:f342/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:1 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:1 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:90 (90.0 B)  TX bytes:90 (90.0 B)\n\nlo        Link encap:Local Loopback\n          LOOPBACK  MTU:65536  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n")),(0,a.kt)("p",null,"\u8dd1\u5b8c\u9019\u500b\u7bc4\u4f8b\u6211\u5011\u5c31\u5df2\u7d93\u9806\u5229\u7684\u5efa\u7acb\u597d\u76f8\u95dc\u7684\u6a4b\u6a11\uff0c\u5c07 ",(0,a.kt)("strong",{parentName:"p"},"host")," \u8207 ",(0,a.kt)("strong",{parentName:"p"},"network namespace")," \u900f\u904e\u865b\u64ec\u9023\u7d50 ",(0,a.kt)("strong",{parentName:"p"},"veth")," \u7d66\u6253\u901a\u4e86\u3002"),(0,a.kt)("p",null,"\u6700\u5f8c\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u8a2d\u7acb\u8a72 ",(0,a.kt)("strong",{parentName:"p"},"network namespace")," \u88e1\u9762\u4f7f\u7528\u7684 IP \u5730\u5740"),(0,a.kt)("h2",{id:"step-4"},"Step 4"),(0,a.kt)("p",null,"\u7531\u65bc\u5148\u524d\u7684 ",(0,a.kt)("strong",{parentName:"p"},"config")," \u4ee5\u53ca\u76f8\u95dc\u7684\u7d50\u69cb\u5df2\u7d93\u6709\u5c07 ",(0,a.kt)("strong",{parentName:"p"},"IP")," \u7684\u6b04\u4f4d\u7d66\u8a2d\u5b9a\u597d\u4e86\uff0c\u56e0\u6b64\u63a5\u4e0b\u4f86\u6211\u5011\u53ea\u8981\u91dd\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"\u8a2d\u5b9aIP")," \u9019\u500b\u6b65\u9a5f\u9032\u884c\u63a2\u8a0e"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5275\u5efa ",(0,a.kt)("strong",{parentName:"li"},"veth")," \u5f8c\u6211\u5011\u9084\u9700\u8981\u984d\u5916\u53d6\u5f97\u7576\u524d ",(0,a.kt)("strong",{parentName:"li"},"eth10")," \u7684 ",(0,a.kt)("strong",{parentName:"li"},"netlink")," \u7269\u4ef6\uff0c\u9019\u6a23\u624d\u53ef\u4ee5\u900f\u904e ",(0,a.kt)("strong",{parentName:"li"},"netlink")," \u5c0d\u8a72\u7269\u4ef6\u9032\u884c ",(0,a.kt)("strong",{parentName:"li"},"IP")," \u7684\u8a2d\u5b9a"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"netlink")," \u8a2d\u5b9a IP \u7684\u65b9\u5f0f\u662f\u900f\u904e\u7269\u4ef6 ",(0,a.kt)("strong",{parentName:"li"},"ip.IPNet"),", \u9019\u908a\u8981\u600e\u9ebc\u5275\u9020\u9019\u500b\u7269\u4ef6\u65b9\u6cd5\u767e\u767e\u7a2e\uff0c\u4e5f\u8ddf\u4f60\u600e\u9ebc\u8a2d\u8a08\u81ea\u5df1\u7684 config \u6709\u95dc\u3002")),(0,a.kt)("p",null,"\u8ddf\u525b\u525b\u4e0a\u8ff0\u4e0d\u540c\uff0c\u9019\u6b21\u5275\u5efa ",(0,a.kt)("strong",{parentName:"p"},"veth")," \u914d\u5c0d\u7684\u6642\u5019\uff0c\u6211\u5011\u7b2c\u4e8c\u500b\u7269\u4ef6\u4e5f\u8981\u4e00\u4f75\u6536\u96c6 ",(0,a.kt)("strong",{parentName:"p"},"containerVeth"),"\uff0c\u4ee3\u8868\u7684\u5c31\u662f ",(0,a.kt)("strong",{parentName:"p"},"eth10")," \u9019\u5f35\u7db2\u5361\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"        hostVeth, containerVeth, err := ip.SetupVeth(args.IfName, 1500, hostNS)\n        if err != nil {\n            return err\n        }\n\n        hostIface.Name = hostVeth.Name\n")),(0,a.kt)("p",null,"\u56e0\u70ba config \u5167\u76ee\u524d\u7684\u8a2d\u8a08\u662f ",(0,a.kt)("strong",{parentName:"p"},"192.168.1.12/24")," \u9019\u7a2e CIDR \u7684\u683c\u5f0f\uff0c\u6240\u4ee5\u6211\u76f4\u63a5\u63a1\u7528 ",(0,a.kt)("strong",{parentName:"p"},"net.ParseCIDR")," \u7684\u65b9\u5f0f\u4f86\u89e3\u8b80\u8a72\u683c\u5f0f\uff0c\u4e26\u4e14\u53ef\u4ee5\u76f4\u63a5\u53d6\u5f97 ",(0,a.kt)("strong",{parentName:"p"},"ip.IPNet")," \u7684\u7269\u4ef6\u3002"),(0,a.kt)("p",null,"\u7531\u65bc ",(0,a.kt)("strong",{parentName:"p"},"ParseCIDR")," \u7522\u751f\u5f8c\u7684 IPNet \u7269\u4ef6\uff0c\u653e\u7f6e\u7684\u662f\u7db2\u6bb5\u5167\u5bb9\u4e26\u975e IP \u8cc7\u8a0a\uff0c\u6211\u5011\u9700\u8981\u5c07 IP \u7684\u90e8\u5206\u91cd\u65b0\u8986\u84cb"),(0,a.kt)("p",null,"\u5047\u5982\u6211\u5011\u50b3\u9032\u53bb\u7684\u53c3\u6578\u662f ",(0,a.kt)("strong",{parentName:"p"},"192.168.2.12/24"),", \u5247\u5275\u5efa\u51fa\u4f86\u7684 ",(0,a.kt)("strong",{parentName:"p"},"ip.IPNet")," \u6703\u9577"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"\nIPNet{\n    192.0.2.0/24\n}\n")),(0,a.kt)("p",null,"\u4f46\u662f\u8981\u50b3\u5165\u7d66 ",(0,a.kt)("strong",{parentName:"p"},"netlink")," \u7684\u7269\u4ef6\uff0c\u6211\u5011\u5e0c\u671b\u662f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"IPNet{\n    192.0.2.12/24\n}\n")),(0,a.kt)("p",null,"\u56e0\u6b64\u9700\u8981\u628a ",(0,a.kt)("strong",{parentName:"p"},"IP"),"\u6b04\u4f4d\u91cd\u65b0\u8a2d\u5b9a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"        ipv4Addr, ipv4Net, err := net.ParseCIDR(sb.IP)\n        if err != nil {\n            return err\n        }\n        ipv4Net.IP = ipv4Addr\n")),(0,a.kt)("p",null,"\u6700\u5f8c\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"netlink")," \u7684\u65b9\u5f0f\u5148\u628a ",(0,a.kt)("strong",{parentName:"p"},"eth10")," \u7684\u7269\u4ef6\u627e\u51fa\u4f86\uff0c\u63a5\u8005\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"netlink")," \u7684\u65b9\u5f0f\u53bb\u8a2d\u5b9a ",(0,a.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'\n        link, err := netlink.LinkByName(containerVeth.Name)\n        if err != nil {\n            return err\n        }\n\n        addr := &netlink.Addr{IPNet: ipv4Net, Label: ""}\n        if err = netlink.AddrAdd(link, addr); err != nil {\n            return err\n        }\n\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},'$ cat  config\n{\n        "name": "mynet",\n        "BridgeName": "test",\n        "IP": "192.0.2.12/24"\n}\n\n# Teardown all resoureces\n$ sudo ip netns del ns1\n$ sudo ifconfig test down\n$ sudo brctl delbr test\n\n# Create network namespace\n$ sudo ip netns add ns1\n\n$ sudo CNI_COMMAND=ADD CNI_CONTAINERID=ns1 CNI_NETNS=/var/run/netns/ns1 CNI_IFNAME=eth10 CNI_PATH=`pwd` ./mycni < config\n$ sudo brctl show test\nbridge name     bridge id               STP enabled     interfaces\ntest            8000.6a5cc34310be       no              veth99b22b47\n$ sudo ip netns exec ns1 ifconfig -a\neth10     Link encap:Ethernet  HWaddr 9a:f9:1c:98:9b:7c\n          inet addr:192.0.2.12  Bcast:192.0.2.255  Mask:255.255.255.0\n          inet6 addr: fe80::98f9:1cff:fe98:9b7c/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:1 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:1 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:90 (90.0 B)  TX bytes:90 (90.0 B)\n\nlo        Link encap:Local Loopback\n          LOOPBACK  MTU:65536  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n')),(0,a.kt)("p",null,"\u9019\u6642\u5019\u4f60\u5982\u679c\u5617\u8a66\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"ping")," \u53bb\u6e2c\u8a66\u525b\u525b\u5275\u5efa\u597d\u7684 ",(0,a.kt)("strong",{parentName:"p"},"IP"),"\uff0c\u4f60\u6703\u767c\u73fe\u5b8c\u5168\u6253\u4e0d\u901a\uff0c\u4e3b\u8981\u554f\u984c\u6709\u5169\u500b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7cfb\u7d71\u4e0a\u6c92\u6709\u914d\u7f6e\u9069\u7576\u7684 routing"),(0,a.kt)("li",{parentName:"ol"},"\u8de8\u7db2\u6bb5\u9023\u63a5\u6c92\u6709\u5c0d\u61c9\u7684 gateway \u5e6b\u5fd9\u8f49\u767c")),(0,a.kt)("p",null,"\u6700\u7c21\u55ae\u7684\u8fa6\u6cd5\u5c31\u662f\u5e6b Linux Bridge \u8a2d\u5b9a\u4e00\u500b IP\uff0c\u8b6c\u5982 ",(0,a.kt)("strong",{parentName:"p"},"192.0.2.1")," \u5373\u53ef\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},"$ ping 192.0.2.15\nPING 192.0.2.15 (192.0.2.15) 56(84) bytes of data.\n^C\n--- 192.0.2.15 ping statistics ---\n1 packets transmitted, 0 received, 100% packet loss, time 0ms\n\n$ sudo ifconfig test 192.0.2.1/24\n$ ping 192.0.2.15\nPING 192.0.2.15 (192.0.2.15) 56(84) bytes of data.\n64 bytes from 192.0.2.15: icmp_seq=1 ttl=64 time=0.038 ms\n64 bytes from 192.0.2.15: icmp_seq=2 ttl=64 time=0.023 ms\n")),(0,a.kt)("h1",{id:"summay"},"Summay"),(0,a.kt)("p",null,"\u7d93\u904e\u4e86\u56db\u500b\u7c21\u55ae\u7684\u7bc4\u4f8b\u6211\u5011\u6210\u529f\u7684\u64b0\u5beb\u4e86\u4e00\u500b\u57fa\u65bc CNI \u6a19\u6e96\u7684\u89e3\u6c7a\u65b9\u6848\uff0c\u5167\u5bb9\u975e\u5e38\u7c21\u55ae\u5c31\u662f\u5c07 ",(0,a.kt)("strong",{parentName:"p"},"host")," \u8207 ",(0,a.kt)("strong",{parentName:"p"},"network namespace")," \u9023\u63a5\u8d77\u4f86\u4e26\u4e14\u8a2d\u5b9aIP\u3002 \u76ee\u524d\u7684\u505a\u6cd5\u9084\u6709\u5f88\u591a\u554f\u984c\u9700\u8981\u6539\u5584"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u76f8\u95dc\u7684 Routing \u6c92\u6709\u8a2d\u5b9a\uff0c\u5c01\u5305\u51fa\u4e0d\u53bb\u4e5f\u9032\u4e0d\u4f86"),(0,a.kt)("li",{parentName:"ol"},"\u6c92\u6709\u8a2d\u5b9a\u76f8\u95dc\u7684 SNAT, ",(0,a.kt)("strong",{parentName:"li"},"network namespace")," \u5167\u7684\u5c01\u5305\u53ef\u80fd\u51fa\u4e0d\u53bb"),(0,a.kt)("li",{parentName:"ol"},"IP \u5b8c\u5168\u5beb\u6b7b\uff0c\u9019\u610f\u5473\u5982\u679c\u91dd\u5c0d\u7b2c\u4e8c\u500b ",(0,a.kt)("strong",{parentName:"li"},"network namespace")," \u53bb\u57f7\u884c\u5c31\u6703\u767c\u751f IP \u76f8\u540c\u4e14\u885d\u7a81\u7684\u554f\u984c")),(0,a.kt)("p",null,"\u6240\u4ee5\u70ba\u4e86\u5b8c\u6210\u4e00\u500b\u582a\u7528\u7684 CNI\uff0c\u80cc\u5f8c\u8981\u505a\u7684\u4e8b\u60c5\u5176\u5be6\u6eff\u591a\u7684\uff0c\u70ba\u4e86\u8b93\u7db2\u8def\u53ef\u4ee5\u65bc\u5404\u5f0f\u5404\u6a23\u7684\u74b0\u5883\u5167\u90fd\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff0c\u9019\u90e8\u5206\u9700\u8981\u505a\u5f88\u591a\u7684\u8655\u7406\u8207\u5224\u65b7\u3002"),(0,a.kt)("p",null,"\u4e0b\u6587\u7ae0\u6211\u5011\u8981\u4f86\u63a2\u8a0e ",(0,a.kt)("strong",{parentName:"p"},"IP")," \u5206\u914d\u7684\u554f\u984c\uff0c\u770b\u770b\u76ee\u524d\u5b98\u65b9\u7dad\u8b77\u7684\u4e09\u5957 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/tree/master/plugins/ipam"},"IPAM")," \u5206\u5225\u662f\u54ea\u4e9b\u4ee5\u53ca\u5982\u4f55\u904b\u4f5c\u624d\u53ef\u4ee5\u907f\u514d\u5404\u7a2e IP \u885d\u7a81\u4e14\u5beb\u6b7b\u7684\u554f\u984c\u3002"),(0,a.kt)("h1",{id:"\u53c3\u8003"},"\u53c3\u8003"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/hwchiu/CNI_Tutorial_2018"},"https://github.com/hwchiu/CNI_Tutorial_2018")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/containernetworking/plugins"},"https://github.com/containernetworking/plugins")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/containernetworking/cni"},"https://github.com/containernetworking/cni"))))}m.isMDXComponent=!0}}]);