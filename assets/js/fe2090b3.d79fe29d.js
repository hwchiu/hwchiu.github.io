"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[24005],{3905:(n,t,e)=>{e.d(t,{Zo:()=>s,kt:()=>k});var a=e(67294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function p(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?p(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):p(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},p=Object.keys(n);for(a=0;a<p.length;a++)e=p[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(n);for(a=0;a<p.length;a++)e=p[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var i=a.createContext({}),_=function(n){var t=a.useContext(i),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},s=function(n){var t=_(n.components);return a.createElement(i.Provider,{value:t},n.children)},m="mdxType",N={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,p=n.originalType,i=n.parentName,s=l(n,["components","mdxType","originalType","parentName"]),m=_(e),u=r,k=m["".concat(i,".").concat(u)]||m[u]||N[u]||p;return e?a.createElement(k,o(o({ref:t},s),{},{components:e})):a.createElement(k,o({ref:t},s))}));function k(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var p=e.length,o=new Array(p);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=n,l[m]="string"==typeof n?n:r,o[1]=l;for(var _=2;_<p;_++)o[_]=e[_];return a.createElement.apply(null,o)}return a.createElement.apply(null,e)}u.displayName="MDXCreateElement"},88662:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>N,frontMatter:()=>p,metadata:()=>l,toc:()=>_});var a=e(87462),r=(e(67294),e(3905));const p={title:"Linux NAT Masquerade \u7814\u7a76(\u4e0a)",keywords:["iptables","nat"],date:new Date("2019-12-30T05:43:35.000Z"),tags:["Network","Linux","iptables"],description:"\u672c\u7bc7\u6587\u7ae0\u900f\u904e\u95b1\u8b80\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u4f86\u5b78\u7fd2 MASQUERADE \u7684\u904b\u4f5c\u6a21\u5f0f\uff0c\u800c MASQUERADE \u5247\u662f\u88ab\u5ee3\u70ba\u4f7f\u7528\u7684 SOURCE NAT \u6a21\u7d44\u3002\u4f5c\u70ba\u4e00\u500b IPTABLES \u7684\u64f4\u5145\u6a21\u7d44\uff0c\u900f\u904e\u89c0\u5bdf\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b78\u7fd2\u5230\u662f\u5982\u4f55\u8655\u7406\u76f8\u95dc\u7684\u53c3\u6578\u751a\u81f3\uff0c\u9078\u64c7\u4f86\u6e90 IP \u5730\u5740\u4ee5\u53ca\u4f86\u6e90\u9023\u63a5\u57e0\u7b49\u76f8\u95dc\u884c\u70ba"},o="Preface",l={unversionedId:"techPost/2019/iptables-masquerade",id:"techPost/2019/iptables-masquerade",title:"Linux NAT Masquerade \u7814\u7a76(\u4e0a)",description:"\u672c\u7bc7\u6587\u7ae0\u900f\u904e\u95b1\u8b80\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u4f86\u5b78\u7fd2 MASQUERADE \u7684\u904b\u4f5c\u6a21\u5f0f\uff0c\u800c MASQUERADE \u5247\u662f\u88ab\u5ee3\u70ba\u4f7f\u7528\u7684 SOURCE NAT \u6a21\u7d44\u3002\u4f5c\u70ba\u4e00\u500b IPTABLES \u7684\u64f4\u5145\u6a21\u7d44\uff0c\u900f\u904e\u89c0\u5bdf\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b78\u7fd2\u5230\u662f\u5982\u4f55\u8655\u7406\u76f8\u95dc\u7684\u53c3\u6578\u751a\u81f3\uff0c\u9078\u64c7\u4f86\u6e90 IP \u5730\u5740\u4ee5\u53ca\u4f86\u6e90\u9023\u63a5\u57e0\u7b49\u76f8\u95dc\u884c\u70ba",source:"@site/docs/techPost/2019/iptables-masquerade.md",sourceDirName:"techPost/2019",slug:"/techPost/2019/iptables-masquerade",permalink:"/docs/techPost/2019/iptables-masquerade",draft:!1,tags:[{label:"Network",permalink:"/docs/tags/network"},{label:"Linux",permalink:"/docs/tags/linux"},{label:"iptables",permalink:"/docs/tags/iptables"}],version:"current",frontMatter:{title:"Linux NAT Masquerade \u7814\u7a76(\u4e0a)",keywords:["iptables","nat"],date:"2019-12-30T05:43:35.000Z",tags:["Network","Linux","iptables"],description:"\u672c\u7bc7\u6587\u7ae0\u900f\u904e\u95b1\u8b80\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u4f86\u5b78\u7fd2 MASQUERADE \u7684\u904b\u4f5c\u6a21\u5f0f\uff0c\u800c MASQUERADE \u5247\u662f\u88ab\u5ee3\u70ba\u4f7f\u7528\u7684 SOURCE NAT \u6a21\u7d44\u3002\u4f5c\u70ba\u4e00\u500b IPTABLES \u7684\u64f4\u5145\u6a21\u7d44\uff0c\u900f\u904e\u89c0\u5bdf\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u53ef\u4ee5\u5b78\u7fd2\u5230\u662f\u5982\u4f55\u8655\u7406\u76f8\u95dc\u7684\u53c3\u6578\u751a\u81f3\uff0c\u9078\u64c7\u4f86\u6e90 IP \u5730\u5740\u4ee5\u53ca\u4f86\u6e90\u9023\u63a5\u57e0\u7b49\u76f8\u95dc\u884c\u70ba"},sidebar:"techPost",previous:{title:"Introduction to Kubernetes Ingress (Nginx)",permalink:"/docs/techPost/2019/ingress-1"},next:{title:"\u4f60\u5230\u5e95\u77e5\u4e0d\u77e5\u9053\u4ec0\u9ebc\u662f Kubernetes?",permalink:"/docs/techPost/2019/k8s-concept"}},i={},_=[{value:"UserSpace",id:"userspace",level:2},{value:"Kernel Space",id:"kernel-space",level:2},{value:"\u591a\u91cd IP \u9078\u64c7",id:"\u591a\u91cd-ip-\u9078\u64c7",level:3},{value:"\u4f86\u6e90\u9023\u63a5\u57e0\u7684\u9078\u64c7",id:"\u4f86\u6e90\u9023\u63a5\u57e0\u7684\u9078\u64c7",level:3},{value:"Summary",id:"summary",level:2}],s={toc:_},m="wrapper";function N(n){let{components:t,...e}=n;return(0,r.kt)(m,(0,a.Z)({},s,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"preface"},"Preface"),(0,r.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u7528\u4f86\u63a2\u8a0e ",(0,r.kt)("strong",{parentName:"p"},"Linux")," \u5167\u6700\u5e38\u4f7f\u7528\u7684 ",(0,r.kt)("strong",{parentName:"p"},"SNAT")," \u6a21\u7d44 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u8207\u591a\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u4ea4\u4e92\u4f7f\u7528\u6642\u9047\u5230\u7684\u554f\u984c\u3002"),(0,r.kt)("p",null,"\u5c0d\u65bc ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u9019\u500b\u6307\u4ee4\u4f86\u8aaa\uff0c\u4e00\u822c\u6700\u5e38\u898b\u7684\u4f7f\u7528\u60c5\u5883\u5c31\u662f\u52d5\u614b ",(0,r.kt)("strong",{parentName:"p"},"Source NAT"),"\uff0c\u6839\u64da\u60c5\u6cc1\u52d5\u614b\u4fee\u6539\u5c01\u5305\u7684\u4f86\u6e90\u5730\u5740\uff0c\u8b6c\u5982\u4e0b\u5217\u6307\u4ee4"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-A POSTROUTING -s 172.18.0.0/16 ! -o docker0 -j MASQUERADE\n")),(0,r.kt)("p",null,"\u8207\u4e4b\u76f8\u5c0d\u7684\u53e6\u5916\u4e00\u500b\u6307\u4ee4\u5247\u662f\u975c\u614b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Source NAT")," \u529f\u80fd\uff0c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-A POSTROUTING -o eth0 -j SNAT --to 1.2.3.4\n")),(0,r.kt)("p",null,"\u660e\u78ba\u7684\u6307\u51fa\u5c01\u5305\u8f49\u63db\u5f8c\u7684\u4f86\u6e90\u5730\u5740\uff0c\u5c31\u6211\u500b\u4eba\u7684\u7d93\u9a57\u4f86\u8aaa\uff0c\u9019\u500b\u529f\u80fd\u6bd4\u8f03\u5c11\u88ab\u4f7f\u7528\uff0c\u4e3b\u8981\u662f\u8981\u5beb\u6b7b\u51fa\u53bb\u7684\u5c01\u5305\u5730\u5740\uff0c\u56e0\u6b64\u4e00\u65e6\u7cfb\u7d71\u4e0a\u95dc\u65bc ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u6709\u4efb\u4f55\u4fee\u6539\u7684\u6642\u5019\uff0c\u76f8\u95dc\u7684\u898f\u5247\u5168\u90e8\u90fd\u8981\u91cd\u65b0\u8abf\u6574\u3002"),(0,r.kt)("p",null,"\u5be6\u52d9\u4e0a\u9019\u4e5f\u727d\u626f\u5230\u6eff\u591a\u7cfb\u7d71\u7684\u8a2d\u5b9a\uff0c\u56e0\u6b64\u5927\u90e8\u5206\u7684\u60c5\u5883\u90fd\u6703\u559c\u6b61\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u7684\u65b9\u5f0f\uff0c\u8b93 ",(0,r.kt)("strong",{parentName:"p"},"Linux Kernel")," \u4f86\u6839\u64da\u7cfb\u7d71\u7576\u524d\u8a2d\u5b9a\u4f86\u9078\u64c7\u8981\u4f7f\u7528\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u3002"),(0,r.kt)("p",null,"\u800c\u9019\u7bc7\u6587\u7ae0\u7684\u8a95\u751f\u8d77\u56e0\u975e\u5e38\u7c21\u55ae\uff0c\u6211\u65bc\u67d0\u5929\u9047\u5230\u4e86\u4e00\u500b\u60c5\u6cc1\uff0c\u4e00\u500b\u7db2\u5361\u4ecb\u9762\u672c\u8eab\u88ab\u6307\u5b9a\u4e86\u591a\u500b",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u90a3\u9019\u7a2e\u60c5\u6cc1\u4e0b ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u6703\u600e\u9ebc\u904b\u4f5c\uff0c\u6703\u600e\u9ebc\u6311\u9078?"),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u7684\u6587\u7ae0\u5c31\u6703\u91dd\u5c0d ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u7684\u5be6\u73fe\u9032\u884c\u63a2\u8a0e\u4e26\u4e14\u5617\u8a66\u56de\u7b54\u4e0a\u8ff0\u7684\u554f\u984c"),(0,r.kt)("h1",{id:"\u74b0\u5883\u8a2d\u5b9a"},"\u74b0\u5883\u8a2d\u5b9a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://elixir.bootlin.com/linux/v4.15.18/source"},"Linux Kernel 4.15.18")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://git.netfilter.org/iptables/tree/extensions/libip6t_MASQUERADE.c?h=v1.6.1"},"iptables  v.1.6.1"))),(0,r.kt)("h1",{id:"\u554f\u984c\u63cf\u8ff0"},"\u554f\u984c\u63cf\u8ff0"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u6700\u521d\u7684\u8a8d\u77e5\uff0c\u6703\u91dd\u5c0d\u4e0d\u540c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Routing")," \u898f\u5247\u9078\u51fa\u4e0d\u540c\u7684\u7db2\u8def\u4ecb\u9762\u4f5c\u70ba\u76ee\u7684\u5730\uff0c\u4e26\u4e14\u9078\u64c7\u8a72\u7db2\u8def\u4ecb\u9762\u672c\u8eab\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u4f5c\u70ba\u5c01\u5305\u6700\u5f8c\u7684\u4f86\u6e90\u5730\u5740\u3002"),(0,r.kt)("p",null,"\u4f46\u662f\u5982\u679c\u4eca\u5929\u4e00\u500b\u7db2\u8def\u4ecb\u9762\u672c\u8eab\u6709\u591a\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u90a3 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u9019\u500b\u529f\u80fd\u5230\u5e95\u6703\u600e\u9ebc\u53bb\u9078\u64c7 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff1f \u6b64\u5916\u5230\u5e95\u662f\u600e\u9ebc\u9078\u64c7\u76f8\u95dc\u7684\u9023\u63a5\u57e0 ",(0,r.kt)("strong",{parentName:"p"},"source port")," ?"),(0,r.kt)("p",null,"\u91dd\u5c0d\u9019\u500b\u554f\u984c\uff0c\u6211\u6c7a\u5b9a\u63a1\u7528\u5169\u500b\u6b65\u9a5f\u4f86\u7814\u7a76\u9019\u500b\u554f\u984c\uff0c\u9996\u5148\u6211\u5011\u5148\u91dd\u5c0d ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u7684\u67b6\u69cb\u4ee5\u53ca\u539f\u59cb\u78bc\u4f86\u9032\u884c\u7814\u7a76\u9032\u884c\u5206\u6790\u3002"),(0,r.kt)("p",null,"\u63a5\u8005\u900f\u904e\u4fee\u6539 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u4f86\u52a0\u5165\u4e00\u4e9b\u9664\u932f\u8a0a\u606f\u5e6b\u52a9\u6211\u5011\u91d0\u6e05\u5176\u904b\u4f5c\u539f\u7406\uff0c\u4e26\u4e14\u4f50\u8b49\u4e0a\u8ff0\u7684\u731c\u6e2c(\u4e0b\u7bc7)\u3002"),(0,r.kt)("h1",{id:"\u67b6\u69cb\u5206\u6790"},"\u67b6\u69cb\u5206\u6790"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u672c\u8eab\u4e0d\u662f\u4e00\u500b\u7368\u7acb\u904b\u4f5c\u7684\u5143\u4ef6\u8207\u7a0b\u5f0f\uff0c\u800c\u662f\u4e00\u500b\u57fa\u65bc ",(0,r.kt)("strong",{parentName:"p"},"netfilter/iptables")," \u6846\u67b6\u800c\u958b\u767c\u7684\u6a21\u7d44\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u4e0a\u5fc5\u9808\u642d\u914d ",(0,r.kt)("strong",{parentName:"p"},"iptables")," \u7684\u6307\u4ee4\u4f86\u4f7f\u7528\uff0c\u9019\u4e5f\u662f\u666e\u904d\u5927\u5bb6\u4f7f\u7528\u4e0a\u6700\u521d\u63a5\u89f8\u7684\u65b9\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"iptables -t nat -j MASQUERADE\n")),(0,r.kt)("p",null,"\u7531\u65bc\u6574\u500b\u67b6\u69cb\u90fd\u662f\u8ddf\u8005 ",(0,r.kt)("strong",{parentName:"p"},"netfilter/iptables")," \u4e00\u8d77\uff0c\u6240\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u672c\u8eab\u7684\u67b6\u69cb\u4e5f\u5fc5\u9808\u9075\u7167\u4e0a\u8ff0\u7684\u898f\u7bc4\u3002\u6574\u500b\u7a0b\u5f0f\u78bc\u5206\u6210\u5169\u5927\u90e8\u5206\uff0c\u5206\u5225\u662f ",(0,r.kt)("strong",{parentName:"p"},"User Space")," \u7684\u53c3\u6578\u63a7\u5236\u7aef\u4ee5\u53ca ",(0,r.kt)("strong",{parentName:"p"},"Kernel Space"),"\u7684\u908f\u8f2f\u57f7\u884c\u7aef"),(0,r.kt)("h2",{id:"userspace"},"UserSpace"),(0,r.kt)("p",null,"\u539f\u59cb\u78bc\u7684\u90e8\u5206\u8acb\u53c3\u95b1\u6b64\u6a94\u6848 ",(0,r.kt)("a",{parentName:"p",href:"https://git.netfilter.org/iptables/tree/extensions/libip6t_MASQUERADE.c?h=v1.6.1"},"iptables  v.1.6.1")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"User Space")," \u7684\u90e8\u5206\u662f\u4e00\u500b\u4f9d\u8cf4\u65bc ",(0,r.kt)("strong",{parentName:"p"},"iptables")," \u6846\u67b6\u7684\u6a21\u7d44\uff0c\u4e3b\u8981\u529f\u80fd\u5c31\u662f\u64f4\u5145 ",(0,r.kt)("strong",{parentName:"p"},"iptables")," \u9019\u500b\u6307\u4ee4\uff0c\u80fd\u5920\u652f\u63f4\u4e0d\u540c\u7684\u53c3\u6578\u8207\u7528\u6cd5\u4e26\u4e14\u5c07\u8a72\u898f\u5247\u8f38\u5165\u7684\u53c3\u6578\u9806\u5229\u5730\u8a18\u4f4f\u4e0b\u4f86\uff0c\u4e4b\u5f8c\u6703\u50b3\u5165\u5230 ",(0,r.kt)("strong",{parentName:"p"},"kernel space")," \u4e2d\u4ea4\u7d66\u771f\u6b63\u8ca0\u8cac\u8655\u7406\u5c01\u5305\u7684\u908f\u8f2f\u5340\u584a\u53bb\u8655\u7406\u3002"),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u7c21\u55ae\u7684\u770b\u4e00\u4e0b\u9019\u500b\u6a94\u6848\u7684\u5167\u5bb9\uff0c\u5feb\u901f\u7684\u770b\u4e00\u4e0b\u5373\u53ef"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'static struct xtables_target masquerade_tg_reg = {\n        .name           = "MASQUERADE",\n        .version        = XTABLES_VERSION,\n        .family         = NFPROTO_IPV4,\n        .size           = XT_ALIGN(sizeof(struct nf_nat_ipv4_multi_range_compat)),\n        .userspacesize  = XT_ALIGN(sizeof(struct nf_nat_ipv4_multi_range_compat)),\n        .help           = MASQUERADE_help,\n        .init           = MASQUERADE_init,\n        .x6_parse       = MASQUERADE_parse,\n        .print          = MASQUERADE_print,\n        .save           = MASQUERADE_save,\n        .x6_options     = MASQUERADE_opts,\n        .xlate          = MASQUERADE_xlate,\n};\n\nvoid _init(void)\n{\n    xtables_register_target(&masquerade_tg_reg);\n}\n')),(0,r.kt)("p",null,"\u5c0d\u65bc\u6bcf\u500b ",(0,r.kt)("strong",{parentName:"p"},"iptable module(xtables)")," \u4f86\u8aaa\u90fd\u5fc5\u9808\u8981\u5be6\u73fe\u4e00\u500b\u76f8\u95dc\u7684\u7d50\u69cb\uff0c\u4e26\u4e14\u91dd\u5c0d\u6bcf\u500b ",(0,r.kt)("strong",{parentName:"p"},"function pointer")," \u8a2d\u5b9a\u76f8\u95dc\u7684\u8655\u7406\u51fd\u5f0f\u3002\n\u4e26\u4e14\u900f\u904e\u4e00\u500b\u6846\u67b6\u6240\u63d0\u4f9b\u7684\u51fd\u5f0f\u53bb\u8a3b\u518a\u9019\u500b\u7d50\u69cb\uff0c\u53ea\u8981\u9019\u908a\u6210\u529f\u8655\u7406\uff0c\u5c31\u53ef\u4ee5\u900f\u904e ",(0,r.kt)("strong",{parentName:"p"},"iptables")," \u7684\u6307\u4ee4\u4f86\u64cd\u4f5c\u9019\u500b\u64f4\u5145\u529f\u80fd ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE"),"\u3002"),(0,r.kt)("p",null,"\u9019\u88e1\u9762\u6709\u6eff\u591a\u7684\u51fd\u5f0f\uff0c\u5c31\u91dd\u5c0d\u6bd4\u8f03\u91cd\u8981\u7684\u4f86\u770b\uff0c\u4e5f\u5c31\u662f\u91dd\u5c0d\u53c3\u6578\u8655\u7406\u7684\u90e8\u5206 ",(0,r.kt)("strong",{parentName:"p"},"x6_parse("),"MASQUERADE_parse",(0,r.kt)("strong",{parentName:"p"},")")," \u4f86\u770b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'static const struct xt_option_entry MASQUERADE_opts[] = {\n    {.name = "to-ports", .id = O_TO_PORTS, .type = XTTYPE_STRING},\n    {.name = "random", .id = O_RANDOM, .type = XTTYPE_NONE},\n    XTOPT_TABLEEND,\n};\n')),(0,r.kt)("p",null,"\u5c0d\u65bc\u6bcf\u500b ",(0,r.kt)("strong",{parentName:"p"},"iptables")," \u7684\u64f4\u5145\u6a21\u7d44\u4f86\u8aaa\uff0c\u90fd\u53ef\u4ee5\u900f\u904e\u5b9a\u7fa9 ",(0,r.kt)("strong",{parentName:"p"},"xt_option_entry")," \u985e\u5225\u4f86\u5b9a\u7fa9\u8981\u4f7f\u7528\u7684\u53c3\u6578\u4ee5\u53ca\u578b\u614b\uff0c\u6240\u4ee5\u5176\u5be6 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u672c\u8eab\u9084\u6709\u5169\u500b\u53c3\u6578\u53ef\u4ee5\u4f7f\u7528\uff0c\u5206\u5225\u662f ",(0,r.kt)("strong",{parentName:"p"},"to-ports")," \u4ee5\u53ca ",(0,r.kt)("strong",{parentName:"p"},"random"),"\uff0c\u81f3\u65bc\u771f\u6b63\u7684\u542b\u7fa9\u4ee5\u53ca\u7528\u9014\u5c31\u8981\u770b ",(0,r.kt)("strong",{parentName:"p"},"help")," \u6216\u662f\u76f4\u63a5\u770b\u5e95\u5c64\u7684\u5be6\u73fe\u4f86\u4e86\u89e3\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'static void MASQUERADE_parse(struct xt_option_call *cb)\n{\n        const struct ipt_entry *entry = cb->xt_entry;\n        int portok;\n        struct nf_nat_ipv4_multi_range_compat *mr = cb->data;\n\n        if (entry->ip.proto == IPPROTO_TCP\n            || entry->ip.proto == IPPROTO_UDP\n            || entry->ip.proto == IPPROTO_SCTP\n            || entry->ip.proto == IPPROTO_DCCP\n            || entry->ip.proto == IPPROTO_ICMP)\n                portok = 1;\n        else\n                portok = 0;\n\n        xtables_option_parse(cb);\n        switch (cb->entry->id) {\n        case O_TO_PORTS:\n                if (!portok)\n                        xtables_error(PARAMETER_PROBLEM,\n                                   "Need TCP, UDP, SCTP or DCCP with port specification");\n                parse_ports(cb->arg, mr);\n                break;\n        case O_RANDOM:\n                mr->range[0].flags |=  NF_NAT_RANGE_PROTO_RANDOM;\n                break;\n        }\n}\n\n')),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u5167\u5bb9\u7d30\u7bc0\u4e0d\u592a\u9700\u8981\u77e5\u9053\uff0c\u53ea\u8981\u77e5\u9053\u5176\u904b\u4f5c\u6d41\u7a0b\u5c31\u662f\u89e3\u6790\u898f\u5247\u7684\u53c3\u6578\u4e26\u4e14\u8a2d\u5b9a\u76f8\u95dc\u7684\u8cc7\u6599\u7d50\u69cb ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_ipv4_multi_range_compat"),"\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_ipv4_multi_range_compat")," \u9019\u500b\u7d50\u69cb\u6703\u9700\u8981\u5b9a\u7fa9\u5169\u4efd\uff0c\u4e00\u4efd\u7d66 ",(0,r.kt)("strong",{parentName:"p"},"iptables")," \u7684\u6307\u4ee4\u7528\uff0c\u53e6\u5916\u4e00\u4efd\u7d66 ",(0,r.kt)("strong",{parentName:"p"},"kernel-space")," \u4f7f\u7528\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u8a72\u7d50\u69cb\u7684\u5b9a\u7fa9\uff0c\u57fa\u672c\u4e0a\u5c0d\u65bc ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u4f86\u8aaa\u5176\u5169\u500b\u53c3\u6578\u6700\u4e3b\u8981\u8a2d\u5b9a\u7684\u5167\u5bb9\u5c31\u662f\u5982\u4f55\u9078\u64c7 ",(0,r.kt)("strong",{parentName:"p"},"source port"),"\uff0c\u7576\u5c01\u5305\u9032\u884c ",(0,r.kt)("strong",{parentName:"p"},"source NAT")," \u8f49\u63db\u5f8c\u9023\u63a5\u57e0\u8a72\u600e\u9ebc\u9078\u64c7\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"#ifndef _NETFILTER_NF_NAT_H\n#define _NETFILTER_NF_NAT_H\n\n#include <linux/netfilter.h>\n#include <linux/netfilter/nf_conntrack_tuple_common.h>\n\n#define NF_NAT_RANGE_MAP_IPS                    (1 << 0)\n#define NF_NAT_RANGE_PROTO_SPECIFIED            (1 << 1)\n#define NF_NAT_RANGE_PROTO_RANDOM               (1 << 2)\n#define NF_NAT_RANGE_PERSISTENT                 (1 << 3)\n#define NF_NAT_RANGE_PROTO_RANDOM_FULLY         (1 << 4)\n\n#define NF_NAT_RANGE_PROTO_RANDOM_ALL           \\\n        (NF_NAT_RANGE_PROTO_RANDOM | NF_NAT_RANGE_PROTO_RANDOM_FULLY)\n\nstruct nf_nat_ipv4_range {\n        unsigned int                    flags;\n        __be32                          min_ip;\n        __be32                          max_ip;\n        union nf_conntrack_man_proto    min;\n        union nf_conntrack_man_proto    max;\n};\n\nstruct nf_nat_ipv4_multi_range_compat {\n        unsigned int                    rangesize;\n        struct nf_nat_ipv4_range        range[1];\n};\n\nstruct nf_nat_range {\n        unsigned int                    flags;\n        union nf_inet_addr              min_addr;\n        union nf_inet_addr              max_addr;\n        union nf_conntrack_man_proto    min_proto;\n        union nf_conntrack_man_proto    max_proto;\n};\n\n#endif /* _NETFILTER_NF_NAT_H */\n")),(0,r.kt)("h2",{id:"kernel-space"},"Kernel Space"),(0,r.kt)("p",null,"\u539f\u59cb\u78bc\u7684\u90e8\u5206\u8acb\u53c3\u95b1\u6b64\u9023\u7d50 ",(0,r.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15.18/source"},"Linux Kernel 4.15.18")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"kernel space")," \u5247\u662f\u6574\u500b\u5c01\u5305\u908f\u8f2f\u904b\u4f5c\u7684\u6838\u5fc3\uff0c\u5305\u542b\u4e86"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u600e\u9ebc\u6839\u64da\u4f7f\u7528\u8f38\u5165\u7684\u53c3\u6578\u4f86\u6311\u9078 ",(0,r.kt)("strong",{parentName:"li"},"source port")),(0,r.kt)("li",{parentName:"ol"},"\u5982\u4f55\u52d5\u614b\u9078\u64c7\u7db2\u8def\u5361\u4ecb\u9762\u4e0a\u7684 ",(0,r.kt)("strong",{parentName:"li"},"IP")," \u5730\u5740\uff0c\u5982\u679c\u6709\u591a\u500b\u6703\u600e\u9ebc\u9078\u64c7")),(0,r.kt)("p",null,"\u6211\u5011\u7684\u9032\u5165\u9ede\u662f\u9019\u500b\u6a94\u6848 ",(0,r.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15.18/source/net/ipv4/netfilter/ipt_MASQUERADE.c#L34"},"ipt_MASQUERADE.c")),(0,r.kt)("h3",{id:"\u591a\u91cd-ip-\u9078\u64c7"},"\u591a\u91cd IP \u9078\u64c7"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"...\nstatic unsigned int\nmasquerade_tg(struct sk_buff *skb, const struct xt_action_param *par)\n{\n    struct nf_nat_range range;\n    const struct nf_nat_ipv4_multi_range_compat *mr;\n\n    mr = par->targinfo;\n    range.flags = mr->range[0].flags;\n    range.min_proto = mr->range[0].min;\n    range.max_proto = mr->range[0].max;\n\n    return nf_nat_masquerade_ipv4(skb, xt_hooknum(par), &range,\n                      xt_out(par));\n}\n...\n")),(0,r.kt)("p",null,"\u6982\u5ff5\u4e5f\u662f\u975e\u5e38\u7c21\u55ae\uff0c\u5f9e ",(0,r.kt)("strong",{parentName:"p"},"xt_action_param")," \u9019\u500b\u8b8a\u6578\u53d6\u51fa\u4f7f\u7528\u8005\u5c0d\u61c9\u7684\u53c3\u6578\uff0c\u4e26\u4e14\u5f80\u5f8c\u547c\u53eb\u5176\u4ed6\u53c3\u6578\u53bb\u8655\u7406\u3002"),(0,r.kt)("p",null,"\u9019\u908a\u53ef\u4ee5\u770b\u5230\u5176\u80cc\u5f8c\u4e5f\u662f\u5c07 ",(0,r.kt)("strong",{parentName:"p"},"xt_action_param")," \u88e1\u9762\u7684",(0,r.kt)("strong",{parentName:"p"},"void*")," \u53c3\u6578\u8f49\u5411 ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_ipv4_multi_range_compat")," \u9019\u500b\u7269\u4ef6\u4f86\u8655\u7406\u3002"),(0,r.kt)("p",null,"\u56e0\u70ba\u9019\u4e9b\u7a0b\u5f0f\u78bc\u90fd\u662f\u5c6c\u65bc ",(0,r.kt)("strong",{parentName:"p"},"kernel")," \u5167\u7684\u4e00\u90e8\u4efd\uff0c\u56e0\u6b64 ",(0,r.kt)("strong",{parentName:"p"},"kernel")," \u4e5f\u6709\u4e00\u4efd\u8ddf\u4e0a\u8ff0\u975e\u5e38\u76f8\u4f3c\u7684\u7d50\u69cb\u5b9a\u7fa9\u6a94\u6848\uff0c\u5982\u4e0b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */\n#ifndef _NETFILTER_NF_NAT_H\n#define _NETFILTER_NF_NAT_H\n\n#include <linux/netfilter.h>\n#include <linux/netfilter/nf_conntrack_tuple_common.h>\n\n#define NF_NAT_RANGE_MAP_IPS            (1 << 0)\n#define NF_NAT_RANGE_PROTO_SPECIFIED        (1 << 1)\n#define NF_NAT_RANGE_PROTO_RANDOM       (1 << 2)\n#define NF_NAT_RANGE_PERSISTENT         (1 << 3)\n#define NF_NAT_RANGE_PROTO_RANDOM_FULLY     (1 << 4)\n\n#define NF_NAT_RANGE_PROTO_RANDOM_ALL       \\\n    (NF_NAT_RANGE_PROTO_RANDOM | NF_NAT_RANGE_PROTO_RANDOM_FULLY)\n\n#define NF_NAT_RANGE_MASK                   \\\n    (NF_NAT_RANGE_MAP_IPS | NF_NAT_RANGE_PROTO_SPECIFIED |  \\\n     NF_NAT_RANGE_PROTO_RANDOM | NF_NAT_RANGE_PERSISTENT |  \\\n     NF_NAT_RANGE_PROTO_RANDOM_FULLY)\n\nstruct nf_nat_ipv4_range {\n    unsigned int            flags;\n    __be32              min_ip;\n    __be32              max_ip;\n    union nf_conntrack_man_proto    min;\n    union nf_conntrack_man_proto    max;\n};\n\nstruct nf_nat_ipv4_multi_range_compat {\n    unsigned int            rangesize;\n    struct nf_nat_ipv4_range    range[1];\n};\n\nstruct nf_nat_range {\n    unsigned int            flags;\n    union nf_inet_addr      min_addr;\n    union nf_inet_addr      max_addr;\n    union nf_conntrack_man_proto    min_proto;\n    union nf_conntrack_man_proto    max_proto;\n};\n\n#endif /* _NETFILTER_NF_NAT_H */\n")),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u770b\u770b\u771f\u6b63\u7684\u908f\u8f2f\u8655\u7406\u51fd\u5f0f ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_masquerade_ipv4")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'unsigned int\nnf_nat_masquerade_ipv4(struct sk_buff *skb, unsigned int hooknum,\n               const struct nf_nat_range *range,\n               const struct net_device *out)\n{\n...\n    rt = skb_rtable(skb);\n    nh = rt_nexthop(rt, ip_hdr(skb)->daddr);\n    newsrc = inet_select_addr(out, nh, RT_SCOPE_UNIVERSE);\n    if (!newsrc) {\n        pr_info("%s ate my IP address\\n", out->name);\n        return NF_DROP;\n    }\n\n    nat = nf_ct_nat_ext_add(ct);\n    if (nat)\n        nat->masq_index = out->ifindex;\n\n    /* Transfer from original range. */\n    memset(&newrange.min_addr, 0, sizeof(newrange.min_addr));\n    memset(&newrange.max_addr, 0, sizeof(newrange.max_addr));\n    newrange.flags       = range->flags | NF_NAT_RANGE_MAP_IPS;\n    newrange.min_addr.ip = newsrc;\n    newrange.max_addr.ip = newsrc;\n    newrange.min_proto   = range->min_proto;\n    newrange.max_proto   = range->max_proto;\n\n    /* Hand modified range to generic setup. */\n    return nf_nat_setup_info(ct, &newrange, NF_NAT_MANIP_SRC);\n}\n')),(0,r.kt)("p",null,"\u524d\u9762\u4e09\u500b\u51fd\u5f0f\u5c31\u662f\u6211\u5011\u8981\u95dc\u6ce8\u7684\u7b2c\u4e00\u500b\u91cd\u9ede\uff0c\u9078\u51fa\u4e00\u500b\u53ef\u7528\u7684\u5730\u5740\u4f5c\u70ba\u5c01\u5305\u4e4b\u5f8c\u7684\u4f86\u6e90 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"    rt = skb_rtable(skb);\n    nh = rt_nexthop(rt, ip_hdr(skb)->daddr);\n    newsrc = inet_select_addr(out, nh, RT_SCOPE_UNIVERSE);\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5f9e ",(0,r.kt)("strong",{parentName:"li"},"skb")," \u53d6\u51fa\u8a72\u5c01\u5305\u5c0d\u61c9\u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"routing entry")),(0,r.kt)("li",{parentName:"ol"},"\u5f9e\u8a72 ",(0,r.kt)("inlineCode",{parentName:"li"},"routing entry")," \u4e2d\u6839\u64da\u5c01\u5305\u7684\u76ee\u7684\u4f4d\u7f6e\u9078\u51fa\u4e0b\u4e00\u500b\u7bc0\u9ede",(0,r.kt)("strong",{parentName:"li"},"next_hop")),(0,r.kt)("li",{parentName:"ol"},"\u63a5\u4e0b\u4f86\u6839\u64da\u5169\u500b\u53c3\u6578 ",(0,r.kt)("strong",{parentName:"li"},"\u4e0b\u4e00\u500b\u7bc0\u9ede\u7684IP\u5730\u5740"),", ",(0,r.kt)("strong",{parentName:"li"},"\u5df2\u7d93\u6c7a\u5b9a\u597d\u7684\u8f38\u51fa\u7db2\u8def\u4ecb\u9762")," \u4f86\u6c7a\u5b9a\u6700\u5f8c\u4f7f\u7528\u7684 ",(0,r.kt)("strong",{parentName:"li"},"IP"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"__be32 inet_select_addr(const struct net_device *dev, __be32 dst, int scope)\n{\n        __be32 addr = 0;\n        struct in_device *in_dev;\n        struct net *net = dev_net(dev);\n        int master_idx;\n\n        rcu_read_lock();\n        in_dev = __in_dev_get_rcu(dev);\n        if (!in_dev)\n                goto no_in_dev;\n\n        for_primary_ifa(in_dev) {\n                if (ifa->ifa_scope > scope)\n                        continue;\n                if (!dst || inet_ifa_match(dst, ifa)) {\n                        addr = ifa->ifa_local;\n                        break;\n                }\n                if (!addr)\n                        addr = ifa->ifa_local;\n        } endfor_ifa(in_dev);\n\n        if (addr)\n                goto out_unlock;\nno_in_dev:\n        master_idx = l3mdev_master_ifindex_rcu(dev);\n....\n")),(0,r.kt)("p",null,"\u4ed4\u7d30\u89c0\u5bdf\u4e0a\u8ff0\u7684\u6d41\u7a0b\u4e4b\u524d\uff0c\u6211\u5011\u5148\u4f86\u770b\u4e00\u500b\u64c1\u6709\u591a\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u7684\u7bc4\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash="},"vagrant@linux-study:~/linux$ ip addr show dev docker0\n4: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default\n    link/ether 02:42:5a:4d:94:32 brd ff:ff:ff:ff:ff:ff\n    inet 172.18.0.1/16 brd 172.18.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet 172.19.1.3/16 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet 172.18.0.2/16 scope global secondary docker0\n       valid_lft forever preferred_lft forever\n    inet 172.18.0.3/16 scope global secondary docker0\n       valid_lft forever preferred_lft forever\n    inet 172.18.1.3/16 scope global secondary docker0\n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("p",null,"\u9019\u500b\u7bc4\u4f8b\u4e2d\uff0c\u6211\u5011\u91dd\u5c0d ",(0,r.kt)("strong",{parentName:"p"},"docker0")," \u9019\u500b\u7db2\u5361\u8a2d\u5b9a\u4e86\u4e94\u7d44 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u5176\u4e2d\u6839\u64da\u7db2\u6bb5\u5206\u6210\u5169\u5927\u985e"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"172.18.0.0/16",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"172.18.0.1/16"),(0,r.kt)("li",{parentName:"ul"},"172.18.0.2/16"),(0,r.kt)("li",{parentName:"ul"},"172.18.0.3/16"),(0,r.kt)("li",{parentName:"ul"},"172.18.1.3/16"))),(0,r.kt)("li",{parentName:"ol"},"172.19.0.0/16",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"172.19.1.3")))),(0,r.kt)("p",null,"\u7b2c\u4e00\u500b\u7db2\u6bb5\u4e2d\u7e3d\u5171\u6709\u56db\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u4e0a\u9762\u7684\u9806\u5e8f\u5c31\u662f\u52a0\u5165\u5230\u7cfb\u7d71\u7684\u9806\u5e8f\u3002\u53ef\u4ee5\u89c0\u5bdf\u5230\u9019\u56db\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u5be6\u969b\u4e0a\u7cfb\u7d71\u4e2d\u986f\u793a\u7684\u5167\u5bb9\u6709\u4e9b\u8a31\u4e0d\u540c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash="},"    inet 172.18.0.1/16 brd 172.18.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet 172.18.0.2/16 scope global secondary docker0\n       valid_lft forever preferred_lft forever\n    inet 172.18.0.3/16 scope global secondary docker0\n       valid_lft forever preferred_lft forever\n    inet 172.18.1.3/16 scope global secondary docker0\n       valid_lft forever preferred_lft forever\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u89c0\u5bdf\u5230\u9664\u4e86\u7b2c\u4e00\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u5916\uff0c\u90fd\u88ab\u52a0\u4e0a\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"secondary")," \u7684\u63cf\u8ff0\u8a5e\uff0c\u9019\u908a\u53ef\u4ee5\u731c\u60f3\u5c0d\u65bc\u6bcf\u500b\u540c\u7db2\u6bb5\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u4f86\u8aaa\uff0c\u7531\u65bc\u90fd\u540c\u7db2\u6bb5\uff0c\u6240\u4ee5\u53ea\u6703\u6709\u4e00\u500b\u4e3b\u8981\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u4f7f\u7528\uff0c\u800c\u5176\u4ed6\u7684\u90fd\u662f\u4f5c\u70ba ",(0,r.kt)("strong",{parentName:"p"},"secondary"),"\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u500b\u7db2\u6bb5\u7531\u65bc\u53ea\u6709\u4e00\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u672c\u8eab\u4e5f\u81ea\u7136\u5c31\u6c92\u6709 ",(0,r.kt)("strong",{parentName:"p"},"secondary")," \u7684\u63cf\u8ff0\u3002"),(0,r.kt)("p",null,"\u6b64\u5916\u6bcf\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u5f8c\u9762\u90fd\u6709\u4e00\u500b\u6709\u8da3\u7684\u6b04\u4f4d ",(0,r.kt)("strong",{parentName:"p"},"scope"),"\uff0c\u9019\u500b\u6b04\u4f4d\u76ee\u524d\u6709\u56db\u500b\u503c\uff0c\u5206\u5225\u5982\u4e0b\uff0c\u7b49\u7b49\u6703\u518d\u89e3\u91cb\u9019\u500b\u503c\u7684\u7528\u9014"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"global - the address is globally valid.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"site - (IPv6 only, deprecated) the address is site local, i.e. it is valid inside this site.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"link - the address is link local, i.e. it is valid only on this device.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"host - the address is valid only inside this host."))),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u6211\u5011\u518d\u6b21\u8a8d\u771f\u7684\u56de\u6b78\u5230\u7a0b\u5f0f\u78bc\u7684\u5c64\u7d1a\u53bb\u770b\u4e00\u4e0b\u908f\u8f2f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"...\n#define for_primary_ifa(in_dev) { struct in_ifaddr *ifa; \\\n  for (ifa = (in_dev)->ifa_list; ifa && !(ifa->ifa_flags&IFA_F_SECONDARY); ifa = ifa->ifa_next)\n#define endfor_ifa(in_dev) }\n ....\n        for_primary_ifa(in_dev) {\n                if (ifa->ifa_scope > scope)\n                        continue;\n                if (!dst || inet_ifa_match(dst, ifa)) {\n                        addr = ifa->ifa_local;\n                        break;\n                }\n                if (!addr)\n                        addr = ifa->ifa_local;\n        } endfor_ifa(in_dev);\n...\n")),(0,r.kt)("p",null,"\u628a\u4e0a\u8ff0\u7684 MACRO \u7d66\u5c55\u958b\u5f8c\u6703\u5f97\u5230\u4e0b\u5217\u7684\u8ff4\u5708\u5167\u5bb9(\u6392\u7248\u904e)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"{\n    struct in_ifaddr *ifa;\n    for (ifa = (in_dev)->ifa_list; ifa && !(ifa->ifa_flags&IFA_F_SECONDARY); ifa = ifa->ifa_next) {\n        if (ifa->ifa_scope > scope)\n            continue;\n        if (!dst || inet_ifa_match(dst, ifa)) {\n            addr = ifa->ifa_local;\n            break;\n        }\n        if (!addr)\n            addr = ifa->ifa_local;\n    }\n}\n")),(0,r.kt)("p",null,"\u9996\u5148\u53ef\u4ee5\u770b\u5230\uff0c\u8a72\u908f\u8f2f\u6703\u900f\u904e\u8ff4\u5708\u7684\u65b9\u5f0f\u53bb\u53d6\u51fa ",(0,r.kt)("strong",{parentName:"p"},"(in_dev)->ifa_list")," \u5167\u7684\u6240\u6709\u6e05\u55ae\uff0c\u5176\u5be6\u5c31\u662f\u6240\u6709\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u800c\u7d42\u6b62\u689d\u4ef6\u689d\u4ef6\u5f88\u9593\u55ae\uff0c\u9047\u5230\u6700\u5f8c\u4e00\u500b\u6216\u662f\u9047\u5230\u7b2c\u4e00\u500b\u88ab\u6a19\u70ba ",(0,r.kt)("strong",{parentName:"p"},"secondary")," \u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u5c31\u6703\u505c\u4e0b\u4f86"),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u6703\u958b\u59cb\u6bd4\u8f03\u6bcf\u5f35\u7db2\u5361\u7684 ",(0,r.kt)("strong",{parentName:"p"},"scope")," \u662f\u5426\u8ddf\u53c3\u6578\u7684\u8f38\u5165\u503c\u6709\u95dc\uff0c\u9019\u500b\u7bc4\u4f8b\u4e2d\u4f7f\u7528\u5230\u7684\u662f ",(0,r.kt)("strong",{parentName:"p"},"global(RT_SCOPE_UNIVERSE=0)"),"\uff0c\u800c\u4e0a\u8ff0\u7684\u7bc4\u4f8b\u4e2d\u5168\u90e8\u90fd\u662f ",(0,r.kt)("strong",{parentName:"p"},"global"),"\uff0c\u6240\u4ee5\u57fa\u672c\u4e0a\u53ef\u4ee5\u5ffd\u7565\u9019\u500b\u9078\u9805"),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u6700\u91cd\u8981\u7684\u6bd4\u8f03\u908f\u8f2f\u662f ",(0,r.kt)("strong",{parentName:"p"},"\u5982\u679c\u77e5\u9053\u76ee\u6a19\u4f4d\u7f6e\uff0c\u5247\u6703\u78ba\u8a8d\u8a72\u76ee\u6a19\u4f4d\u7f6e\u8207\u8a72\u76ee\u6a19"),"IP",(0,r.kt)("strong",{parentName:"p"},"\u7684\u6240\u5c6c\u7db2\u6bb5\u662f\u5426\u7b26\u5408"),"\uff0c\u662f\u7684\u8a71\u5c31\u53ef\u4ee5\u7528\u9019\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u7576\u4f5c\u4f86\u6e90 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u9001\u51fa\u53bb\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"static __inline__ bool inet_ifa_match(__be32 addr, struct in_ifaddr *ifa)\n{\n        return !((addr^ifa->ifa_address)&ifa->ifa_mask);\n}\n")),(0,r.kt)("p",null,"\u9019\u500b\u6bd4\u8f03\u7684\u6982\u5ff5\u975e\u5e38\u7c21\u55ae\uff0c\u9996\u5148\u5168\u90e8\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u90fd\u9069\u7528 ",(0,r.kt)("strong",{parentName:"p"},"32"),"\u4f4d\u5143\u7684\u65b9\u5f0f\u8868\u9054\uff0c\u70ba\u4e86\u5224\u65b7\u4e00\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u662f\u4e0d\u662f\u5c6c\u65bc\u4e00\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u7db2\u6bb5\u5167\u7684\u5408\u6cd5 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u5176\u601d\u8003\u908f\u8f2f\u5982\u4e0b\n\u5047\u8a2d\u5730\u5740 A = a.b.c.d, \u7db2\u6bb5\u5247\u662f x.y.z.v/n\n\u53ea\u8981\u5224\u65b7 n bit \u4ee5\u524d\u662f\u5426\u4e00\u6a23\u5373\u53ef\uff0c\u8209\u4f8b\u4f86\u8aaa A = 172.17.8.23 , B = 172.17.12.53/16\n\u6700\u7c21\u55ae\u7684\u65b9\u5f0f\u5c31\u662f\u5c07 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u7684\u90e8\u5206\u90fd\u7528 ",(0,r.kt)("strong",{parentName:"p"},"32")," \u4f4d\u5143\u8868\u793a\uff0c\u63a5\u8005\u6bd4\u8f03\u524d ",(0,r.kt)("strong",{parentName:"p"},"n")," \u500b\u4f4d\u5143\u662f\u5426\u5b8c\u5168\u4e00\u81f4\u5373\u53ef"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A = 0xAC110817 => 10101100 00010001 00001000 00010111"),(0,r.kt)("li",{parentName:"ul"},"B = 0xAC110C35 => 10101100 00010001 00001100 00110101"),(0,r.kt)("li",{parentName:"ul"},"N = 16 => 11111111 11111111 00000000 00000000")),(0,r.kt)("p",null,"\u6240\u4ee5\u5148\u91dd\u5c0d ",(0,r.kt)("strong",{parentName:"p"},"A/B")," \u5169\u500b ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"XOR")," \u7684\u65b9\u5f0f\u4f86\u627e\u51fa\u5dee\u7570\u9ede"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A^B => 00000000 00000000 00000100 00100010")),(0,r.kt)("p",null,"\u63a5\u8005\u91dd\u5c0d\u524d N(16) \u500b\u4f4d\u5143\u6bd4\u8f03"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"(A^B)&N => 00000000 00000000 00000000 00000000")),(0,r.kt)("p",null,"\u6240\u4ee5\u53ea\u8981\u51fa\u4f86\u7684\u7d50\u679c\u662f0 \u5c31\u4ee3\u8868\u524d (N) \u500b\u4f4d\u5143\u90fd\u4e00\u81f4\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a ",(0,r.kt)("strong",{parentName:"p"},"A IP")," \u5c6c\u65bc ",(0,r.kt)("strong",{parentName:"p"},"B \u7db2\u6bb5"),"\u3002"),(0,r.kt)("p",null,"\u6240\u4ee5\u4e0a\u9762\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP"),"\u6311\u9078\u908f\u8f2f\u53ef\u4ee5\u7c21\u55ae\u6574\u7406\u6210"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u91dd\u5c0d\u6240\u6709\u975e ",(0,r.kt)("strong",{parentName:"li"},"SECONDARY")," \u7684 ",(0,r.kt)("strong",{parentName:"li"},"IP")," \u5730\u5740\u4f9d\u5e8f\u6aa2\u67e5"),(0,r.kt)("li",{parentName:"ol"},"\u78ba\u8a8d ",(0,r.kt)("strong",{parentName:"li"},"scope")," \u662f\u5426\u7b26\u5408\n3. \u78ba\u8a8d\u8a72 ",(0,r.kt)("strong",{parentName:"li"},"IP")," \u7684\u7db2\u6bb5\u662f\u5426\u5305\u542b ",(0,r.kt)("strong",{parentName:"li"},"\u76ee\u6a19IP\u5730\u5740"),", \u6b64\u7bc4\u4f8b\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"li"},"\u76ee\u6a19IP\u5730\u5740")," \u5247\u662f\u6839\u64da\u8def\u7531\u8868\u7684 ",(0,r.kt)("strong",{parentName:"li"},"next hop")," \u5730\u5740\u3002")),(0,r.kt)("h3",{id:"\u4f86\u6e90\u9023\u63a5\u57e0\u7684\u9078\u64c7"},"\u4f86\u6e90\u9023\u63a5\u57e0\u7684\u9078\u64c7"),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u8981\u770b\u770b\u5230\u5e95\u600e\u9ebc\u9078\u64c7 ",(0,r.kt)("strong",{parentName:"p"},"\u4f86\u6e90\u9023\u63a5\u57e0 (Source Port)"),"\uff0c\u9019\u90e8\u5206\u7684\u9078\u64c7\u727d\u626f\u5230\u592a\u591a\u7684\u76f8\u95dc\u80cc\u666f\uff0c\u8b6c\u5982 ",(0,r.kt)("strong",{parentName:"p"},"connection track"),"\uff0c\u751a\u81f3\u662f ",(0,r.kt)("strong",{parentName:"p"},"DNAT")," \u7684\u8cc7\u6599\u5171\u7528\uff0c\u6240\u4ee5\u5728\u63a2\u7d22\u4e0a\u6703\u8457\u91cd\u65bc ",(0,r.kt)("strong",{parentName:"p"},"SNAT")," \u76f8\u95dc\u7684\u908f\u8f2f\u3002"),(0,r.kt)("p",null,"\u6211\u5011\u56de\u5230\u6700\u521d\u7684\u51fd\u5f0f ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_masquerade_ipv4")," \u4f86\u770b\u4e00\u4e0b\u5f8c\u9762\u7684\u8655\u7406"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"    /* Transfer from original range. */\n    memset(&newrange.min_addr, 0, sizeof(newrange.min_addr));\n    memset(&newrange.max_addr, 0, sizeof(newrange.max_addr));\n    newrange.flags       = range->flags | NF_NAT_RANGE_MAP_IPS;\n    newrange.min_addr.ip = newsrc;\n    newrange.max_addr.ip = newsrc;\n    newrange.min_proto   = range->min_proto;\n    newrange.max_proto   = range->max_proto;\n\n    /* Hand modified range to generic setup. */\n    return nf_nat_setup_info(ct, &newrange, NF_NAT_MANIP_SRC);\n")),(0,r.kt)("p",null,"\u9019\u908a\u6709\u4e09\u500b\u6b04\u4f4d\u503c\u5f97\u6ce8\u610f\uff0c\u5206\u5225\u662f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"newrange.flags"),(0,r.kt)("li",{parentName:"ol"},"newrange.min_proto"),(0,r.kt)("li",{parentName:"ol"},"newrange.max_proto")),(0,r.kt)("p",null,"\u5982\u679c\u4eca\u5929\u4f7f\u7528\u8005\u5728\u64cd\u4f5c ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u7684\u6642\u5019\u6709\u8a2d\u5b9a\u5176\u4ed6\u53c3\u6578 ",(0,r.kt)("strong",{parentName:"p"},"--random"),", ",(0,r.kt)("strong",{parentName:"p"},"--to-ports")," \u7684\u8a71\uff0c\u4e0a\u8ff0\u7684\u6b04\u4f4d\u6703\u6709\u4e0d\u540c\u7684\u6578\u503c\uff0c\u63a5\u4e0b\u4f86\u7684\u908f\u8f2f\u8655\u7406\u5247\u6703\u6839\u64da\u9019\u4e9b\u6578\u503c\u4f86\u8655\u7406\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"--random",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"flags = NF_NAT_RANGE_PROTO_RANDOM"))),(0,r.kt)("li",{parentName:"ul"},"--to-ports",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"min_proto:max_proto => \u4f7f\u7528\u8005\u8a2d\u5b9a\u7684 Port Number \u5340\u9593"),(0,r.kt)("li",{parentName:"ul"},"flags = NF_NAT_RANGE_PROTO_SPECIFIED")))),(0,r.kt)("p",null,"\u63a5\u4e0b\u4f86\u6211\u5011\u5c31\u4f86\u770b\u770b ",(0,r.kt)("inlineCode",{parentName:"p"},"nf_nat_setup_info")," \u9019\u500b\u51fd\u5f0f\u88e1\u9762\u6703\u600e\u9ebc\u505a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"unsigned int\nnf_nat_setup_info(struct nf_conn *ct,\n                  const struct nf_nat_range *range,\n                  enum nf_nat_manip_type maniptype)\n{\n        struct net *net = nf_ct_net(ct);\n        struct nf_conntrack_tuple curr_tuple, new_tuple;\n...\n\n        get_unique_tuple(&new_tuple, &curr_tuple, range, ct, maniptype);\n....\n}\n")),(0,r.kt)("p",null,"\u5c0d\u65bc ",(0,r.kt)("strong",{parentName:"p"},"linux kernel")," \u4f86\u8aaa\uff0c\u9032\u884c\u4e00\u500b\u6709\u6548\u7684 ",(0,r.kt)("strong",{parentName:"p"},"NAT")," \u9664\u4e86\u5c0b\u627e\u5230\u4e00\u500b\u5408\u6cd5\u4e14\u552f\u4e00\u7684",(0,r.kt)("strong",{parentName:"p"},"\u9023\u63a5\u57e0/IP \u5730\u5740")," \u4e4b\u5916\uff0c\u5982\u4f55\u8b93\u9019\u500b\u9023\u7dda\u80fd\u5920\u66f4\u6709\u6548\u7684\u8655\u7406\u4e5f\u662f\u4e00\u500b\u8b70\u984c\uff0c\u7e3d\u4e0d\u53ef\u80fd\u6bcf\u6b21\u8a72\u9023\u7dda\u4e2d\u7684\u5c01\u5305\u90fd\u8981\u91cd\u65b0\u6aa2\u67e5\uff0c\u5c0b\u627e\u4e26\u4e14\u8f49\u63db\uff0c\u9019\u90e8\u5206\u5c31\u6703\u4ef0\u8cf4 ",(0,r.kt)("strong",{parentName:"p"},"Conntrack (Connection Tracking)")," \u7684\u6574\u5408\u8207\u904b\u4f5c\uff0c\u80fd\u5920\u63d0\u4f9b\u66f4\u5feb\u901f\u7684\u904b\u4f5c\u540c\u6642\u4e5f\u53ef\u4ee5\u907f\u514d ",(0,r.kt)("strong",{parentName:"p"},"NAT")," \u76f8\u95dc\u7684\u898f\u5247\u6bcf\u500b\u5c01\u5305\u90fd\u8981\u57f7\u884c\u4e00\u6b21\u3002\n\u56e0\u6b64\u4e0a\u8ff0\u7684\u539f\u59cb\u78bc\u4e2d\u6703\u6709\u975e\u5e38\u5927\u91cf\u7684\u90e8\u5206\u90fd\u8ddf ",(0,r.kt)("strong",{parentName:"p"},"Conntrack")," \u6709\u95dc\uff0c\u9019\u908a\u5c31\u4e0d\u8a73\u7d30\u8ac7\u9019\u6982\u5ff5\uff0c\u4e3b\u8981\u5c08\u6ce8\u65bc ",(0,r.kt)("strong",{parentName:"p"},"NAT")," \u9023\u63a5\u57e0\u7684\u9078\u64c7\u3002"),(0,r.kt)("p",null,"\u9019\u908a\u6211\u5011\u5c08\u6ce8\u65bc ",(0,r.kt)("strong",{parentName:"p"},"get_unique_tuple")," \u9019\u500b\u51fd\u5f0f\uff0c\u9019\u908a\u6709\u4e94\u500b\u53c3\u6578\uff0c\u5176\u4e2d\u6709\u5169\u500b\u9700\u8981\u6ce8\u610f\uff0c\u5206\u5225\u662f ",(0,r.kt)("strong",{parentName:"p"},"range")," \u4ee5\u53ca ",(0,r.kt)("strong",{parentName:"p"},"mainiptype"),"\u3002\n\u5176\u4e2d ",(0,r.kt)("strong",{parentName:"p"},"range")," \u5247\u662f ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_masquerade_ipv4")," \u6839\u64da\u4f7f\u7528\u8005\u8a2d\u5b9a\u7522\u751f\u4e26\u50b3\u5165\u7684\uff0c\u800c ",(0,r.kt)("strong",{parentName:"p"},"mainiptype")," \u5247\u662f ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_masquerade_ipv4")," \u50b3\u5165\u7684 ",(0,r.kt)("strong",{parentName:"p"},"NF_NAT_MANIP_SRC"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"/* Manipulate the tuple into the range given. For NF_INET_POST_ROUTING,\n * we change the source to map into the range. For NF_INET_PRE_ROUTING\n * and NF_INET_LOCAL_OUT, we change the destination to map into the\n * range. It might not be possible to get a unique tuple, but we try.\n * At worst (or if we race), we will end up with a final duplicate in\n * __ip_conntrack_confirm and drop the packet. */\nstatic void\nget_unique_tuple(struct nf_conntrack_tuple *tuple,\n                 const struct nf_conntrack_tuple *orig_tuple,\n                 const struct nf_nat_range *range,\n                 struct nf_conn *ct,\n                 enum nf_nat_manip_type maniptype)\n{\n\n\n...\n        rcu_read_lock();\n        l3proto = __nf_nat_l3proto_find(orig_tuple->src.l3num);\n        l4proto = __nf_nat_l4proto_find(orig_tuple->src.l3num,\n                                        orig_tuple->dst.protonum);\n...\n\n        /* Last change: get protocol to try to obtain unique tuple. */\n        l4proto->unique_tuple(l3proto, tuple, range, maniptype, ct);\n}\n\n")),(0,r.kt)("p",null,"\u5f9e\u8a3b\u89e3\u53ef\u4ee5\u770b\u5230\u8a72\u51fd\u5f0f\u7684\u76ee\u7684\uff0c\u56e0\u70ba ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u672c\u8eab\u5fc5\u9808\u662f ",(0,r.kt)("strong",{parentName:"p"},"POST-ROUTING")," \u4f4d\u7f6e\u624d\u53ef\u4ee5\u57f7\u884c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"TARGET"),"\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u770b\u5230\u8a3b\u89e3\u4e2d\u6709\u7279\u5225\u63d0\u5230 ",(0,r.kt)("strong",{parentName:"p"},"NF_INTER_POST_ROUTING")," \u7684\u60c5\u6cc1\u4e0b\uff0c\u6703\u505a\u7684\u5c31\u662f\u6539\u8b8a ",(0,r.kt)("strong",{parentName:"p"},"source")," \u4f86\u6e90\u7aef\u76f8\u95dc\u7684\u6578\u503c\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NAT")," \u672c\u8eab\u9084\u6709\u4e00\u500b\u5f88\u6709\u8da3\u7684\u6982\u5ff5\u5c31\u662f\u91dd\u5c0d\u4e0d\u540c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Layer4")," \u5354\u5b9a\u6703\u6709\u4e0d\u540c\u7684\u9078\u64c7\u65b9\u5f0f\u8ddf\u8655\u7406\u65b9\u5f0f\uff0c\u76ee\u524d\u7e3d\u5171\u6709\u4e5d\u7a2e\u4e0d\u540c\u7684\u5be6\u4f5c\uff0c\u5206\u5225\u662f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"gre"),(0,r.kt)("li",{parentName:"ol"},"icmp"),(0,r.kt)("li",{parentName:"ol"},"icmpv6"),(0,r.kt)("li",{parentName:"ol"},"dccp"),(0,r.kt)("li",{parentName:"ol"},"sctp"),(0,r.kt)("li",{parentName:"ol"},"tcp"),(0,r.kt)("li",{parentName:"ol"},"udplite"),(0,r.kt)("li",{parentName:"ol"},"udp"),(0,r.kt)("li",{parentName:"ol"},"unknown")),(0,r.kt)("p",null,"\u800c\u6211\u5011\u7684\u7bc4\u4f8b\u4e2d\u5c08\u6ce8\u65bc ",(0,r.kt)("strong",{parentName:"p"},"TCP")," \u672c\u8eab\u7684\u8655\u7406\uff0c\u6240\u4ee5\u63a5\u4e0b\u4f86\u6211\u5011\u4f86\u770b\u770b ",(0,r.kt)("strong",{parentName:"p"},"TCP")," \u88e1\u9762\u7684 ",(0,r.kt)("strong",{parentName:"p"},"unique_tuple")," \u6703\u600e\u9ebc\u8655\u7406"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"const struct nf_nat_l4proto nf_nat_l4proto_tcp = {\n        .l4proto                = IPPROTO_TCP,\n        .manip_pkt              = tcp_manip_pkt,\n        .in_range               = nf_nat_l4proto_in_range,\n        .unique_tuple           = tcp_unique_tuple,\n#if IS_ENABLED(CONFIG_NF_CT_NETLINK)\n        .nlattr_to_range        = nf_nat_l4proto_nlattr_to_range,\n#endif\n};\n")),(0,r.kt)("p",null,"\u4e0a\u8ff0\u53ea\u662f\u4e00\u500b TCP \u7d50\u69cb\u7684\u8868\u9054\uff0c\u5be6\u969b\u4e0a\u6703\u6709\u4e5d\u7a2e\u76f8\u95dc\u7684\u7269\u4ef6\u90fd\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"nf_nat_l4proto")," \u4f86\u8a3b\u518a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"static void\ntcp_unique_tuple(const struct nf_nat_l3proto *l3proto,\n                 struct nf_conntrack_tuple *tuple,\n                 const struct nf_nat_range *range,\n                 enum nf_nat_manip_type maniptype,\n                 const struct nf_conn *ct)\n{\n        nf_nat_l4proto_unique_tuple(l3proto, tuple, range, maniptype, ct,\n                                    &tcp_port_rover);\n}\n\nvoid nf_nat_l4proto_unique_tuple(const struct nf_nat_l3proto *l3proto,\n                                 struct nf_conntrack_tuple *tuple,\n                                 const struct nf_nat_range *range,\n                                 enum nf_nat_manip_type maniptype,\n                                 const struct nf_conn *ct,\n                                 u16 *rover)\n{\n        unsigned int range_size, min, i;\n        __be16 *portptr;\n        u_int16_t off;\n\n        if (maniptype == NF_NAT_MANIP_SRC)\n                portptr = &tuple->src.u.all;\n        else\n                portptr = &tuple->dst.u.all;\n\n        /* If no range specified... */\n        if (!(range->flags & NF_NAT_RANGE_PROTO_SPECIFIED)) {\n                /* If it's dst rewrite, can't change port */\n                if (maniptype == NF_NAT_MANIP_DST)\n                        return;\n\n                if (ntohs(*portptr) < 1024) {\n                        /* Loose convention: >> 512 is credential passing */\n                        if (ntohs(*portptr) < 512) {\n                                min = 1;\n                                range_size = 511 - min + 1;\n                        } else {\n                                min = 600;\n                                range_size = 1023 - min + 1;\n                        }\n                } else {\n                        min = 1024;\n                        range_size = 65535 - 1024 + 1;\n                }\n        } else {\n                min = ntohs(range->min_proto.all);\n                range_size = ntohs(range->max_proto.all) - min + 1;\n        }\n\n\n        if (range->flags & NF_NAT_RANGE_PROTO_RANDOM) {\n                off = l3proto->secure_port(tuple, maniptype == NF_NAT_MANIP_SRC\n                                                  ? tuple->dst.u.all\n                                                  : tuple->src.u.all);\n        } else if (range->flags & NF_NAT_RANGE_PROTO_RANDOM_FULLY) {\n                off = prandom_u32();\n        } else {\n                off = *rover;\n        }\n\n        for (i = 0; ; ++off) {\n                *portptr = htons(min + off % range_size);\n                if (++i != range_size && nf_nat_used_tuple(tuple, ct))\n                        continue;\n                if (!(range->flags & NF_NAT_RANGE_PROTO_RANDOM_ALL))\n                        *rover = off;\n                return;\n        }\n}\n")),(0,r.kt)("p",null,"\u627e ",(0,r.kt)("strong",{parentName:"p"},"Port")," \u9023\u63a5\u57e0\u7684\u6982\u5ff5\u975e\u5e38\u7c21\u55ae"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5148\u64ec\u5b9a\u4e00\u500b\u7bc4\u570d\u5340\u9593"),(0,r.kt)("li",{parentName:"ol"},"\u63a5\u4e0b\u4f86\u65bc\u9019\u500b\u5340\u9593\u5167\u627e\u5230\u4e00\u500b\u8d77\u59cb\u4f4d\u7f6e\uff0c"),(0,r.kt)("li",{parentName:"ol"},"\u65bc\u9019\u500b\u4f4d\u7f6e\u5617\u8a66\uff0c\u5982\u679c\u8a72 ",(0,r.kt)("strong",{parentName:"li"},"port(\u9023\u63a5\u57e0)")," \u8207 ",(0,r.kt)("strong",{parentName:"li"},"source IP")," \u7522\u751f\u7684 ",(0,r.kt)("strong",{parentName:"li"},"tuple")," \u662f\u552f\u4e00\u7684\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u5426\u5247\u5c31\u905e\u52a0\u8a72 ",(0,r.kt)("strong",{parentName:"li"},"port(\u9023\u63a5\u57e0)")," (++).")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"        for (i = 0; ; ++off) {\n                *portptr = htons(min + off % range_size);\n                if (++i != range_size && nf_nat_used_tuple(tuple, ct))\n                        continue;\n                if (!(range->flags & NF_NAT_RANGE_PROTO_RANDOM_ALL))\n                        *rover = off;\n                return;\n        }\n")),(0,r.kt)("p",null,"\u4e0a\u8ff0\u7684\u6982\u5ff5\u7528\u7a0b\u5f0f\u78bc\u8868\u793a\u5c31\u662f\uff0c\u900f\u904e ",(0,r.kt)("strong",{parentName:"p"},"off")," \u7d55\u5c0d\u4e00\u500b ",(0,r.kt)("strong",{parentName:"p"},"\u8d77\u59cb\u4f4d\u7f6e")," \u7684\u504f\u79fb\u91cf\n\u900f\u904e ",(0,r.kt)("strong",{parentName:"p"},"min")," \u4ee5\u53ca ",(0,r.kt)("strong",{parentName:"p"},"range_size")," \u6c7a\u5b9a\u7bc4\u570d\u5340\u9593\n\u6700\u5f8c\u900f\u904e ",(0,r.kt)("inlineCode",{parentName:"p"},"++i")," \u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"nf_nat_used_tuple")," \u4f86\u905e\u52a0\u9078\u64c7\u7684 ",(0,r.kt)("strong",{parentName:"p"},"port")," \u4e26\u4e14\u78ba\u8a8d\u662f\u5426\u70ba\u4e00\u3002"),(0,r.kt)("p",null,"\u770b\u5b8c\u4e86\u9078\u64c7 ",(0,r.kt)("strong",{parentName:"p"},"port(\u9023\u63a5\u57e0)")," \u7684\u908f\u8f2f\u5f8c\uff0c\u6211\u5011\u5c31\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u731c\u5230\uff0c\u4f7f\u7528\u8005\u8f38\u5165\u7684\u90a3\u4e9b\u53c3\u6578 ",(0,r.kt)("strong",{parentName:"p"},"--to-ports"),", ",(0,r.kt)("strong",{parentName:"p"},"--random")," \u5176\u5be6\u5c31\u662f\u63a7\u5236\u4e0a\u9762\u90a3\u4e9b\u8b8a\u91cf\u7684\u521d\u59cb\u503c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"...\n        if (!(range->flags & NF_NAT_RANGE_PROTO_SPECIFIED)) {\n....\n                } else {\n                        min = 1024;\n                        range_size = 65535 - 1024 + 1;\n                }\n        } else {\n                min = ntohs(range->min_proto.all);\n                range_size = ntohs(range->max_proto.all) - min + 1;\n        }\n...\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u5982\u679c\u6709\u8a2d\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"NF_NAT_RANGE_PROTO_SPECIFIED")," \u9019\u500b\u53c3\u6578\u7684\u8a71\uff0c\u5c31\u6703\u900f\u904e\u4e4b\u524d\u8a2d\u5b9a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"min_proto/max_proto")," \u4f86\u6c7a\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"min/range_size")," \u7684\u5927\u5c0f\u3002\n\u5426\u5247\u4e00\u822c\u60c5\u6cc1\u4e0b\u5c31\u662f\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"min=1024, range_size=65535-1024+1"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},"        if (range->flags & NF_NAT_RANGE_PROTO_RANDOM) {\n                off = l3proto->secure_port(tuple, maniptype == NF_NAT_MANIP_SRC\n                                                  ? tuple->dst.u.all\n                                                  : tuple->src.u.all);\n        } else if (range->flags & NF_NAT_RANGE_PROTO_RANDOM_FULLY) {\n                off = prandom_u32();\n        } else {\n                off = *rover;\n        }\n")),(0,r.kt)("p",null,"\u91dd\u5c0d ",(0,r.kt)("strong",{parentName:"p"},"RANDOM")," \u7684\u8a71\uff0c\u6839\u64da\u4e0d\u540c\u7684\u7528\u6cd5\u6709\u5169\u7a2e\u65b9\u5f0f\u53bb\u7522\u751f ",(0,r.kt)("strong",{parentName:"p"},"off"),"\uff0c\u5982\u679c\u90fd\u6c92\u6709\u7279\u5225\u6307\u5b9a\u7684\u8a71\u5c31\u6703\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"rover")," \u9019\u500b\u5168\u57df\u8b8a\u6578\u4f86\u6c7a\u5b9a\u3002\n\u7279\u5225\u6ce8\u610f\u7684\u662f ",(0,r.kt)("strong",{parentName:"p"},"rover")," \u662f\u4e00\u500b ",(0,r.kt)("strong",{parentName:"p"},"static")," \u7684\u8b8a\u6578\uff0c\u6240\u4ee5\u53ef\u4ee5\u60f3\u6210\u7576\u524d\u7cfb\u7d71\u5167\u7684\u6240\u6709 ",(0,r.kt)("strong",{parentName:"p"},"TCP \u76f8\u95dc\u7684NAT")," \u6703\u900f\u904e\u4e00\u500b\u5171\u540c\u7684\u8b8a\u6578\u4f86\u6c7a\u5b9a\u7576\u524d\u8981\u6c7a\u5b9a\u7684\u8d77\u59cb\u5340\u9593\u3002"),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u900f\u904e\u95b1\u8b80\u539f\u59cb\u78bc\u7684\u65b9\u5f0f\u4f86\u5b78\u7fd2 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u7684\u904b\u4f5c\u65b9\u5f0f\uff0c\u4e3b\u8981\u8457\u91cd\u65bc\u5169\u500b\u90e8\u5206"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5982\u4f55\u6311\u9078 ",(0,r.kt)("strong",{parentName:"li"},"IP")," \u5730\u5740\uff0c\u5982\u679c\u672c\u8eab\u7db2\u8def\u5361\u6709\u591a\u500b ",(0,r.kt)("strong",{parentName:"li"},"IP")," \u5730\u5740\u7684\u8a71\uff0c\u6703\u600e\u9ebc\u6311\u9078"),(0,r.kt)("li",{parentName:"ol"},"\u5982\u4f55\u6311\u9078 ",(0,r.kt)("strong",{parentName:"li"},"source port(\u9023\u63a5\u57e0)"),", \u4e0d\u540c\u7684\u53c3\u6578\u6703\u600e\u9ebc\u5f71\u97ff ",(0,r.kt)("strong",{parentName:"li"},"source port")," \u7684\u9078\u64c7\u3002")),(0,r.kt)("p",null,"\u91dd\u5c0d\u7b2c\u4e00\u500b\u554f\u984c\uff0c\u6211\u5011\u53ef\u4ee5\u77e5\u9053 ",(0,r.kt)("strong",{parentName:"p"},"Linux Kernel")," \u672c\u8eab\u5c0d\u65bc\u76f8\u540c\u7db2\u6bb5\u7684\u591a\u91cd ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u6703\u6709\u7279\u5225\u8655\u7406\uff0c\u9664\u4e86\u7b2c\u4e00\u500b\u88ab\u8a2d\u5b9a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u4e4b\u5916\uff0c\u5176\u9918\u90fd\u6703\u88ab\u8a2d\u5b9a\u70ba ",(0,r.kt)("strong",{parentName:"p"},"SECONDARY"),"\uff0c\u800c\u9078\u64c7 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u6642\u5247\u6703\u4f9d\u5e8f\u8a62\u554f\u6bcf\u500b ",(0,r.kt)("strong",{parentName:"p"},"\u975e SECONDARY")," \u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\uff0c\u4e26\u4e14\u78ba\u8a8d\u76ee\u6a19 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u662f\u5426\u5c6c\u65bc\u9078\u5230\u7684 ",(0,r.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u3002"),(0,r.kt)("p",null,"\u91dd\u5c0d\u7b2c\u4e8c\u500b\u554f\u984c\uff0c\u6211\u5011\u89c0\u5bdf\u5230 ",(0,r.kt)("strong",{parentName:"p"},"MASQUERADE")," \u6709\u63d0\u4f9b\u984d\u5916\u5169\u500b\u53c3\u6578\uff0c\u5206\u5225\u662f ",(0,r.kt)("strong",{parentName:"p"},"--to-ports")," \u4ee5\u53ca ",(0,r.kt)("strong",{parentName:"p"},"--random"),"\u3002\u9019\u5169\u500b\u8b8a\u6578\u6700\u5f8c\u6703\u5f71\u97ff\u600e\u9ebc\u6311\u9078"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"port")," \u7684\u53ef\u7528\u5340\u9593"),(0,r.kt)("li",{parentName:"ol"},"\u8d77\u59cb ",(0,r.kt)("strong",{parentName:"li"},"port")," \u7684\u504f\u79fb\u91cf")),(0,r.kt)("p",null,"\u4e0b\u7bc7\u6587\u7ae0\u6211\u5011\u6703\u5617\u8a66\u900f\u904e\u76f4\u63a5\u4fee\u6539 ",(0,r.kt)("strong",{parentName:"p"},"source code")," \u7684\u65b9\u5f0f\u4f86\u89c0\u5bdf\u6574\u500b\u554f\u984c\u4e26\u9a57\u8b49\u4e0a\u8ff0\u7684\u89c0\u5bdf\u7d50\u679c\u3002"))}N.isMDXComponent=!0}}]);