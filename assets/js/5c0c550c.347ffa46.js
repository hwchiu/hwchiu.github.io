"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[82880],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(o),g=r,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||a;return o?n.createElement(m,l(l({ref:t},p),{},{components:o})):n.createElement(m,l({ref:t},p))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=o[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}g.displayName="MDXCreateElement"},8969:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=o(87462),r=(o(67294),o(3905));const a={title:"FloodlightModule-Forwarding",date:"2013-08-06 15:26",tags:["Floodlight","SDN","Openflow","Network","SourceCode"],description:"\u672c\u6587\u57fa\u65bc SDN Controller Floodlight \u7684\u539f\u59cb\u78bc\u9032\u884c\u4e86\u4e00\u6b21\u7c21\u55ae\u7684\u5206\u6790\uff0c\u85c9\u7531\u5206\u6790\u9019\u4e9b\u539f\u59cb\u78bc\u66f4\u53ef\u4ee5\u5b78\u7fd2\u5230\u5176\u5167\u90e8\u662f\u5982\u4f55\u8f49\u9001\u5c01\u5305\u7684\uff0c\u85c9\u7531 Topology \u6a21\u7d44\u63d0\u4f9b\u7684 Global Topology \u8cc7\u8a0a, Floodlight \u53ef\u4ee5\u5f9e\u8a72\u8cc7\u8a0a\u4e2d\u5c0d\u65bc\u4efb\u4f55\u4e00\u500b\u9ede\u5230\u9ede\u7684\u4e4b\u9593\u7684\u9023\u7dda\u627e\u5230\u4e00\u689d\u50b3\u9001\u8def\u5f91\u3002\u63a5\u8005\u91dd\u5c0d\u9019\u50b3\u9001\u8def\u5f91\u4e0a\u6240\u6709\u7684\u4ea4\u63db\u6a5f\u8f38\u5165\u5c0d\u61c9\u7684 Openflow \u898f\u5247\u4f86\u5e6b\u5fd9\u8f49\u9001\u5c01\u5305\u3002\u76f8\u5c0d\u65bc\u6587\u4ef6\u7684\u66f4\u65b0\uff0c\u7a0b\u5f0f\u78bc\u672c\u8eab\u7684\u8fed\u4ee3\u901f\u5ea6\u66f4\u70ba\u654f\u6377\uff0c\u56e0\u6b64\u5e38\u5e38\u6703\u767c\u751f\u6587\u4ef6\u8ddf\u4e0d\u4e0a\u5be6\u969b\u904b\u884c\u529f\u80fd\u7684\u6848\u4f8b\u3002\u85c9\u7531\u5b78\u7fd2\u95b1\u8b80\u539f\u59cb\u78bc\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u5feb\u4e5f\u66f4\u6e05\u695a\u7684\u638c\u63e1\u7576\u524d\u9019\u4e9b\u958b\u6e90\u8edf\u9ad4\u7684\u767c\u5c55\u72c0\u614b\uff0c\u751a\u81f3\u4e5f\u80fd\u5920\u8ca2\u737b\u793e\u7fa4\u5e6b\u5fd9\u88dc\u9f4a\u6587\u4ef6\u3002"},l="Preface",i={unversionedId:"techPost/2013/floodlightmodule-forwarding",id:"techPost/2013/floodlightmodule-forwarding",title:"FloodlightModule-Forwarding",description:"\u672c\u6587\u57fa\u65bc SDN Controller Floodlight \u7684\u539f\u59cb\u78bc\u9032\u884c\u4e86\u4e00\u6b21\u7c21\u55ae\u7684\u5206\u6790\uff0c\u85c9\u7531\u5206\u6790\u9019\u4e9b\u539f\u59cb\u78bc\u66f4\u53ef\u4ee5\u5b78\u7fd2\u5230\u5176\u5167\u90e8\u662f\u5982\u4f55\u8f49\u9001\u5c01\u5305\u7684\uff0c\u85c9\u7531 Topology \u6a21\u7d44\u63d0\u4f9b\u7684 Global Topology \u8cc7\u8a0a, Floodlight \u53ef\u4ee5\u5f9e\u8a72\u8cc7\u8a0a\u4e2d\u5c0d\u65bc\u4efb\u4f55\u4e00\u500b\u9ede\u5230\u9ede\u7684\u4e4b\u9593\u7684\u9023\u7dda\u627e\u5230\u4e00\u689d\u50b3\u9001\u8def\u5f91\u3002\u63a5\u8005\u91dd\u5c0d\u9019\u50b3\u9001\u8def\u5f91\u4e0a\u6240\u6709\u7684\u4ea4\u63db\u6a5f\u8f38\u5165\u5c0d\u61c9\u7684 Openflow \u898f\u5247\u4f86\u5e6b\u5fd9\u8f49\u9001\u5c01\u5305\u3002\u76f8\u5c0d\u65bc\u6587\u4ef6\u7684\u66f4\u65b0\uff0c\u7a0b\u5f0f\u78bc\u672c\u8eab\u7684\u8fed\u4ee3\u901f\u5ea6\u66f4\u70ba\u654f\u6377\uff0c\u56e0\u6b64\u5e38\u5e38\u6703\u767c\u751f\u6587\u4ef6\u8ddf\u4e0d\u4e0a\u5be6\u969b\u904b\u884c\u529f\u80fd\u7684\u6848\u4f8b\u3002\u85c9\u7531\u5b78\u7fd2\u95b1\u8b80\u539f\u59cb\u78bc\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u5feb\u4e5f\u66f4\u6e05\u695a\u7684\u638c\u63e1\u7576\u524d\u9019\u4e9b\u958b\u6e90\u8edf\u9ad4\u7684\u767c\u5c55\u72c0\u614b\uff0c\u751a\u81f3\u4e5f\u80fd\u5920\u8ca2\u737b\u793e\u7fa4\u5e6b\u5fd9\u88dc\u9f4a\u6587\u4ef6\u3002",source:"@site/docs/techPost/2013/floodlightmodule-forwarding.md",sourceDirName:"techPost/2013",slug:"/techPost/2013/floodlightmodule-forwarding",permalink:"/docs/techPost/2013/floodlightmodule-forwarding",draft:!1,tags:[{label:"Floodlight",permalink:"/docs/tags/floodlight"},{label:"SDN",permalink:"/docs/tags/sdn"},{label:"Openflow",permalink:"/docs/tags/openflow"},{label:"Network",permalink:"/docs/tags/network"},{label:"SourceCode",permalink:"/docs/tags/source-code"}],version:"current",frontMatter:{title:"FloodlightModule-Forwarding",date:"2013-08-06 15:26",tags:["Floodlight","SDN","Openflow","Network","SourceCode"],description:"\u672c\u6587\u57fa\u65bc SDN Controller Floodlight \u7684\u539f\u59cb\u78bc\u9032\u884c\u4e86\u4e00\u6b21\u7c21\u55ae\u7684\u5206\u6790\uff0c\u85c9\u7531\u5206\u6790\u9019\u4e9b\u539f\u59cb\u78bc\u66f4\u53ef\u4ee5\u5b78\u7fd2\u5230\u5176\u5167\u90e8\u662f\u5982\u4f55\u8f49\u9001\u5c01\u5305\u7684\uff0c\u85c9\u7531 Topology \u6a21\u7d44\u63d0\u4f9b\u7684 Global Topology \u8cc7\u8a0a, Floodlight \u53ef\u4ee5\u5f9e\u8a72\u8cc7\u8a0a\u4e2d\u5c0d\u65bc\u4efb\u4f55\u4e00\u500b\u9ede\u5230\u9ede\u7684\u4e4b\u9593\u7684\u9023\u7dda\u627e\u5230\u4e00\u689d\u50b3\u9001\u8def\u5f91\u3002\u63a5\u8005\u91dd\u5c0d\u9019\u50b3\u9001\u8def\u5f91\u4e0a\u6240\u6709\u7684\u4ea4\u63db\u6a5f\u8f38\u5165\u5c0d\u61c9\u7684 Openflow \u898f\u5247\u4f86\u5e6b\u5fd9\u8f49\u9001\u5c01\u5305\u3002\u76f8\u5c0d\u65bc\u6587\u4ef6\u7684\u66f4\u65b0\uff0c\u7a0b\u5f0f\u78bc\u672c\u8eab\u7684\u8fed\u4ee3\u901f\u5ea6\u66f4\u70ba\u654f\u6377\uff0c\u56e0\u6b64\u5e38\u5e38\u6703\u767c\u751f\u6587\u4ef6\u8ddf\u4e0d\u4e0a\u5be6\u969b\u904b\u884c\u529f\u80fd\u7684\u6848\u4f8b\u3002\u85c9\u7531\u5b78\u7fd2\u95b1\u8b80\u539f\u59cb\u78bc\uff0c\u6211\u5011\u53ef\u4ee5\u66f4\u5feb\u4e5f\u66f4\u6e05\u695a\u7684\u638c\u63e1\u7576\u524d\u9019\u4e9b\u958b\u6e90\u8edf\u9ad4\u7684\u767c\u5c55\u72c0\u614b\uff0c\u751a\u81f3\u4e5f\u80fd\u5920\u8ca2\u737b\u793e\u7fa4\u5e6b\u5fd9\u88dc\u9f4a\u6587\u4ef6\u3002"},sidebar:"techPost",previous:{title:"Floodlight-modules-dependency",permalink:"/docs/techPost/2013/floodlight-modules-dependency"},next:{title:"FloodlightModule-Topology module",permalink:"/docs/techPost/2013/floodlightmodule-topology"}},c={},s=[{value:"Drop",id:"drop",level:2},{value:"Flood",id:"flood",level:2},{value:"Forward",id:"forward",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"preface"},"Preface"),(0,r.kt)("p",null,"Floodlight\u4e2d\uff0c\u6700\u57fa\u672c\u7528\u4f86\u8f49\u9001\u5c01\u5305\u7684module\u5c31\u662fForwarding Module,\u9019\u908a\u7a0d\u70ba\u4ecb\u7d39\u4e00\u4e0b\u5fc3\u5f97:"),(0,r.kt)("h1",{id:"architecture"},"Architecture"),(0,r.kt)("p",null,"Forwarding \u64f4\u5145\u4e86 ",(0,r.kt)("em",{parentName:"p"},"ForwardingBase"),",\nForwardingBase\u4f4d\u65bc/routing/\u5e95\u4e0b\uff0c\u4e4b\u5f8c\u6703\u518d\u8a73\u7d30\u4ecb\u7d39\u9019\u500bmodule.\n\u5176\u4e3b\u8981\u529f\u80fd\u5c31\u662f\u5e6b\u5fd9\u628a\u4e00\u500broute\u7d66\u9001\u5230\u5c0d\u61c9\u7684switches\uff0c\u900f\u904eflow-modify\u7684\u5c01\u5305\u4f86\u5beb\u5165flow-entry\u5230\u6bcf\u500b\u8def\u5f91\u4e0a\u7684switch\u3002\n\u7576\u6709\u5c01\u5305\u8fd1\u4f86\u7684\u6642\u5019\u5c31\u6703\u547c\u53eb",(0,r.kt)("inlineCode",{parentName:"p"},"processPacketInMessage"),"\u6b64function\nForwardingBase\u672c\u8eab\u4e26\u6c92\u6709\u5be6\u4f5c\u8a72function\uff0c\u628a\u9019\u5224\u65b7\u7684\u90e8\u5206\u4ea4\u7d66\u5176\u4ed6\u7684module\u8655\u7406\uff0c\u9019\u908a\u5c31\u662f\u7531forwarding modules\u4f86\u8655\u7406\u3002"),(0,r.kt)("h1",{id:"hight-level-overview"},"Hight-Level Overview"),(0,r.kt)("p",null,"\u7576\u6709\u4e00\u500bPacketIn event\u9001\u5230controller\u6642\uff0cForwarding\u4e2d\u6703\u6839\u64da\u3127\u4e9b\u5df2\u7d93\u6c7a\u5b9a\u7684decision (\u5982firewall)\u4f86\u6c7a\u5b9a\u5982\u4f55\u8655\u7406\n\u5982\u679c\u6c92\u6709\u6c7a\u5b9a\u7684\u8a71\uff0c\u5c31\u63a1\u7528\u9810\u8a2d\u7684\u884c\u70ba\u8655\u7406"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Drop"),(0,r.kt)("li",{parentName:"ol"},"Flood (default for broadcast or multicast in Ethernet header)"),(0,r.kt)("li",{parentName:"ol"},"Forward (default)")),(0,r.kt)("h1",{id:"low-level-implementation"},"Low-Level implementation"),(0,r.kt)("h2",{id:"drop"},"Drop"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create Openflow Flow-Modify Packet with no action ( no action means drop)"),(0,r.kt)("li",{parentName:"ul"},"Send Flow-Modify Packet to switch.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5f97\u5230\u4e00\u500bOpenflow Flow-Modify\u985e\u578b\u7684\u5c01\u5305"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"OFFlowMod fm =(OFFlowMod) floodlightProvider.getOFMessageFactory().getMessage(OFType.FLOW_MOD);")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8a2d\u5b9a\u4e00\u500bActions,\u7136\u5f8c\u4e0d\u589e\u52a0\u4efb\u4f55action,\u9019\u6a23\u5c31\u6703\u4e8bdrop\u7684\u884c\u70ba"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"List<OFAction> actions = new ArrayList<OFAction>();")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8a2d\u5b9aFlow-Modify Packet\u7684\u3127\u4e9b\u6b04\u4f4d\uff0c\u8b6c\u5982HardTimeout,IdleTimeout...,\u9019\u908a\u6c92\u6709\u8a2d\u5b9aCommand\u9810\u8a2d\u5c31\u662fflow_add")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java="},"fm.setCookie(cookie)\n  .setHardTimeout((short) 0)\n  .setIdleTimeout((short) 5)\n  .setBufferId(OFPacketOut.BUFFER_ID_NONE)\n  .setMatch(match)\n  .setActions(actions)\n  .setLengthU(OFFlowMod.MINIMUM_LENGTH);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u628a\u8a0a\u606f\u85c9\u7531messageDamper\u9001\u7d66switch"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"messageDamper.write(sw, fm, cntx);")),(0,r.kt)("h2",{id:"flood"},"Flood"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check the ingress port is allowed broadcast ( according broadcast tree)"),(0,r.kt)("li",{parentName:"ul"},"Create Packout packet with Flood action"),(0,r.kt)("li",{parentName:"ul"},"Send Packout to switch.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6839\u64daBroadCast Tree\u5224\u65b7\u767c\u9001PacketIn Event\u7684{swtich,port}\u662f\u5426\u80fd\u5920\u5ee3\u64ad\uff0c\u907f\u514d\u9020\u6210broadcast storm")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java="},"if (topology.isIncomingBroadcastAllowed(sw.getId(),\n    pi.getInPort()) == false) {\n    return;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5275\u9020\u4e00\u500bPacket Out\u7684\u5c01\u5305"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"OFPacketOut po =(OFPacketOut) floodlightProvider.getOFMessageFactory().getMessage(OFType.PACKET_OUT)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5275\u9020actions,\u653e\u5165\u4e00\u500bflood\u7684action,\u6839\u64da\u3127\u4e9bproperty\u4f86\u6c7a\u5b9a\u8981\u9001\u5230\u54ea\u500blogical port")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java="},"List<OFAction> actions = new ArrayList<OFAction>();\nif (sw.hasAttribute(IOFSwitch.PROP_SUPPORTS_OFPP_FLOOD)) {\n    actions.add(new OFActionOutput(OFPort.OFPP_FLOOD.getValue(),\n    (short)0xFFFF));\n} else {\n    actions.add(new OFActionOutput(OFPort.OFPP_ALL.getValue(),\n    (short)0xFFFF));\n}\npo.setActions(actions);\npo.setActionsLength((short) OFActionOutput.MINIMUM_LENGTH);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u628a\u5c01\u5305\u7684\u8cc7\u6599\u4e00\u4f75\u50b3\u4e0b\u53bb\uff0c\u7136\u5f8cflood"),"\n",(0,r.kt)("strong",{parentName:"p"},"\u5982\u679cPacketIn\u662f\u9001bufferID\u800c\u4e0d\u662fpacketData\u7684\u8a71\uff0c\u9019\u908a\u662f\u5426\u8981\u984d\u5916\u5224\u65b7???")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"byte[] packetData = pi.getPacketData();\npoLength += packetData.length;\npo.setPacketData(packetData);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u628a\u8a0a\u606f\u85c9\u7531messageDamper\u9001\u7d66switch"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"messageDamper.write(sw, po, cntx);")),(0,r.kt)("h2",{id:"forward"},"Forward"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"check we know the desination device"),(0,r.kt)("li",{parentName:"ul"},"check source device and destination device are same cluseter"),(0,r.kt)("li",{parentName:"ul"},"find all attach switch"),(0,r.kt)("li",{parentName:"ul"},"find route between souce device and destination device"),(0,r.kt)("li",{parentName:"ul"},"use ",(0,r.kt)("em",{parentName:"li"},"forwardingBase"),"'s method to push a route to all swith which on route.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5148\u53d6\u5f97source \u8ddf destination device"),"\n",(0,r.kt)("strong",{parentName:"p"},"\u6bcf\u500bdevice \u662f\u7528IP\u3001MAC\u3001VLAN\u4f86\u505a\u70ba\u5340\u5225\u7684"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"IDevice dstDevice = IDeviceService.fcStore.get(cntx, IDeviceService.CONTEXT_DST_DEVICE);"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"IDevice srcDevice = IDeviceService.fcStore.get(cntx, IDeviceService.CONTEXT_SRC_DEVICE);")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u63a5\u4e0b\u4f86\u6839\u64dapkacetIN\u9032\u4f86\u7684switch\u53d6\u5f97\u5176\u6240\u5c6c\u7684cluster."),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Long srcIsland = topology.getL2DomainId(sw.getId());")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u53bb\u63a2\u8a2adestination device\u6240\u9023\u63a5\u5230\u7684switch,\u770b\u770b\u662f\u5426\u6709\u8ddf\u767c\u751fPacketIn\u7684switch\u662f\u5728\u540c\u4e00\u500bCluster,\n\u662f\u7684\u8a71\u624d\u6709\u8fa6\u6cd5\u8f49\u9001\uff0c\u5426\u5247\u5c31Flood\u51fa\u53bb")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java="},"for (SwitchPort dstDap : dstDevice.getAttachmentPoints()) {\n    Long dstSwDpid = dstDap.getSwitchDPID();\n    Long dstIsland = topology.getL2DomainId(dstSwDpid);`\n\nif ((dstIsland != null) && dstIsland.equals(srcIsland))\non_same_island = true;\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u53d6\u5f97source / destination device\u6240\u9023\u63a5\u5230\u7684\u6240\u6709switch"),"\n",(0,r.kt)("strong",{parentName:"p"},"\u76ee\u524d\u9084\u4e0d\u662f\u5f88\u6e05\u695a\u600e\u6a23\u7684\u60c5\u5f62\u4e0b\uff0c\u53ef\u4ee5\u4e00\u500bdevice\u9023\u63a5\u5230\u591a\u500bswitch \u4e5f\u8a31\u7528hub\u5427")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"SwitchPort[] srcDaps = srcDevice.getAttachmentPoints();\n"),"SwitchPort[] dstDaps = dstDevice.getAttachmentPoints();`"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5229\u7528routingEngine\u4f86\u53d6\u5f97\u5169\u500bswitch\u9593\u7684\u6700\u77ed\u8def\u5f91 (dijstra)"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Route route = routingEngine.getRoute(srcDap.getSwitchDPID(),(short)srcDap.getPort(),dstDap.getSwitchDPID(),\n(short)dstDap.getPort(), 0);")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u63a5\u8005\u900f\u904eForwardingBase\u7684pushRoute,\u6703\u628a\u8def\u5f91\u4e0a\u6240\u6709\u7684switch\u90fd\u767c\u9001\u4e00\u500bFlow-Modify\u7684\u5c01\u5305"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"pushRoute(route, match, wildcard_hints, pi, sw.getId(), cookie,cntx, requestFlowRemovedNotifn,\n\t\t\t\t\t\tfalse, OFFlowMod.OFPFC_ADD);")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8655\u7406\u5b8c\u9019\u7d44switch\u5f8c\uff0c\u7e7c\u7e8c\u5617\u8a66\u5176\u4ed6\u9023\u63a5\u7684switch"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"iSrcDaps++;"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"iDstDaps++;")),(0,r.kt)("h1",{id:"\u7d50\u8ad6"},"\u7d50\u8ad6"),(0,r.kt)("p",null,"Forwarding\u662f\u500b\u5f88\u57fa\u672c\u7684module,\u539f\u59cb\u7684\u60c5\u6cc1\u4e0b\u5c31\u662f\u628a\u5c01\u5305\u7d66forward\u6216\u662fflood\u7684\u800c\u5df2\uff0c\n\u76ee\u524d\u88e1\u9762\u7684\u8a2d\u8a08\u662f\u5e0c\u671b\u80fd\u5920\u53d6\u5f97\u591a\u500battach points,\u4f46\u662f\u6211\u76ee\u524d\u5617\u8a66\u5404\u7a2e\u62d3\u6a38\uff0c\u90fd\u6c92\u6709\u8fa6\u6cd5\u8b93\u4e00\u500bdevice\u9023\u63a5\u5230\u591a\u500bswitch,\u4e0d\u77e5\u9053\u662f\u5426\u8981\u4f7f\u7528hub\u4e4b\u985e\u7684\u6771\u897f\u4f86\u5b8c\u6210\uff0c\u9019\u90e8\u5206\u8981\u518d\u5617\u8a66\u770b\u770b\u3002"))}u.isMDXComponent=!0}}]);