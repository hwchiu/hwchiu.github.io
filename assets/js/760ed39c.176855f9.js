"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[86198],{3905:(t,e,n)=>{n.d(e,{Zo:()=>l,kt:()=>m});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},s=Object.keys(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),d=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},l=function(t){var e=d(t.components);return r.createElement(c.Provider,{value:e},t.children)},i="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,s=t.originalType,c=t.parentName,l=p(t,["components","mdxType","originalType","parentName"]),i=d(n),k=a,m=i["".concat(c,".").concat(k)]||i[k]||u[k]||s;return n?r.createElement(m,o(o({ref:e},l),{},{components:n})):r.createElement(m,o({ref:e},l))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var s=n.length,o=new Array(s);o[0]=k;var p={};for(var c in e)hasOwnProperty.call(e,c)&&(p[c]=e[c]);p.originalType=t,p[i]="string"==typeof t?t:a,o[1]=p;for(var d=2;d<s;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8538:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const s={title:"Drbd Networking Structure Introduction",tags:["DRBD","System","Network","Kernel","SourceCode"],date:new Date("2017-05-16T17:16:15.000Z")},o=void 0,p={unversionedId:"techPost/2017/DRBD-networking-structure",id:"techPost/2017/DRBD-networking-structure",title:"Drbd Networking Structure Introduction",description:"Introduction",source:"@site/docs/techPost/2017/DRBD-networking-structure.md",sourceDirName:"techPost/2017",slug:"/techPost/2017/DRBD-networking-structure",permalink:"/docs/techPost/2017/DRBD-networking-structure",draft:!1,tags:[{label:"DRBD",permalink:"/docs/tags/drbd"},{label:"System",permalink:"/docs/tags/system"},{label:"Network",permalink:"/docs/tags/network"},{label:"Kernel",permalink:"/docs/tags/kernel"},{label:"SourceCode",permalink:"/docs/tags/source-code"}],version:"current",frontMatter:{title:"Drbd Networking Structure Introduction",tags:["DRBD","System","Network","Kernel","SourceCode"],date:"2017-05-16T17:16:15.000Z"},sidebar:"techPost",previous:{title:"2017",permalink:"/docs/category/2017"},next:{title:"DRBD v9.0 Network Work Flow(ii)",permalink:"/docs/techPost/2017/DRBD-v9-0-Network-Work-Flow-ii"}},c={},d=[{value:"Introduction",id:"introduction",level:3},{value:"\u901a\u7528",id:"\u901a\u7528",level:4},{value:"TCP\u5c08\u7528",id:"tcp\u5c08\u7528",level:4},{value:"Environment",id:"environment",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u67b6\u69cb\u89e3\u91cb",id:"\u67b6\u69cb\u89e3\u91cb",level:4},{value:"drbd_transport_class",id:"drbd_transport_class",level:5},{value:"drbd_transport_ops",id:"drbd_transport_ops",level:5},{value:"drbd_transport",id:"drbd_transport",level:5},{value:"drbd_listener",id:"drbd_listener",level:5},{value:"drbd_path",id:"drbd_path",level:5},{value:"drbd_connection",id:"drbd_connection",level:5},{value:"struct dtt_path",id:"struct-dtt_path",level:5},{value:"struct dtt_socket_container",id:"struct-dtt_socket_container",level:5},{value:"struct dtt_listener",id:"struct-dtt_listener",level:5},{value:"struct drbd_tcp_transport",id:"struct-drbd_tcp_transport",level:5},{value:"drbd_resource",id:"drbd_resource",level:5},{value:"\u67b6\u69cb\u5716",id:"\u67b6\u69cb\u5716",level:4},{value:"Connection and Path",id:"connection-and-path",level:5},{value:"Listener and Path",id:"listener-and-path",level:5},{value:"Resource and Conection/Listener",id:"resource-and-conectionlistener",level:5},{value:"\u7d50\u8ad6",id:"\u7d50\u8ad6",level:3}],l={toc:d},i="wrapper";function u(t){let{components:e,...n}=t;return(0,a.kt)(i,(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"\u672c\u6587\u4e3b\u8981\u5206\u6790 ",(0,a.kt)("strong",{parentName:"p"},"drbd")," \u5728 ",(0,a.kt)("strong",{parentName:"p"},"kernel space")," \u4e2d\u95dc\u65bc ",(0,a.kt)("strong",{parentName:"p"},"networking")," \u9019\u4e00\u90e8\u5206\u7528\u5230\u7684\u6240\u6709\u8cc7\u6599\u7d50\u69cb\uff0c\u9019\u4e9b\u8cc7\u6599\u7d50\u69cb\u4e3b\u8981\u5206\u6210\u5169\u500b\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f\u901a\u7528\u7684\uff0c\u4e00\u90e8\u5206\u5247\u662f ",(0,a.kt)("strong",{parentName:"p"},"TCP")," \u9023\u7dda\u5c08\u7528\u7684"),(0,a.kt)("h4",{id:"\u901a\u7528"},"\u901a\u7528"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"struct drbd_resource"),(0,a.kt)("li",{parentName:"ul"},"struct drbd_connection"),(0,a.kt)("li",{parentName:"ul"},"struct drbd_path"),(0,a.kt)("li",{parentName:"ul"},"struct drbd_listener"),(0,a.kt)("li",{parentName:"ul"},"struct drbd_transport"),(0,a.kt)("li",{parentName:"ul"},"struct drbd_transport_ops"),(0,a.kt)("li",{parentName:"ul"},"struct drbd_transport_class")),(0,a.kt)("h4",{id:"tcp\u5c08\u7528"},"TCP\u5c08\u7528"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"struct drbd_tcp_transport"),(0,a.kt)("li",{parentName:"ul"},"struct dtt_listener"),(0,a.kt)("li",{parentName:"ul"},"struct dtt_socket_container"),(0,a.kt)("li",{parentName:"ul"},"struct dtt_path")),(0,a.kt)("h3",{id:"environment"},"Environment"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Drbd 9.0"),(0,a.kt)("li",{parentName:"ul"},"Using TCP as DRBD Transport")),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u70ba\u4e86\u6bd4\u8f03\u597d\u7406\u89e3\u6574\u500b\u904e\u7a0b\uff0c\u6703\u5148\u4ecb\u7d39\u6bcf\u500b\u7d50\u69cb\u5728\u505a\u4ec0\u9ebc\u4e8b\u60c5\uff0c\u7136\u5f8c\u5728\u95e1\u8ff0\u9019\u4e9b\u7d50\u69cb\u4e4b\u9593\u7684\u95dc\u4fc2\u3002"),(0,a.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.kt)("h4",{id:"\u67b6\u69cb\u89e3\u91cb"},"\u67b6\u69cb\u89e3\u91cb"),(0,a.kt)("h5",{id:"drbd_transport_class"},"drbd_transport_class"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"drbd_transport_class")," \u7528\u4f86\u7d00\u9304 networking module \u76f8\u95dc\u8cc7\u8a0a\uff0c\u8b6c\u5982\u8a72 module \u7684\u540d\u7a31\uff0c \u8a72 ",(0,a.kt)("strong",{parentName:"p"},"kernel module"),"\u7684 init function\uff0c\u5176\u4e2d ",(0,a.kt)("strong",{parentName:"p"},"instance_size")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"path_instance_size")," \u5247\u662f\u7528\u4f86\u8a18\u9304\u8a72\u7db2\u8def\u5be6\u4f5c\u904e\u7a0b\u4e2d\uff0c\u7e7c\u627f\u81ea ",(0,a.kt)("strong",{parentName:"p"},"drbd_tanasport_class"),"\u4ee5\u53ca",(0,a.kt)("strong",{parentName:"p"},"drbd_path")," \u90a3\u4e9b\u7269\u4ef6\u771f\u6b63\u7684\u5927\u5c0f\u3002\n\u4ee5 TCP \u8209\u4f8b\u4f86\u8aaa\uff0c\u4ed6\u8a2d\u8a08\u4e86\u4e00\u500b\u7269\u4ef6 ",(0,a.kt)("strong",{parentName:"p"},"drbd_tcp_transport"),"\uff0c\u88e1\u9762\u5305\u542b\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport_class")," \u4ee5\u53ca\u4e00\u4e9b TCP \u6703\u7528\u5230\u7684\u8b8a\u6578\uff0c\u9019\u4e9b\u96f6\u96f6\u7e3d\u7e3d\u52a0\u8d77\u4f86\u7684\u7e3d\u5927\u5c0f\u5c31\u662f\u6b64 TCP module \u771f\u6b63\u8981\u7528\u5230\u7684\u5927\u5c0f\u3002\n\u9019\u908a\u6703\u9019\u6a23\u8a2d\u8a08\u7684\u539f\u56e0\u662f\u56e0\u70ba\u5728\u66f4\u4e0a\u5c64\u8981\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"kmalloc")," \u53bb\u8981\u7a7a\u9593\u7684\u6642\u5019\uff0c\u9700\u8981\u8a08\u7b97\u771f\u6b63\u7528\u5230\u7684\u5927\u5c0f\uff0c\u5982\u4e0b\u5217\u61c9\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"3308     size = sizeof(*connection) - sizeof(connection->transport) + tc->instance_size;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0194 struct drbd_transport_class {\n0195     const char *name;\n0196     const int instance_size;\n0197     const int path_instance_size;\n0198     struct module *module;\n0199     int (*init)(struct drbd_transport *);\n0200     struct list_head list;\n0201 };\n")),(0,a.kt)("h5",{id:"drbd_transport_ops"},"drbd_transport_ops"),(0,a.kt)("p",null,"\u9019\u500b\u7d50\u69cb\u7528\u4f86\u5b9a\u7fa9\u6240\u6709\u8ddf\u7db2\u8def\u76f8\u95dc\u7684\u64cd\u4f5c\uff0c\u5982 ",(0,a.kt)("strong",{parentName:"p"},"connect"),", ",(0,a.kt)("strong",{parentName:"p"},"send")," \u7b49\u3002\n\u6bcf\u500b\u8981\u5be6\u4f5cNetworking Module\u7684 ",(0,a.kt)("strong",{parentName:"p"},"kernel module"),"\u90fd\u5fc5\u9808\u8981\u5be6\u505a\u9019\u4e9b\u529f\u80fd\uff0c\u4e26\u4e14\u8a2d\u5b9a\u597d\u5c0d\u61c9\u7684 ",(0,a.kt)("strong",{parentName:"p"},"function pointer"),"\u3002\n\u5728 ",(0,a.kt)("strong",{parentName:"p"},"drbd.ko"),"\u4e2d\uff0c\u5c31\u6703\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport")," \u7684\u65b9\u5f0f\u53bb\u5b58\u53d6\u5230\u9019\u4e9b\u5c0d\u61c9\u7684\u64cd\u4f5c\u4f86\u4f7f\u7528\uff0c\u8b6c\u5982"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0686     err = transport->ops->connect(transport);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0130 struct drbd_transport_ops {\n0131     void (*free)(struct drbd_transport *, enum drbd_tr_free_op free_op);\n0132     int (*connect)(struct drbd_transport *);\n0133\n.........\n0165     int (*recv)(struct drbd_transport *, enum drbd_stream, void **buf, size_t size, int flags);\n........\n0179     int (*recv_pages)(struct drbd_transport *, struct drbd_page_chain_head *, size_t size);\n0180\n0181     void (*stats)(struct drbd_transport *, struct drbd_transport_stats *stats);\n0182     void (*set_rcvtimeo)(struct drbd_transport *, enum drbd_stream, long timeout);\n0183     long (*get_rcvtimeo)(struct drbd_transport *, enum drbd_stream);\n0184     int (*send_page)(struct drbd_transport *, enum drbd_stream, struct page *,\n0185              int offset, size_t size, unsigned msg_flags);\n0186     int (*send_zc_bio)(struct drbd_transport *, struct bio *bio);\n0187     bool (*stream_ok)(struct drbd_transport *, enum drbd_stream);\n0188     bool (*hint)(struct drbd_transport *, enum drbd_stream, enum drbd_tr_hints hint);\n0189     void (*debugfs_show)(struct drbd_transport *, struct seq_file *m);\n0190     int (*add_path)(struct drbd_transport *, struct drbd_path *path);\n0191     int (*remove_path)(struct drbd_transport *, struct drbd_path *path);\n0192 };\n")),(0,a.kt)("h5",{id:"drbd_transport"},"drbd_transport"),(0,a.kt)("p",null,"\u771f\u6b63\u7528\u4f86\u62bd\u8c61\u6574\u500b networking module \u7684\u7d50\u69cb\uff0c\u5c07\u4e0a\u9762\u63d0\u5230\u7684 ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport_ops")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport_class")," \u6536\u9304\u5230\u6b64\u7d50\u69cb\u4e2d\uff0c\u6700\u5916\u5c64\u7684 drbd \u900f\u904e\u6b64\u7269\u4ef6\u53ef\u4ee5\u547c\u53eb\u5230\u7576\u524d networking \u7684\u5be6\u4f5c\u65b9\u6cd5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0103 struct drbd_transport {\n0104     struct drbd_transport_ops *ops;\n0105     struct drbd_transport_class *class;\n0106\n0107     struct list_head paths;\n0108\n0109     const char *log_prefix;     /* resource name */\n0110     struct net_conf *net_conf;  /* content protected by rcu */\n0111\n0112     /* These members are intended to be updated by the transport: */\n0113     unsigned int ko_count;\n0114     unsigned long flags;\n0115 };\n")),(0,a.kt)("h5",{id:"drbd_listener"},"drbd_listener"),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u770b\u5230 ",(0,a.kt)("strong",{parentName:"p"},"drbd_listener"),"\uff0c\u7531\u65bc ",(0,a.kt)("strong",{parentName:"p"},"DRBD")," \u662f\u5206\u6563\u5f0f\u7684\u67b6\u69cb\uff0c\u6bcf\u500b ",(0,a.kt)("strong",{parentName:"p"},"host")," \u540c\u6642\u662f",(0,a.kt)("strong",{parentName:"p"},"clinet"),"\u4e5f\u662f ",(0,a.kt)("strong",{parentName:"p"},"server"),"\uff0c\u5728\u626e\u6f14 ",(0,a.kt)("strong",{parentName:"p"},"server")," \u7684\u904e\u7a0b\u4e2d\uff0c\u9700\u8981\u5728\u672c\u5730\u4e0a\u958b\u555f\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"socket")," \u4e26\u4e14\u900f\u904e ",(0,a.kt)("inlineCode",{parentName:"p"},"listen"),"\u53bb\u8655\u7406\u8a72 socket \u4ee5\u63a5\u53d7\u4e4b\u5f8c\u7684\u9023\u7dda\uff0c\u9019\u908a\u5c31\u7528\u9019\u500b\u7d50\u69cb\u4f86\u5132\u5b58\u9019\u76f8\u95dc\u7684\u8cc7\u8a0a\u3002\n\u5c31\u5982\u540c\u8a3b\u89e3\u6240\u8aaa\uff0c\u9019\u53ea\u662f\u4e00\u500b\u62bd\u8c61\u6982\u5ff5\u800c\u5df2\uff0c\u771f\u6b63\u7684\u5be6\u4f5c\u5247\u662f\u4f9d\u8cf4\u6bcf\u500b networking model\u4f86\u8655\u7406\uff0c\u8209\u4f8b\u4f86\u8aaa\uff0c TCP module \u5247\u662f\u5305\u4e86\u4e00\u5c64 ",(0,a.kt)("strong",{parentName:"p"},"dtt_listener"),"\uff0c\u88e1\u9762\u9664\u4e86\u6709\u6700\u539f\u59cb\u7684 ",(0,a.kt)("strong",{parentName:"p"},"drbd_listener")," \u4e4b\u5916\uff0c\u9084\u653e\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"TCP server")," \u4f7f\u7528\u7684 ",(0,a.kt)("strong",{parentName:"p"},"listen socket"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0059 struct dtt_listener {\n0060     struct drbd_listener listener;\n0061     void (*original_sk_state_change)(struct sock *sk);\n0062     struct socket *s_listen;\n0063\n0064     wait_queue_head_t wait; /* woken if a connection came in */\n0065 };\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'0204 /* An "abstract base class" for transport implementations. I.e. it\n0205    should be embedded into a transport specific representation of a\n0206    listening "socket" */\n0207 struct drbd_listener {\n0208     struct kref kref;\n0209     struct drbd_resource *resource;\n0210     struct list_head list; /* link for resource->listeners */\n0211     struct list_head waiters; /* list head for paths */\n0212     spinlock_t waiters_lock;\n0213     int pending_accepts;\n0214     struct sockaddr_storage listen_addr;\n0215     void (*destroy)(struct drbd_listener *);\n0216 };\n')),(0,a.kt)("h5",{id:"drbd_path"},"drbd_path"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"drbd_path"),"\u7684\u6982\u5ff5\u8207 ",(0,a.kt)("strong",{parentName:"p"},"drbd.conf")," \u4e2d\u8a2d\u5b9a\u6a94\u7684\u6982\u5ff5\u76f8\u540c\uff0c\u7528\u4f86\u63cf\u8ff0\u5169\u500b host \u4e4b\u9593\u7684\u9023\u7dda\uff0c\u4e3b\u8981\u5167\u5bb9\u662f ",(0,a.kt)("strong",{parentName:"p"},"ip(v4/v6):port"),"\uff0c\u6240\u4ee5\u7d50\u69cb\u4e2d\u6703\u6709 ",(0,a.kt)("strong",{parentName:"p"},"my_addr")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"peer_addr"),"\uff0c\u7528\u4f86\u7d00\u9304\u5169\u7aef\u9ede\u7684\u4f4d\u5740\u3002\n\u7531\u65bc\u6bcf\u500b ",(0,a.kt)("strong",{parentName:"p"},"path")," \u4e2d\uff0c\u672c\u5730\u7aef\u4e0d\u4f46\u8981\u7576 client \u9023\u904e\u53bb\uff0c\u540c\u6642\u4e5f\u8981\u7576 server \u7b49\u5f85\u5c0d\u65b9\u9023\u7dda\uff0c\u56e0\u6b64 ",(0,a.kt)("strong",{parentName:"p"},"my_addr")," \u5c31\u6703\u62ff\u4f86\u7576\u4f5c ",(0,a.kt)("strong",{parentName:"p"},"listener")," \u4f7f\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\u8a72\u6210\u54e1\u6709\u4e00\u500b\u6307\u5411 ",(0,a.kt)("strong",{parentName:"p"},"drbd_listener")," \u7684\u6307\u6a19 ",(0,a.kt)("strong",{parentName:"p"},"listener"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0085 struct drbd_path {\n0086     struct sockaddr_storage my_addr;\n0087     struct sockaddr_storage peer_addr;\n0088\n0089     struct kref kref;\n0090\n0091     int my_addr_len;\n0092     int peer_addr_len;\n0093     bool established; /* updated by the transport */\n0094\n0095     struct list_head list; /* paths of a connection */\n0096     struct list_head listener_link; /* paths waiting for an incomming connection,\n0097                        head is in a drbd_listener */\n0098     struct drbd_listener *listener;\n0099 };\n")),(0,a.kt)("h5",{id:"drbd_connection"},"drbd_connection"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"drbd_connection")," \u7684\u6982\u5ff5\u8207 ",(0,a.kt)("strong",{parentName:"p"},"drbd.conf")," \u4e2d ",(0,a.kt)("strong",{parentName:"p"},"connection"),"\u7684\u63cf\u8ff0\u76f8\u540c\uff0c\u76f8\u5c0d\u65bc ",(0,a.kt)("strong",{parentName:"p"},"path")," \u4f86\u8aaa\u662f\u500b\u66f4\u9ad8\u4e00\u7b49\u7684\u62bd\u8c61\u6982\u5ff5\uff0c\u63cf\u8ff0\u5169\u500b host \u4e4b\u9593\u7684\u9023\u7dda\uff0c\n\u9019\u4e9b\u9023\u7dda\u662f\u7531\u5f88\u591a\u500b ",(0,a.kt)("strong",{parentName:"p"},"path")," \u6240\u7d44\u6210\u7684\u6240\u4ee5\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u53ef\u4ee5\u6709\u5f88\u591a\u689d ",(0,a.kt)("strong",{parentName:"p"},"path")," \u800c",(0,a.kt)("strong",{parentName:"p"},"connection")," \u4e2d\u9593\u7684\u50b3\u8f38\u6703\u900f\u904e\u5176\u4e2d\u4e00\u689d ",(0,a.kt)("strong",{parentName:"p"},"path")," \u4f86\u4ea4\u63db\uff0c\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u4f86\u8aaa\uff0c\u540c\u6642\u53ea\u6703\u4f7f\u7528\u4e00\u689d ",(0,a.kt)("strong",{parentName:"p"},"path")," \u50b3\u8f38\uff0c\u4e26\u6c92\u6709\u8fa6\u6cd5\u9054\u5230 ",(0,a.kt)("strong",{parentName:"p"},"link aggregation"),"\u7684\u529f\u6548\u3002"),(0,a.kt)("p",null,"\u4e0b\u5716\u7d50\u69cb\u4e2d\u53ef\u4ee5\u89c0\u5bdf\u5230\u6709\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"transport"),"\uff0c\u6bcf\u689d ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u90fd\u6703\u7d81\u5b9a\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"transport")," \u7684\u7269\u4ef6\uff0c\u8a72\u689d connection \u7684\u6240\u6709\u64cd\u4f5c\u90fd\u4f9d\u7167\u8a72\u7269\u4ef6\u5167\u5bb9\u53bb\u57f7\u884c\uff0c\u6240\u4ee5\u5728\u6b64\u67b6\u69cb\u4e0b\uff0c\u662f\u53ef\u4ee5\u505a\u5230\u6bcf\u689d ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u4f7f\u7528\u4e0d\u540c\u7684\u50b3\u8f38\u65b9\u6cd5\uff0c\u8b6c\u5982\u539f\u751fTCP\u6216\u662f\u81ea\u884c\u5be6\u4f5c\u7684\u7269\u4ef6\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0904 struct drbd_connection {\n0905     struct list_head connections;\n..................\n1047\n1048     unsigned int peer_node_id;\n1049     struct list_head twopc_parent_list;\n1050     struct drbd_transport transport; /* The transport needs to be the last member. The acutal\n1051                         implementation might have more members than the\n1052                         abstract one. */\n1053 };\n")),(0,a.kt)("h5",{id:"struct-dtt_path"},"struct dtt_path"),(0,a.kt)("p",null,"\u9019\u908a\u9664\u4e86\u5c07\u672c\u4f86\u7684 ",(0,a.kt)("strong",{parentName:"p"},"drbd_path")," \u5305\u8d77\u4f86\u5916\uff0c\u9084\u591a\u4e86\u4e00\u500blist\u4f86\u8655\u7406\u4e0a\u8ff0 ",(0,a.kt)("strong",{parentName:"p"},"dtt_socket_container")," \u7684\u7269\u4ef6\uff0c\u9019\u908a\u76ee\u524d\u6c92\u6709\u8fa6\u6cd5\u7406\u89e3\u70ba\u4ec0\u9ebc\u9700\u8981\u7528list\u4f86\u4fdd\u5b58\uff0c\u6211\u4ee5\u70ba\u53ea\u9700\u8981\u7528\u4e00\u500b socket \u7684\u7269\u4ef6\u5c31\u53ef\u4ee5\u4e86\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0076 struct dtt_path {\n0077     struct drbd_path path;\n0078\n0079     struct list_head sockets; /* sockets passed to me by other receiver threads */\n0080 };\n")),(0,a.kt)("h5",{id:"struct-dtt_socket_container"},"struct dtt_socket_container"),(0,a.kt)("p",null,"\u6b64\u7269\u4ef6\u9084\u4ee4\u4eba\u6eff\u7d0d\u60b6\u7684\uff0c\u76ee\u524d\u9084\u6c92\u6709\u60f3\u5230\u4ec0\u9ebc\u60c5\u6cc1\u4e0b\u6703\u9700\u8981\u9019\u500b\u6771\u897f...\uff0c\u5f85\u4e4b\u5f8c\u7a81\u7136\u9818\u609f\u4e86\u518d\u56de\u4f86\u88dc\u8db3\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0071 struct dtt_socket_container {\n0072     struct list_head list;\n0073     struct socket *socket;\n0074 };\n")),(0,a.kt)("h5",{id:"struct-dtt_listener"},"struct dtt_listener"),(0,a.kt)("p",null,"\u771f\u6b63\u5be6\u4f5c ",(0,a.kt)("strong",{parentName:"p"},"drbd_listener")," \u7684\u7269\u4ef6\uff0c\u7531\u65bc\u662f\u8d70 TCP \u7684\u67b6\u69cb\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"socket")," \u4f86\u9032\u884c listen \u7684\u52d5\u4f5c\u3002\n\u5176\u9918\u7684\u6210\u54e1 ",(0,a.kt)("strong",{parentName:"p"},"original_sk_state_change"),"\u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"wait")," \u5f85\u8a73\u7d30\u5206\u6790 tcp \u7a0b\u5f0f\u78bc\u6642\u518d\u8aaa\u660e\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0059 struct dtt_listener {\n0060     struct drbd_listener listener;\n0061     void (*original_sk_state_change)(struct sock *sk);\n0062     struct socket *s_listen;\n0063\n0064     wait_queue_head_t wait; /* woken if a connection came in */\n0065 };\n")),(0,a.kt)("h5",{id:"struct-drbd_tcp_transport"},"struct drbd_tcp_transport"),(0,a.kt)("p",null,"\u9019\u908a\u5247\u662f TCP \u65b9\u9762\u5c0d\u65bc ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport")," \u7684\u5be6\u73fe\uff0c\u7531\u65bc\u8981\u652f\u63f4 ",(0,a.kt)("strong",{parentName:"p"},"DATA_STREAM")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"CONTROL_STREAM"),"\uff0c\u6240\u4ee5\u9019\u908a\u6bcf\u500b tcp_transport \u5247\u662f\u6703\u4f7f\u7528\u5169\u500b ",(0,a.kt)("strong",{parentName:"p"},"sockets")," \u7684\u7269\u4ef6\u4f86\u4fdd\u5b58\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0051 struct drbd_tcp_transport {\n0052     struct drbd_transport transport; /* Must be first! */\n0053     spinlock_t paths_lock;\n0054     unsigned long flags;\n0055     struct socket *stream[2];\n0056     struct buffer rbuf[2];\n0057 };\n")),(0,a.kt)("h5",{id:"drbd_resource"},"drbd_resource"),(0,a.kt)("p",null,"\u5728 kernel \u5c64\u7d1a\u9019\u908a\uff0c\u6700\u4e3b\u8981\u7684\u7ba1\u7406\u8005\u662f ",(0,a.kt)("strong",{parentName:"p"},"drbd_resource"),"\uff0c\u4ed6\u63a7\u7ba1\u6240\u6709\u7684\u8cc7\u6e90\uff0c\u5305\u542b\u4e86 listener, connections\u7b49\u8207\u7db2\u8def\u76f8\u95dc\u7684\u8cc7\u8a0a\u3002"),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230 ",(0,a.kt)("strong",{parentName:"p"},"struct drbd_resource")," \u4e2d\u7684\u6210\u54e1\u6709\u5169\u500b ",(0,a.kt)("strong",{parentName:"p"},"list_head")," \u7684\u6210\u54e1\uff0c\u5206\u5225\u7528\u4f86\u5c07 ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"listener")," \u7d66\u4e32\u8d77\u4f86\u3002\nconnection(",(0,a.kt)("strong",{parentName:"p"},"drbd_connection"),") \u4ee3\u8868\u7684\u5c31\u662f\u6bcf\u4e00\u5c0d host \u7684 connection\uff0c\u5982\u540c\u5728 ",(0,a.kt)("strong",{parentName:"p"},"user-space")," \u4e2d ",(0,a.kt)("strong",{parentName:"p"},"drbd.conf")," \u4e2d\u8a2d\u5b9a\u7684\u90a3\u6a23\uff0c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"0820 struct drbd_resource {\n...\n0832     struct list_head connections;\n....\n0893     struct list_head listeners;\n...\n")),(0,a.kt)("h4",{id:"\u67b6\u69cb\u5716"},"\u67b6\u69cb\u5716"),(0,a.kt)("h5",{id:"connection-and-path"},"Connection and Path"),(0,a.kt)("p",null,"\u62bd\u8c61\u4f86\u8aaa\uff0c\u6bcf\u500b ",(0,a.kt)("strong",{parentName:"p"},"connection"),"\u6703\u64c1\u6709\u591a\u689d ",(0,a.kt)("strong",{parentName:"p"},"path"),"\uff0c\u4f46\u662f\u5be6\u969b\u4e0a\u5176\u5be6\u662f\u6bcf\u689d ",(0,a.kt)("strong",{parentName:"p"},"connection"),"\u5167\u7684 ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport")," \u64c1\u6709\u591a\u689d ",(0,a.kt)("strong",{parentName:"p"},"path"),"\u3002\n\u70ba\u4e86\u5bb9\u6613\u7406\u89e3\uff0c\u6240\u4ee5\u5e95\u4e0b\u90fd\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u53d6\u4ee3 ",(0,a.kt)("strong",{parentName:"p"},"connection"),"\u5167\u90e8\u7684 ",(0,a.kt)("strong",{parentName:"p"},"drbd_transport"),"\u3002"),(0,a.kt)("p",null,"\u6bcf\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"connection")," \u6703\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"double link list")," \u7684\u65b9\u5f0f\u4f86\u7dad\u8b77\u591a\u689d ",(0,a.kt)("strong",{parentName:"p"},"path"),"\uff0c\u6240\u4ee5\u5728 ",(0,a.kt)("strong",{parentName:"p"},"connetion")," \u4e2d\u6703\u6709\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"list head"),"\u7684\u7269\u4ef6\u4f86\u6307\u5411\u8a72 ",(0,a.kt)("strong",{parentName:"p"},"link list"),"\u7684\u7b2c\u4e00\u500b\u3002\n\u5982\u4e0b\u5716\n",(0,a.kt)("img",{parentName:"p",src:"http://i.imgur.com/udR9bVq.jpg",alt:null})),(0,a.kt)("h5",{id:"listener-and-path"},"Listener and Path"),(0,a.kt)("p",null,"\u6bcf\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"listener")," \u90fd\u4ee3\u8868\u4e00\u500b listen socket\uff0c\u800c\u4e0d\u540c\u7684 ",(0,a.kt)("strong",{parentName:"p"},"path")," \u5247\u53ef\u4ee5\u64c1\u6709\u76f8\u540c\u7684 ",(0,a.kt)("strong",{parentName:"p"},"listen socket"),"\uff0c\u56e0\u70ba\u53ea\u6703\u6709\u5176\u4e2d\u4e00\u500b\u771f\u6b63\u88ab\u4f7f\u7528\u5230\uff0c\u6240\u4ee5\u5728\u67b6\u69cb\u4e0a\u6bcf\u500b ",(0,a.kt)("strong",{parentName:"p"},"listener")," \u4e5f\u6703\u6709\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"double link list")," \u4e32\u8d77\u7528\u5230\u672c\u8eab\u7684 ",(0,a.kt)("strong",{parentName:"p"},"path"),"\u3002\n\u5982\u4e0b\u5716\n",(0,a.kt)("img",{parentName:"p",src:"http://i.imgur.com/CZuF7on.jpg",alt:null})),(0,a.kt)("h5",{id:"resource-and-conectionlistener"},"Resource and Conection/Listener"),(0,a.kt)("p",null,"Resource\u662f\u6700\u4e0a\u5c64\u7684\u7269\u4ef6\uff0c\u638c\u7ba1\u6240\u6709\u7684 connection\uff0c\u56e0\u6b64\u4e5f\u6703\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"double link list"),"\u53bb\u638c\u7ba1\u6240\u6709\u7684 connections\u3002\n\u6b64\u5916\uff0c\u70ba\u4e86\u5728\u67d0\u4e9b\u6b65\u9a5f\u80fd\u5920\u66f4\u5feb\u901f\u7684\u67e5\u627e\u6240\u6709\u7684 listener\uff0c resource \u672c\u8eab\u4e5f\u7528\u4e86\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"double link list")," \u4e32\u8d77\u6240\u6709\u7684 resource\u3002\n\u5c07\u4e0a\u8ff0\u9019\u4e9b\u6240\u6709\u7d50\u679c\u90fd\u7e6a\u6210\u5716\u7247\uff0c\u4e26\u4e14\u5c07\u6240\u6709\u7684 ",(0,a.kt)("strong",{parentName:"p"},"double link")," \u90fd\u7c21\u5316\u6210 ",(0,a.kt)("strong",{parentName:"p"},"single link")," \u4e14\u900f\u904e\u4e0d\u540c\u7684\u7bad\u982d\u7b26\u865f\u8868\u73fe\u4e0d\u540c\u7684 ",(0,a.kt)("strong",{parentName:"p"},"link type"),"\u3002\u5247\u7d50\u679c\u6703\u5982\u4e0b\u5716\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"http://i.imgur.com/QVQ3D2B.jpg",alt:"relation"})),(0,a.kt)("h3",{id:"\u7d50\u8ad6"},"\u7d50\u8ad6"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"drbd 9.0 \u4e4b\u5f8c\u70ba\u4e86\u652f\u63f4 ",(0,a.kt)("a",{parentName:"li",href:"http://lists.linbit.com/pipermail/drbd-announce/2016-February/000218.html"},"multiple path"),"\uff0c\u5728\u67b6\u69cb\u4e0a\u6709\u4e0d\u5c0f\u7684\u6539\u52d5\uff0c\u6240\u4ee5\u6574\u500b path \u76f8\u95dc\u7684\u7d50\u69cb\u5c31\u8b8a\u5f97\u8907\u96dc\u8a31\u591a\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u672c\u7bc7\u4e3b\u8981\u8457\u91cd\u5728\u62bd\u8c61\u5c64\u7684\u6982\u5ff5\u4e0a\uff0c\u5be6\u4f5c\u4e0a\u9084\u6709\u8a31\u591a\u5c0f\u7d30\u7bc0\u6c92\u6709\u63d0\u8d77\uff0c\u9019\u4e9b\u5fc5\u9808\u8981\u5230\u5206\u6790 TCP \u6a21\u7d44\u5be6\u969b\u4e0a\u662f\u600e\u9ebc\u904b\u4f5c\u6642\u624d\u6709\u66f4\u6df1\u7684\u7406\u89e3\u8207\u9ad4\u609f\u3002")))}u.isMDXComponent=!0}}]);