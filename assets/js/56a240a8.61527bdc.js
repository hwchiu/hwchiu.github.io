"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[89239],{3905:(n,e,t)=>{t.d(e,{Zo:()=>_,kt:()=>N});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var l=r.createContext({}),s=function(n){var e=r.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},_=function(n){var e=s(n.components);return r.createElement(l.Provider,{value:e},n.children)},u="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,l=n.parentName,_=o(n,["components","mdxType","originalType","parentName"]),u=s(t),k=a,N=u["".concat(l,".").concat(k)]||u[k]||c[k]||i;return t?r.createElement(N,p(p({ref:e},_),{},{components:t})):r.createElement(N,p({ref:e},_))}));function N(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,p=new Array(i);p[0]=k;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=n,o[u]="string"==typeof n?n:a,p[1]=o;for(var s=2;s<i;s++)p[s]=t[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},53245:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const i={title:"IPvS \u5b78\u7fd2\u624b\u518a(\u56db)",keywords:["linux","ipvs"],tags:["IPVS","Network","Linux","Kernel"],description:"\u672c\u6587\u4f5c\u70ba IPVS \u7cfb\u5217\u6587\u7b2c\u56db\u7bc7\uff0c\u4e3b\u8981\u662f\u8ddf\u5927\u5bb6\u4ecb\u7d39 IPVS \u65bc Linux Kernel \u5167\u7684\u67b6\u69cb\u8a2d\u8a08\uff0c\u900f\u904e\u7406\u89e3\u5176\u8a2d\u8a08\u66f4\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u53bb\u77ad\u89e3 IPVS \u8207 IPTABLES \u7684\u5dee\u7570\uff0c\u9762\u5c0d\u8af8\u5982\u6b64\u985e\u7684\u63a2\u8a0e\u6587\u7ae0\u66f4\u80fd\u5920\u6709\u8db3\u5920\u7684\u80cc\u666f\u53bb\u601d\u8003\u8207\u5b78\u7fd2",date:new Date("2020-08-16T06:48:44.000Z")},p="Preface",o={unversionedId:"techPost/2020/ipvs-4",id:"techPost/2020/ipvs-4",title:"IPvS \u5b78\u7fd2\u624b\u518a(\u56db)",description:"\u672c\u6587\u4f5c\u70ba IPVS \u7cfb\u5217\u6587\u7b2c\u56db\u7bc7\uff0c\u4e3b\u8981\u662f\u8ddf\u5927\u5bb6\u4ecb\u7d39 IPVS \u65bc Linux Kernel \u5167\u7684\u67b6\u69cb\u8a2d\u8a08\uff0c\u900f\u904e\u7406\u89e3\u5176\u8a2d\u8a08\u66f4\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u53bb\u77ad\u89e3 IPVS \u8207 IPTABLES \u7684\u5dee\u7570\uff0c\u9762\u5c0d\u8af8\u5982\u6b64\u985e\u7684\u63a2\u8a0e\u6587\u7ae0\u66f4\u80fd\u5920\u6709\u8db3\u5920\u7684\u80cc\u666f\u53bb\u601d\u8003\u8207\u5b78\u7fd2",source:"@site/docs/techPost/2020/ipvs-4.md",sourceDirName:"techPost/2020",slug:"/techPost/2020/ipvs-4",permalink:"/docs/techPost/2020/ipvs-4",draft:!1,tags:[{label:"IPVS",permalink:"/docs/tags/ipvs"},{label:"Network",permalink:"/docs/tags/network"},{label:"Linux",permalink:"/docs/tags/linux"},{label:"Kernel",permalink:"/docs/tags/kernel"}],version:"current",frontMatter:{title:"IPvS \u5b78\u7fd2\u624b\u518a(\u56db)",keywords:["linux","ipvs"],tags:["IPVS","Network","Linux","Kernel"],description:"\u672c\u6587\u4f5c\u70ba IPVS \u7cfb\u5217\u6587\u7b2c\u56db\u7bc7\uff0c\u4e3b\u8981\u662f\u8ddf\u5927\u5bb6\u4ecb\u7d39 IPVS \u65bc Linux Kernel \u5167\u7684\u67b6\u69cb\u8a2d\u8a08\uff0c\u900f\u904e\u7406\u89e3\u5176\u8a2d\u8a08\u66f4\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u53bb\u77ad\u89e3 IPVS \u8207 IPTABLES \u7684\u5dee\u7570\uff0c\u9762\u5c0d\u8af8\u5982\u6b64\u985e\u7684\u63a2\u8a0e\u6587\u7ae0\u66f4\u80fd\u5920\u6709\u8db3\u5920\u7684\u80cc\u666f\u53bb\u601d\u8003\u8207\u5b78\u7fd2",date:"2020-08-16T06:48:44.000Z"},sidebar:"techPost",previous:{title:"IPvS \u5b78\u7fd2\u624b\u518a(\u4e09)",permalink:"/docs/techPost/2020/ipvs-3"},next:{title:"Kubernetes - IP \u91cd\u8907\u5947\u9047\u8a18",permalink:"/docs/techPost/2020/kubernetes-duplicate-pod-ip"}},l={},s=[{value:"User Space",id:"user-space",level:2},{value:"Kernel Space",id:"kernel-space",level:2},{value:"\u8f09\u5165 Scheduling Kernel Module",id:"\u8f09\u5165-scheduling-kernel-module",level:2},{value:"\u8a3b\u518a Netfilter Function",id:"\u8a3b\u518a-netfilter-function",level:2},{value:"IPVS \u8207 IPTABLES \u7684\u53d6\u4ee3\u554f\u984c",id:"ipvs-\u8207-iptables-\u7684\u53d6\u4ee3\u554f\u984c",level:2},{value:"IPVS \u9664\u932f\u4e0d\u6613",id:"ipvs-\u9664\u932f\u4e0d\u6613",level:2}],_={toc:s},u="wrapper";function c(n){let{components:e,...t}=n;return(0,a.kt)(u,(0,r.Z)({},_,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"preface"},"Preface"),(0,a.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u4f5c\u70ba\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u56db\u7bc7\uff0c\u8a72\u7cfb\u5217\u6587\u5e0c\u671b\u80fd\u5920\u5f9e\u6982\u5ff5\u5230\u5be6\u4f5c\uff0c\u5f9e\u7c21\u55ae\u5230\u8907\u96dc\u4f86\u63a2\u8a0e IPVS (IP Virtual Server) \u7684\u6982\u5ff5\uff0c\u76ee\u524d\u898f\u5283\u7684\u4e3b\u984c\u5305\u542b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.hwchiu.com/ipvs-1.html"},"IPVS \u7684\u57fa\u672c\u4f7f\u7528\u8207\u6982\u5ff5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.hwchiu.com/ipvs-2.html"},"IPVS \u8207 Kubernetes \u7684\u6574\u5408")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.hwchiu.com/ipvs-3.html"},"IPVS \u9664\u932f\u65b9\u5f0f\u8207\u57fa\u672c Kernel Module \u6982\u5ff5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.hwchiu.com/ipvs-4.html"},"IPVS Kernel \u67b6\u69cb\u5be6\u73fe"))),(0,a.kt)("p",null,"\u672c\u6587\u4e3b\u8981\u662f\u5f9e Linux Kernel \u51fa\u767c\uff0c\u63a2\u8a0e\u4e00\u4e0b IPVS \u65bc Kernel \u7684\u5be6\u4f5c\uff0c\u4e26\u4e14\u5c07\u5176\u8207 IPTABLES \u7684\u5be6\u4f5c\u9032\u884c\u6bd4\u8f03\uff0c\u900f\u904e\u9019\u4e9b\u5be6\u4f5c\u7684\u5dee\u7570\uff0c\u66f4\u53ef\u4ee5\u7406\u89e3\u5728\u6548\u80fd\u4e0a\u70ba\u4f55\u5169\u8005\u6703\u6709\u6240\u5dee\u7570"),(0,a.kt)("h1",{id:"\u74b0\u5883"},"\u74b0\u5883"),(0,a.kt)("p",null,"\u6574\u7bc7\u6587\u7ae0\u90fd\u662f\u57fa\u65bc Linux Kernel 4.15 \u70ba\u57fa\u6e96\u53bb\u95b1\u8b80, \u53ef\u4ee5\u5f9e ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/torvalds/linux/tree/v4.15/net/netfilter/ipvs"},"Github"))," \u6216\u662f ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://elixir.bootlin.com/linux/v4.15/source"},"LXR"))," \u4f86\u9032\u884c\u7dda\u4e0a\u95b1\u8b80"),(0,a.kt)("h1",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,"\u904e\u5f80\u5728\u4f7f\u7528 IPVS \u7684\u6642\u5019\uff0c\u90fd\u6703\u900f\u904e\u5de5\u5177 ",(0,a.kt)("inlineCode",{parentName:"p"},"ipvsadm")," \u4f86\u9032\u884c\u7ba1\u7406\uff0c\u800c\u9019\u500b\u7ba1\u7406\u5de5\u5177\u5be6\u969b\u4e0a\u672c\u8eab\u53ea\u6709\u8a2d\u5b9a\u7684\u529f\u7528\uff0c\u771f\u6b63\u7684\u5c01\u5305\u8655\u7406\u90fd\u662f\u5728 Kernel \u5167\u8655\u7406\uff0c\u66f4\u76f4\u63a5\u7684\u53ef\u4ee5\u8aaa\u6574\u500b Linux Kernel \u5c31\u662f\u4e00\u500b\u904b\u884c\u7684\u5927\u4f3a\u670d\u5668\uff0c\u800c IPVS \u5247\u662f\u53ef\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"Kernel Module")," \u52d5\u614b\u958b\u555f\u7684\u529f\u80fd\u3002"),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u5c07\u6703\u4f7f\u7528\u4e0b\u5217\u793a\u610f\u5716\u4f5c\u70ba\u57fa\u5e95\uff0c\u4f86\u53c3\u8003\u5b78\u7fd2\u5230\u5e95 IPVS \u7684\u5e95\u5c64\u5be6\u4f5c\u6982\u5ff5"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/kHm5pXm.png",alt:null})),(0,a.kt)("h2",{id:"user-space"},"User Space"),(0,a.kt)("p",null,"\u5c31\u5982\u540c\u4e0a\u8ff0\u6240\u8aaa\uff0c ",(0,a.kt)("inlineCode",{parentName:"p"},"user space")," \u7684\u5de5\u5177\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"ipvsadm"),", \u5176\u672c\u8eab\u90fd\u662f\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"get/set socketopt")," \u9019\u500b\u65b9\u5f0f\u8207\u5e95\u5c64\u6e9d\u901a\uff0c\u5176\u76f8\u95dc\u7684\u539f\u59cb\u78bc\u53ef\u4ee5\u53c3\u8003\u9019\u4efd",(0,a.kt)("a",{parentName:"p",href:"https://github.com/formorer/pkg-ipvsadm"},"\u5c08\u6848")),(0,a.kt)("p",null,"\u5176\u4e2d\u4e00\u500b\u6709\u8da3\u7684\u5730\u65b9\u5728\u65bc\uff0c ",(0,a.kt)("strong",{parentName:"p"},"ipvsadm")," \u672c\u8eab\u4f7f\u7528\u4e0a\u4e0d\u9700\u8981\u5148\u81ea\u5df1\u5b89\u88dd\u76f8\u95dc\u7684 ",(0,a.kt)("strong",{parentName:"p"},"Kerenl Module"),"\uff0c\u9019\u90e8\u5206\u662f\u56e0\u70ba ",(0,a.kt)("strong",{parentName:"p"},"ipvsadm")," \u7684\u539f\u59cb\u78bc\u88e1\u9762\u6703\u5148\u5e6b\u5fd9\u6aa2\u67e5\u7576\u524d\u7cfb\u7d71\u662f\u5426\u5df2\u7d93\u5b58\u5728\u5c0d\u61c9\u7684 ",(0,a.kt)("strong",{parentName:"p"},"ipvs.ko"),"\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5247\u900f\u904e ",(0,a.kt)("inlineCode",{parentName:"p"},"modprobe")," \u9019\u500b\u5de5\u5177\u4f86\u5b89\u88dd ",(0,a.kt)("inlineCode",{parentName:"p"},"ip_vs"),"\u3002\n\u4e5f\u662f\u56e0\u70ba\u900f\u904e\u9019\u500b\u6a5f\u5236\uff0c\u5927\u90e8\u5206\u7684 Linux \u6a5f\u5668\u5982\u679c\u8981\u6210\u70ba Kubernetes \u7bc0\u9ede\u4e26\u4e14\u555f\u52d5 ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u7684\u529f\u80fd\uff0c\u90fd\u4e0d\u9700\u8981\u4e8b\u5148\u53bb\u5b89\u88dd\u6240\u9700\u7684 ",(0,a.kt)("strong",{parentName:"p"},"kernel module"),"\uff0c\u5c0d\u65bc\u7cfb\u7d71\u8a2d\u5b9a\u4f86\u8aaa\u7701\u4e86\u4e00\u4e9b\u5de5"),(0,a.kt)("p",null,"\u4ee5\u4e0b\u5167\u5bb9\u90fd\u53ef\u4ee5\u65bc ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/formorer/pkg-ipvsadm/blob/master/ipvsadm.c"},"ipvsadm.c")," \u4e2d\u627e\u5230"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},'int main(int argc, char **argv)\n{\n    int result;\n\n    if (ipvs_init()) {\n        /* try to insmod the ip_vs module if ipvs_init failed */\n        if (modprobe_ipvs() || ipvs_init())\n            fail(2, "Can\'t initialize ipvs: %s\\n"\n                "Are you sure that IP Virtual Server is "\n                "built in the kernel or as module?",\n                 ipvs_strerror(errno));\n    }\n\n    /* warn the user if the IPVS version is out of date */\n    check_ipvs_version();\n\n    /* list the table if there is no other arguement */\n    if (argc == 1){\n        list_all(FMT_NONE);\n        ipvs_close();\n        return 0;\n    }\n\n    /* process command line arguments */\n    result = process_options(argc, argv, 0);\n\n    ipvs_close();\n    return result;\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},'static int modprobe_ipvs(void)\n{\n    char *argv[] = { "/sbin/modprobe", "--", "ip_vs", NULL };\n    int child;\n    int status;\n    int rc;\n\n    if (!(child = fork())) {\n        execv(argv[0], argv);\n        exit(1);\n    }\n\n    rc = waitpid(child, &status, 0);\n\n    if (rc == -1 || !WIFEXITED(status) || WEXITSTATUS(status)) {\n        return 1;\n    }\n\n    return 0;\n}\n')),(0,a.kt)("h2",{id:"kernel-space"},"Kernel Space"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u6700\u4e3b\u8981\u7684\u529f\u80fd\u90fd\u662f\u7531 ",(0,a.kt)("strong",{parentName:"p"},"ip_vs.ko")," \u9019\u500b\u6a21\u7d44\u63d0\u4f9b\u7684\uff0c\u8a72\u6a21\u7d44\u7684\u529f\u80fd\u7c97\u7565\u53ef\u4ee5\u5206\u6210\u4e09\u5927\u9805"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8655\u7406\u8207 ",(0,a.kt)("strong",{parentName:"li"},"UserSpace")," \u7684\u6e9d\u901a\uff0c\u8b6c\u5982\u63d0\u4f9b\u63a5\u53e3\u4f9b ",(0,a.kt)("strong",{parentName:"li"},"Set/Get Socketopt")," \u4ecb\u9762\u4f7f\u7528"),(0,a.kt)("li",{parentName:"ol"},"\u8655\u7406\u8207 ",(0,a.kt)("strong",{parentName:"li"},"Schduleing Algorithm")," \u7684\u6e9d\u901a\uff0c\u6bcf\u500b ",(0,a.kt)("strong",{parentName:"li"},"Schduleing")," \u672c\u8eab\u90fd\u662f\u4e00\u500b\u7368\u7acb\u7684 ",(0,a.kt)("strong",{parentName:"li"},"kernel module"),"\uff0c\u8b6c\u5982 ",(0,a.kt)("strong",{parentName:"li"},"ipvs_rr.ko"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ipvs.ko")," \u672c\u8eab\u4e5f\u6703\u81ea\u52d5\u63d2\u5165\u5c0d\u61c9\u7684 kernel module\uff0c\u6240\u4ee5\u4f7f\u7528\u8005\u4e26\u4e0d\u9700\u8981\u4e8b\u5148\u5b89\u88dd\uff0c\u53ea\u8981\u78ba\u4fdd\u7cfb\u7d71\u4e0a\u6709\u76f8\u95dc\u7684 ",(0,a.kt)("strong",{parentName:"li"},"kernel module")," \u6a94\u6848\uff0c\u800c\u9019\u90e8\u5206 ",(0,a.kt)("strong",{parentName:"li"},"Ubuntu")," \u767c\u884c\u7248\u672c\u90fd\u6709\uff0c\u5176\u9918\u7684\u767c\u884c\u7248\u672c\u5247\u4e0d\u78ba\u5b9a"))),(0,a.kt)("li",{parentName:"ol"},"\u771f\u6b63\u8655\u7406\u5c01\u5305\u7684\u6838\u5fc3\u908f\u8f2f\uff0c\u9019\u90e8\u5206\u5206\u6210 ",(0,a.kt)("strong",{parentName:"li"},"\u4ec0\u9ebc\u6642\u9593\u8655\u7406\u5c01\u5305")," \u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"li"},"\u600e\u9ebc\u8655\u7406\u5c01\u5305"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"ipvs.ko")," \u672c\u8eab\u5305\u542b\u4e86\u773e\u591a\u7684 ",(0,a.kt)("strong",{parentName:"li"},"function")," \u4f86\u89e3\u6c7a ",(0,a.kt)("strong",{parentName:"li"},"\u600e\u9ebc\u8655\u7406\u5c01\u5305"),"\uff0c\u9019\u90e8\u5206\u5305\u542b\u67e5\u627e\u5c0d\u61c9\u7684\u8cc7\u6599\u7d50\u69cb\uff0c\u547c\u53eb\u5c0d\u61c9\u7684 ",(0,a.kt)("strong",{parentName:"li"},"scheduling algorithm")," \u9078\u64c7\u5f8c\u7aef\u4f3a\u670d\u5668\u4ee5\u53ca\u5c01\u5305\u8f49\u767c"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"netfilter")," \u7684\u67b6\u69cb\u5247\u63d0\u4f9b\u4e86 ",(0,a.kt)("strong",{parentName:"li"},"\u4ec0\u9ebc\u6642\u9593\u8655\u7406\u5c01\u5305"),"\uff0c\u9019\u90e8\u5206\u8207\u5e38\u898b\u7684 ",(0,a.kt)("strong",{parentName:"li"},"IPTABLES")," \u6642\u9593\u9ede\u4e00\u6a23\uff0c\u8b6c\u5982 ",(0,a.kt)("strong",{parentName:"li"},"PREROUTING"),", ",(0,a.kt)("strong",{parentName:"li"},"POSTROUTING"),", ",(0,a.kt)("strong",{parentName:"li"},"INPUT"),", ",(0,a.kt)("strong",{parentName:"li"},"OUTPUT")," \u7b49")))),(0,a.kt)("p",null,"\u5be6\u969b\u4e0a\uff0c(3)\u8655\u7406\u5c01\u5305\u6838\u5fc3\u908f\u8f2f\u7684\u5be6\u4f5c\u5247\u662f\u5c07\u5169\u500b\u6982\u5ff5\u7d50\u5408\uff0c ",(0,a.kt)("strong",{parentName:"p"},"ipvs.ko")," \u5c07\u8655\u7406\u5c01\u5305\u7684 function \u900f\u904e Linux Kernel \u7684\u4ecb\u9762\u53bb\u8ddf netfilter \u8a3b\u518a\uff0c\u8981\u6c42\u7576\u5c01\u5305\u7d93\u904e\u7279\u5b9a\u7684 ",(0,a.kt)("strong",{parentName:"p"},"HOOK")," \u9ede\u7684\u6642\u5019\uff0c\u547c\u53eb\u76f8\u95dc\u7684 function \u4f86\u8655\u7406\u5c01\u5305"),(0,a.kt)("p",null,"\u4e0b\u5716\u662f\u4e00\u500b\u57fa\u672c\u7684 ",(0,a.kt)("strong",{parentName:"p"},"IPTABLES/Netfilter")," \u6d41\u7a0b\u5716\uff0c\u57fa\u672c\u4e0a\u5c31\u662f",(0,a.kt)("strong",{parentName:"p"},"\u4e94\u500b"),"\u6642\u9593\u9ede\uff0c\u6bcf\u500b\u6642\u9593\u9ede\u5167\u90fd\u6703\u6709\u4e0d\u540c\u5c0d\u61c9\u7684 ",(0,a.kt)("strong",{parentName:"p"},"TABLE"),"\uff0c\u800c\u9019\u4e9b ",(0,a.kt)("strong",{parentName:"p"},"TABLE")," \u5167\u4e5f\u6709\u76f8\u5c0d\u61c9\u7684 ",(0,a.kt)("strong",{parentName:"p"},"Rules"),"\n\u5be6\u969b\u4e0a\u7684\u904b\u4f5c\u6d41\u7a0b\u5c31\u662f\u5c01\u5305\u5230\u9054\u9019\u4e9b\u6642\u9593\u9ede\u5f8c\uff0c\u6703\u4f9d\u5e8f\u8df3\u5230\u500b ",(0,a.kt)("strong",{parentName:"p"},"TABLE")," \u88e1\u9762\uff0c\u4e26\u4e14\u4f9d\u5e8f\u57f7\u884c ",(0,a.kt)("strong",{parentName:"p"},"RULES"),"\u3002\n",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/GymG1h1.png",alt:null})),(0,a.kt)("p",null,"\u4e0b\u5716\u5247\u662f\u5c07 ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u8207 ",(0,a.kt)("strong",{parentName:"p"},"IPTABLES/Netfilter")," \u7d50\u5408\u5f8c\u7684\u5716\u7247\uff0c\u5dee\u7570\u6027\u5c31\u662f",(0,a.kt)("strong",{parentName:"p"},"\u4e94\u500b"),"\u6642\u9593\u9ede\u5167\u4e2d\u6709\u4e09\u500b\u6642\u9593\u9ede\u8b8a\u52d5\uff0c\u5206\u5225\u662f ",(0,a.kt)("strong",{parentName:"p"},"INPUT/OUTPUT/FORWARD"),".\n",(0,a.kt)("strong",{parentName:"p"},"ipvs.ko")," \u91dd\u5c0d\u9019\u4e09\u500b\u6642\u9593\u9ede\u5206\u5225\u53bb\u8a3b\u518a\u4e09\u500b\u4e0d\u540c\u7684 ",(0,a.kt)("strong",{parentName:"p"},"Function"),"\uff0c\u800c\u9019\u4e9b ",(0,a.kt)("strong",{parentName:"p"},"Function")," \u7684\u57f7\u884c\u9ede\u90fd\u4e0d\u540c\u3002\n",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/M9aIyuT.png",alt:null})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"INPUT:\n\u8a3b\u518a\u7684 function \u6703\u5728 ",(0,a.kt)("strong",{parentName:"li"},"Filter TABLE")," \u5f8c\u57f7\u884c\uff0c\u800c function \u5b8c\u7562\u5f8c\u5247\u6703\u8df3\u53bb\u57f7\u884c ",(0,a.kt)("strong",{parentName:"li"},"NAT TABLE"),"."),(0,a.kt)("li",{parentName:"ol"},"OUTPUT:\n\u8a3b\u518a\u7684 function \u6703\u5728 ",(0,a.kt)("strong",{parentName:"li"},"nat TABLE")," \u5f8c\u57f7\u884c\uff0c\u800c function \u5b8c\u7562\u5f8c\u5247\u6703\u8df3\u53bb\u57f7\u884c ",(0,a.kt)("strong",{parentName:"li"},"filter TABLE"),"."),(0,a.kt)("li",{parentName:"ol"},"FORWARD:\n\u8a3b\u518a\u7684 function \u6703\u5728 ",(0,a.kt)("strong",{parentName:"li"},"Filter TABLE")," \u5f8c\u57f7\u884c\uff0c\u800c function \u5b8c\u7562\u5f8c\u5247\u6703\u7d50\u675f\u6574\u500b ",(0,a.kt)("strong",{parentName:"li"},"Forward")," \u6642\u9593\u9ede\u7684\u8655\u7406\uff0c\u8b93 Netfilter \u7e7c\u7e8c\u5f80\u4e0b\u8655\u7406")),(0,a.kt)("p",null,"\u9019\u908a\u91dd\u5c0d\u6574\u500b\u67b6\u69cb\u505a\u4e00\u500b\u7e3d\u7d50"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"UserSpace \u7684\u5de5\u5177\u6703\u900f\u904e\u4e8b\u5148\u5b9a\u7fa9\u597d\u7684\u4ecb\u9762\u8207 Kernel \u6e9d\u901a\uff0c\u800c\u5b9a\u7fa9\u8a72\u4ecb\u9762\u7684\u5247\u662f ",(0,a.kt)("strong",{parentName:"li"},"ip_vs.ko")," \u9019\u500b Kernel Module"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"ip_vs.ko")," \u505a\u975e\u5e38\u591a\u4e8b\u60c5\uff0c\u5305\u542b\u4e86\na. \u5b9a\u7fa9\u5c01\u5305\u8655\u7406\u7684 function\uff0c\u4e26\u4e14\u900f\u904e netfilter \u6846\u67b6\u8a3b\u518a\u9019\u4e9b function. \u672a\u4f86\u5c01\u5305\u5728 kernel \u5167\u904a\u8d70\u7684\u6642\u5019\u5c31\u6703\u88ab\u9019\u4e9b function \u8655\u7406\nb. \u6839\u64da\u53c3\u6578\u8a2d\u7acb\u76f8\u95dc\u7684\u8cc7\u6599\u7d50\u69cb\uff0c\u5305\u542b\u6709\u54ea\u4e9b backend server, \u63a1\u7528\u54ea\u5957 scheduling \u6f14\u7b97\u6cd5\nc. \u6839\u64da\u9700\u6c42\u52d5\u614b\u8f09\u5165\u5c0d\u61c9 scheduling \u7684 kernel module.")),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u6211\u5011\u5c31\u6703\u5f9e\u539f\u59cb\u78bc\u7684\u90e8\u5206\u7a0d\u5fae\u770b\u4e00\u4e0b ",(0,a.kt)("strong",{parentName:"p"},"ip_vs.ko")," \u9019\u4e9b\u4e8b\u60c5\u5be6\u969b\u4e0a\u662f\u600e\u9ebc\u5be6\u4f5c\u7684"),(0,a.kt)("h1",{id:"source-code"},"Source Code"),(0,a.kt)("p",null,"\u539f\u59cb\u78bc\u7684\u90e8\u5206\uff0c\u57fa\u65bc Linux Kernel 4.15 \u70ba\u57fa\u6e96\u53bb\u95b1\u8b80, \u53ef\u4ee5\u5f9e ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/torvalds/linux/tree/v4.15/net/netfilter/ipvs"},"Github"))," \u6216\u662f ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://elixir.bootlin.com/linux/v4.15/source"},"LXR"))," \u4f86\u9032\u884c\u7dda\u4e0a\u95b1\u8b80"),(0,a.kt)("h2",{id:"\u8f09\u5165-scheduling-kernel-module"},"\u8f09\u5165 Scheduling Kernel Module"),(0,a.kt)("p",null,"\u9019\u90e8\u5206\u7684\u7a0b\u5f0f\u78bc\u90fd\u5728 ",(0,a.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15/source/net/netfilter/ipvs/ip_vs_sched.c"},"ip_vs_sched.c")," \u88e1\u9762\uff0c\u91cd\u8981\u7684\u6709\u5e7e\u500b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u63d0\u4f9b\u4ecb\u9762\u6839\u64da\u5b57\u4e32\u53bb\u627e\u51fa\u5c0d\u61c9\u7684 Scheduler, \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5c31\u5617\u8a66\u5e6b\u5fd9\u8f09\u5165"),(0,a.kt)("li",{parentName:"ol"},"\u63d0\u4f9b\u4ecb\u9762\u7d66\u547c\u53eb\u8005\u53bb\u8a3b\u518a\uff0c\u95e1\u660e\u81ea\u5df1\u662f\u500b Scheduler")),(0,a.kt)("p",null,"1)\u7684\u90e8\u5206\u4e3b\u8981\u662f\u4e0b\u5217\u7684\u7a0b\u5f0f\u78bc\uff0c\u9996\u5148\u5617\u8a66\u53d6\u5f97\uff0c\u5982\u679c\u53d6\u5f97\u5931\u6557\u5c31\u53bb\u5e6b\u5fd9\u8f09\u5165\uff0c\u4e26\u4e14\u518d\u6b21\u8b80\u53d6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},'/*\n *  Lookup scheduler and try to load it if it doesn\'t exist\n */\nstruct ip_vs_scheduler *ip_vs_scheduler_get(const char *sched_name)\n{\n    struct ip_vs_scheduler *sched;\n\n    /*\n     *  Search for the scheduler by sched_name\n     */\n    sched = ip_vs_sched_getbyname(sched_name);\n\n    /*\n     *  If scheduler not found, load the module and search again\n     */\n    if (sched == NULL) {\n        request_module("ip_vs_%s", sched_name);\n        sched = ip_vs_sched_getbyname(sched_name);\n    }\n\n    return sched;\n}\n')),(0,a.kt)("p",null,"2)\u7684\u90e8\u5206\u5982\u4e0b\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u4e00\u4e9b\u8cc7\u6599\u7d50\u69cb\u7684\u8655\u7406\uff0c\u547c\u53eb\u8005\u5247\u6703\u662f\u90a3\u4e9b\u4e0d\u540c\u7b97\u6cd5\u7684 Scheduler"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},'int register_ip_vs_scheduler(struct ip_vs_scheduler *scheduler)\n{\n    struct ip_vs_scheduler *sched;\n\n    if (!scheduler) {\n        pr_err("%s(): NULL arg\\n", __func__);\n        return -EINVAL;\n    }\n\n    if (!scheduler->name) {\n        pr_err("%s(): NULL scheduler_name\\n", __func__);\n        return -EINVAL;\n    }\n.....\n}\n')),(0,a.kt)("p",null,"\u57fa\u672c\u4e0a\u6240\u6709\u7684 IPVS Scheduling \u7684\u5be6\u4f5c\u90fd\u6703\u518d Kernel Module \u521d\u59cb\u5316\u7684\u904e\u7a0b\u53bb\u547c\u53eb ",(0,a.kt)("strong",{parentName:"p"},"register_ip_vs_scheduler"),"\uff0c\u8209\u4f8b\u4f86\u8aaa ",(0,a.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15/source/net/netfilter/ipvs/ip_vs_rr.c"},"ip_vs_rr.c")," \u9019\u500b kernel module \u88ab\u7cfb\u7d71\u8f09\u5165\u5f8c\uff0c\u7b2c\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u547c\u53eb ",(0,a.kt)("strong",{parentName:"p"},"register_ip_vs_scheduler"),"\uff0c\u5c07\u81ea\u5df1\u7684\u7269\u4ef6\u8a3b\u518a\u9032\u53bb\uff0c\u6240\u4ee5\u4e4b\u5f8c\u6709\u4efb\u4f55\u4eba\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"ipvsadm")," \u53bb\u8868\u793a\u6211\u8981\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"rr")," \u9019\u500b\u7b97\u6cd5\u7684\u6642\u5019\uff0c\u5e95\u4e0b\u7684 kernel module(ip_vs.ko) \u5c31\u6709\u8fa6\u6cd5\u627e\u5230\u5c0d\u61c9\u7684 scheduler \u4f86\u4f7f\u7528\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},'\nstatic int __init ip_vs_rr_init(void)\n{\n    return register_ip_vs_scheduler(&ip_vs_rr_scheduler);\n}\n\nstatic void __exit ip_vs_rr_cleanup(void)\n{\n    unregister_ip_vs_scheduler(&ip_vs_rr_scheduler);\n    synchronize_rcu();\n}\n\nmodule_init(ip_vs_rr_init);\nmodule_exit(ip_vs_rr_cleanup);\nMODULE_LICENSE("GPL");\n')),(0,a.kt)("h2",{id:"\u8a3b\u518a-netfilter-function"},"\u8a3b\u518a Netfilter Function"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"ip_vs")," \u9019\u500b Kernel Module \u672c\u8eab\u88ab\u8f09\u5165\u5f8c\uff0c\u4e5f\u6703\u6709\u76f8\u95dc\u7684\u521d\u59cb\u6b65\u9a5f\uff0c\u8a72\u6b65\u9a5f\u6703\u5176\u5be6\u662f\u547c\u53eb\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"__ip_vs_init")," \u9019\u500b\u51fd\u5f0f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"/*\n *  Initialize IP Virtual Server netns mem.\n */\nstatic int __net_init __ip_vs_init(struct net *net)\n{\n    struct netns_ipvs *ipvs;\n    int ret;\n\n    ipvs = net_generic(net, ip_vs_net_id);\n    if (ipvs == NULL)\n        return -ENOMEM;\n\n    /* Hold the beast until a service is registerd */\n    ipvs->enable = 0;\n    ipvs->net = net;\n    /* Counters used for creating unique names */\n    ipvs->gen = atomic_read(&ipvs_netns_cnt);\n    atomic_inc(&ipvs_netns_cnt);\n    net->ipvs = ipvs;\n\n    if (ip_vs_estimator_net_init(ipvs) < 0)\n        goto estimator_fail;\n\n    if (ip_vs_control_net_init(ipvs) < 0)\n        goto control_fail;\n\n    if (ip_vs_protocol_net_init(ipvs) < 0)\n        goto protocol_fail;\n\n    if (ip_vs_app_net_init(ipvs) < 0)\n        goto app_fail;\n\n    if (ip_vs_conn_net_init(ipvs) < 0)\n        goto conn_fail;\n\n    if (ip_vs_sync_net_init(ipvs) < 0)\n        goto sync_fail;\n\n    ret = nf_register_net_hooks(net, ip_vs_ops, ARRAY_SIZE(ip_vs_ops));\n    if (ret < 0)\n        goto hook_fail;\n\n    return 0;\n/*\n * Error handling\n */\n\nhook_fail:\n    ip_vs_sync_net_cleanup(ipvs);\nsync_fail:\n    ip_vs_conn_net_cleanup(ipvs);\nconn_fail:\n    ip_vs_app_net_cleanup(ipvs);\napp_fail:\n    ip_vs_protocol_net_cleanup(ipvs);\nprotocol_fail:\n    ip_vs_control_net_cleanup(ipvs);\ncontrol_fail:\n    ip_vs_estimator_net_cleanup(ipvs);\nestimator_fail:\n    net->ipvs = NULL;\n    return -ENOMEM;\n}\n")),(0,a.kt)("p",null,"\u9019\u908a\u6700\u91cd\u8981\u7684\u5c31\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"nf_register_net_hooks")," \u9019\u500b\u51fd\u5f0f\uff0c\u8a72\u51fd\u5f0f\u6703\u50b3\u5165 ",(0,a.kt)("strong",{parentName:"p"},"ip_vs_ops")," \u9019\u500b\u7269\u4ef6\uff0c\u800c\u9019\u500b\u51fd\u5f0f\u5c31\u662f\u8ddf ",(0,a.kt)("inlineCode",{parentName:"p"},"netfilter")," \u53bb\u8a3b\u518a\uff0c\u63a5\u4e0b\u4f86\u5be6\u969b\u770b\u4e00\u4e0b ",(0,a.kt)("strong",{parentName:"p"},"ip_vs_ops")," \u7269\u4ef6(\u5ffd\u7565 ipv6, \u56e0\u70ba\u8ddf ipv4 \u6982\u5ff5\u96f7\u540c)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"static const struct nf_hook_ops ip_vs_ops[] = {\n    /* After packet filtering, change source only for VS/NAT */\n    {\n        .hook       = ip_vs_reply4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_IN,\n        .priority   = NF_IP_PRI_NAT_SRC - 2,\n    },\n    /* After packet filtering, forward packet through VS/DR, VS/TUN,\n     * or VS/NAT(change destination), so that filtering rules can be\n     * applied to IPVS. */\n    {\n        .hook       = ip_vs_remote_request4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_IN,\n        .priority   = NF_IP_PRI_NAT_SRC - 1,\n    },\n    /* Before ip_vs_in, change source only for VS/NAT */\n    {\n        .hook       = ip_vs_local_reply4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_OUT,\n        .priority   = NF_IP_PRI_NAT_DST + 1,\n    },\n    /* After mangle, schedule and forward local requests */\n    {\n        .hook       = ip_vs_local_request4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_OUT,\n        .priority   = NF_IP_PRI_NAT_DST + 2,\n    },\n    /* After packet filtering (but before ip_vs_out_icmp), catch icmp\n     * destined for 0.0.0.0/0, which is for incoming IPVS connections */\n    {\n        .hook       = ip_vs_forward_icmp,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_FORWARD,\n        .priority   = 99,\n    },\n    /* After packet filtering, change source only for VS/NAT */\n    {\n        .hook       = ip_vs_reply4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_FORWARD,\n        .priority   = 100,\n    },\n...\n")),(0,a.kt)("p",null,"ip_vs_ops \u662f\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"nf_hook_ops")," \u7684\u9663\u5217\u7269\u4ef6\uff0c\u6bcf\u500b\u7269\u4ef6\u5167\u90fd\u6709\u56db\u500b\u6210\u54e1\u88ab\u4f7f\u7528\uff0c\u5206\u5225\u662f"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"hook"),(0,a.kt)("li",{parentName:"ol"},"pf"),(0,a.kt)("li",{parentName:"ol"},"hooknum"),(0,a.kt)("li",{parentName:"ol"},"priority")),(0,a.kt)("p",null,"\u9019\u56db\u500b\u7d44\u5408\u8d77\u4f86\u7684\u542b\u7fa9\u5c31\u662f\uff0c\u6211\u6e96\u5099\u4e86\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"hook")," \u7684\u51fd\u5f0f\uff0c\u5e0c\u671b\u7576\u5c01\u5305\u7b26\u5408 ",(0,a.kt)("strong",{parentName:"p"},"pf")," \u63cf\u8ff0\u7684\u683c\u5f0f\uff0c\u4e14\u5c01\u5305\u76ee\u524d\u904b\u884c\u5230 ",(0,a.kt)("strong",{parentName:"p"},"hooknum")," \u9019\u500b\u6642\u9593\u9ede\u7684\u6642\u5019\uff0c\u6839\u64da\u6211\u63cf\u8ff0\u7684 ",(0,a.kt)("strong",{parentName:"p"},"proiroty")," \u65bc\u6b63\u78ba\u7684\u6642\u9593\u9ede\u547c\u53eb\u6211\u6e96\u5099\u7684 ",(0,a.kt)("strong",{parentName:"p"},"hook")," \u51fd\u5f0f\u3002"),(0,a.kt)("p",null,"\u6211\u5011\u53d6\u5176\u4e2d\u4e00\u500b\u7bc4\u4f8b\u4f86\u9032\u884c\u6bd4\u8f03\u8a73\u7d30\u7684\u89e3\u91cb"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"    {\n        .hook       = ip_vs_reply4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_IN,\n        .priority   = NF_IP_PRI_NAT_SRC - 2,\n    },\n")),(0,a.kt)("p",null,"\u9996\u5148\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"hook")," \u7684\u503c\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"ip_vs_reply4"),"\uff0c\u9019\u500b\u5176\u5be6\u662f\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"function"),"\uff0c\u5167\u5bb9\u5982\u4e0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"/*\n *  It is hooked at the NF_INET_FORWARD and NF_INET_LOCAL_IN chain,\n *  used only for VS/NAT.\n *  Check if packet is reply for established ip_vs_conn.\n */\nstatic unsigned int\nip_vs_reply4(void *priv, struct sk_buff *skb,\n         const struct nf_hook_state *state)\n{\n    return ip_vs_out(net_ipvs(state->net), state->hook, skb, AF_INET);\n}\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pf")," \u7684\u503c\u5247\u662f ",(0,a.kt)("strong",{parentName:"p"},"NFPROTO_IPV4"),"\uff0c\u5176\u4ed6\u76f8\u95dc\u7684\u8b8a\u6578\u5247\u5b9a\u7fa9\u65bc ",(0,a.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15/source/include/uapi/linux/netfilter.h#L67"},"netfilter.h")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"enum {\n    NFPROTO_UNSPEC =  0,\n    NFPROTO_INET   =  1,\n    NFPROTO_IPV4   =  2,\n    NFPROTO_ARP    =  3,\n    NFPROTO_NETDEV =  5,\n    NFPROTO_BRIDGE =  7,\n    NFPROTO_IPV6   = 10,\n    NFPROTO_DECNET = 12,\n    NFPROTO_NUMPROTO,\n};\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"hooknum")," \u5247\u662f\u6211\u5011\u4e00\u76f4\u5f37\u8abf\u7684\u6642\u9593\u9ede\uff0c\u5c0d\u61c9\u5230 ",(0,a.kt)("strong",{parentName:"p"},"netfilter/iptables")," \u7684\u67b6\u69cb\u5716\uff0c\u5c31\u662f ",(0,a.kt)("strong",{parentName:"p"},"LOCAL_IN"),"\uff0c\u5c01\u5305\u7d93\u7531 ",(0,a.kt)("strong",{parentName:"p"},"routing")," \u5f8c\u6c7a\u5b9a\u8981\u9001\u5230\u672c\u6a5f\u8655\u7406\u7684\u6642\u9593\u9ede\uff0c\u5176\u4ed6\u76f8\u95dc\u7684\u8b8a\u6578\u5247\u5b9a\u7fa9\u65bc\n",(0,a.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15/source/include/uapi/linux/netfilter.h#L67"},"netfilter.h")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"enum nf_inet_hooks {\n    NF_INET_PRE_ROUTING,\n    NF_INET_LOCAL_IN,\n    NF_INET_FORWARD,\n    NF_INET_LOCAL_OUT,\n    NF_INET_POST_ROUTING,\n    NF_INET_NUMHOOKS\n};\n")),(0,a.kt)("p",null,"\u53ef\u4ee5\u7531\u4e0a\u9762\u7684\u539f\u59cb\u78bc\u770b\u5230\u9019\u4e9b\u8b8a\u6578\u7684\u540d\u7a31\u90fd\u8207\u6211\u5011\u719f\u6089\u7684 ",(0,a.kt)("strong",{parentName:"p"},"IPTABLES")," \u7528\u6cd5\u719f\u6089\uff0c\u9019\u662f\u56e0\u70ba\u90fd\u57fa\u65bc ",(0,a.kt)("strong",{parentName:"p"},"Netfilter")," \u67b6\u69cb\u7684\u539f\u56e0"),(0,a.kt)("p",null,"\u6700\u5f8c\u7684 ",(0,a.kt)("strong",{parentName:"p"},"priority")," \u5247\u662f\u4e00\u500b\u512a\u5148\u5ea6\uff0c\u6578\u503c\u6108\u5c0f\u4ee3\u8868\u512a\u5148\u5ea6\u6108\u9ad8\uff0c\u4e5f\u5148\u57f7\u884c\uff0c\u5176\u4ed6\u76f8\u95dc\u7684\u8b8a\u6578\u5247\u5b9a\u7fa9\u65bc",(0,a.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15/source/include/uapi/linux/netfilter_ipv4.h#L68"},"netfilter_ipv4.h")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"enum nf_ip_hook_priorities {\n    NF_IP_PRI_FIRST = INT_MIN,\n    NF_IP_PRI_CONNTRACK_DEFRAG = -400,\n    NF_IP_PRI_RAW = -300,\n    NF_IP_PRI_SELINUX_FIRST = -225,\n    NF_IP_PRI_CONNTRACK = -200,\n    NF_IP_PRI_MANGLE = -150,\n    NF_IP_PRI_NAT_DST = -100,\n    NF_IP_PRI_FILTER = 0,\n    NF_IP_PRI_SECURITY = 50,\n    NF_IP_PRI_NAT_SRC = 100,\n    NF_IP_PRI_SELINUX_LAST = 225,\n    NF_IP_PRI_CONNTRACK_HELPER = 300,\n    NF_IP_PRI_CONNTRACK_CONFIRM = INT_MAX,\n    NF_IP_PRI_LAST = INT_MAX,\n};\n")),(0,a.kt)("p",null,"\u900f\u904e\u9019\u4e9b\u8cc7\u8a0a\uff0c\u6211\u5011\u53ef\u4ee5\u77ad\u89e3\u5230\u4e0a\u8ff0\u7684\u542b\u7fa9\u5c31\u662f\u8acb\u5e6b\u6211\u65bc ",(0,a.kt)("strong",{parentName:"p"},"LOCAL_IN")," \u9019\u500b\u6642\u9593\u9ede\u8a3b\u518a\u4e00\u500b function(ip_vs_reply4)\uff0c\u82e5\u5c01\u5305\u662f IPV4 \u7684\u683c\u5f0f\u4e14\u8acb\u6bd4 ",(0,a.kt)("strong",{parentName:"p"},"NAT_SRC(SOURCE NAT)")," \u9084\u8981\u63d0\u65e9\u8655\u7406\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"    {\n        .hook       = ip_vs_reply4,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_IN,\n        .priority   = NF_IP_PRI_NAT_SRC - 2,\n    },\n")),(0,a.kt)("p",null,"\u9019\u4e5f\u662f\u70ba\u4ec0\u9ebc\u6211\u5011\u67b6\u69cb\u5716\u6703\u65bc ",(0,a.kt)("strong",{parentName:"p"},"INPUT(LOCAL_IN)")," \u88e1\u9762\u5c07 ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u653e\u5230 ",(0,a.kt)("strong",{parentName:"p"},"NAT")," \u524d\u9762\u57f7\u884c\n",(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/M9aIyuT.png",alt:null})),(0,a.kt)("p",null,"\u5176\u4ed6\u7684 ",(0,a.kt)("strong",{parentName:"p"},"FORWARD"),", ",(0,a.kt)("strong",{parentName:"p"},"OUTPUT(LOCAL_OUT)")," \u7684\u6982\u5ff5\u662f\u5b8c\u5168\u4e00\u6a23\u7684"),(0,a.kt)("p",null,"\u9019\u908a\u9084\u6709\u4e00\u500b\u6709\u8da3\u7684\u6982\u5ff5\u5c31\u662f\uff0c\u5176\u5be6\u9019\u4e9b ",(0,a.kt)("strong",{parentName:"p"},"Talbe (NAT/FILTER/MANGLE)")," \u7684\u672c\u8cea\u90fd\u662f\u4e00\u500b\u51fd\u5f0f\uff0c\u8209\u4f8b\u4f86\u8aaa ",(0,a.kt)("a",{parentName:"p",href:"https://elixir.bootlin.com/linux/v4.15/source/net/ipv4/netfilter/iptable_nat.c#L34"},"iptable_net.c"),"  \u88e1\u9762\u5c31\u5b9a\u7fa9\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"NAT")," \u76f8\u95dc\u7684\u64cd\u4f5c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"static const struct nf_hook_ops nf_nat_ipv4_ops[] = {\n    /* Before packet filtering, change destination */\n    {\n        .hook       = iptable_nat_ipv4_in,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_PRE_ROUTING,\n        .priority   = NF_IP_PRI_NAT_DST,\n    },\n    /* After packet filtering, change source */\n    {\n        .hook       = iptable_nat_ipv4_out,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_POST_ROUTING,\n        .priority   = NF_IP_PRI_NAT_SRC,\n    },\n    /* Before packet filtering, change destination */\n    {\n        .hook       = iptable_nat_ipv4_local_fn,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_OUT,\n        .priority   = NF_IP_PRI_NAT_DST,\n    },\n    /* After packet filtering, change source */\n    {\n        .hook       = iptable_nat_ipv4_fn,\n        .pf     = NFPROTO_IPV4,\n        .hooknum    = NF_INET_LOCAL_IN,\n        .priority   = NF_IP_PRI_NAT_SRC,\n    },\n};\n")),(0,a.kt)("p",null,"\uff0c\u800c\u6240\u8b02\u7684 ",(0,a.kt)("strong",{parentName:"p"},"NAT Table")," \u7684\u6982\u5ff5\u5176\u5be6\u5c31\u88ab\u4e0a\u8ff0\u7684 ",(0,a.kt)("strong",{parentName:"p"},"hook")," \u7d66\u8655\u7406\u6389\uff0c\u5982\u4e0b\u5716\uff0c\u5176\u4e2d ",(0,a.kt)("strong",{parentName:"p"},"ipt_do_table")," \u4f5c\u70ba\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"function pointer")," \u88ab\u4e0a\u8ff0\u7684 ",(0,a.kt)("strong",{parentName:"p"},"hook")," \u88e1\u9762\u4f7f\u7528\uff0c\u800c\u9019\u500b\u51fd\u5f0f\u5167\u5247\u662f\u6703\u900f\u904e ",(0,a.kt)("inlineCode",{parentName:"p"},"do...while")," \u53bb\u4f9d\u5e8f\u57f7\u884c\u76f8\u95dc\u7684\u898f\u5247"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c="},"static unsigned int iptable_nat_do_chain(void *priv,\n                     struct sk_buff *skb,\n                     const struct nf_hook_state *state,\n                     struct nf_conn *ct)\n{\n    return ipt_do_table(skb, state, state->net->ipv4.nat_table);\n}\n\nstatic unsigned int iptable_nat_ipv4_fn(void *priv,\n                    struct sk_buff *skb,\n                    const struct nf_hook_state *state)\n{\n    return nf_nat_ipv4_fn(priv, skb, state, iptable_nat_do_chain);\n}\n\nstatic unsigned int iptable_nat_ipv4_in(void *priv,\n                    struct sk_buff *skb,\n                    const struct nf_hook_state *state)\n{\n    return nf_nat_ipv4_in(priv, skb, state, iptable_nat_do_chain);\n}\n\nstatic unsigned int iptable_nat_ipv4_out(void *priv,\n                     struct sk_buff *skb,\n                     const struct nf_hook_state *state)\n{\n    return nf_nat_ipv4_out(priv, skb, state, iptable_nat_do_chain);\n}\n\nstatic unsigned int iptable_nat_ipv4_local_fn(void *priv,\n                          struct sk_buff *skb,\n                          const struct nf_hook_state *state)\n{\n    return nf_nat_ipv4_local_fn(priv, skb, state, iptable_nat_do_chain);\n}\n")),(0,a.kt)("p",null,"\u5176\u4ed6\u7684 ",(0,a.kt)("strong",{parentName:"p"},"table")," \u6982\u5ff5\u4e00\u6a23\uff0c\u53ea\u662f\u4f7f\u7528\u7684\u4ecb\u9762\u4e0d\u592a\u4e00\u6a23\uff0c\u90fd\u6539\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"xt")," \u7cfb\u5217\u7684 API\u4f86\u8655\u7406"),(0,a.kt)("h1",{id:"iptables-\u6bd4\u8f03"},"IPTABLES \u6bd4\u8f03"),(0,a.kt)("p",null,"\u85c9\u7531\u4e0a\u8ff0\u539f\u59cb\u78bc\u7684\u89c0\u5bdf\uff0c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5230\u4e00\u500b\u5f88\u91cd\u8981\u7684\u4e8b\u60c5\u5c31\u662f ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u672c\u8eab\u7684\u904b\u4f5c\u662f\u4f9d\u8cf4 ",(0,a.kt)("strong",{parentName:"p"},"netfilter")," \u67b6\u69cb\u4f86\u8655\u7406\u5c01\u5305\uff0c\u800c\u5f88\u525b\u597d\u7684\u662f ",(0,a.kt)("strong",{parentName:"p"},"IPTABLES")," \u672c\u8eab\u4e5f\u662f\u5927\u91cf\u4f9d\u8cf4 ",(0,a.kt)("strong",{parentName:"p"},"netfilter")," \u4f86\u4f7f\u7528\uff0c\u9019\u908a\u7684\u6bd4\u8f03\u6211\u8a8d\u70ba\u6709\u5e7e\u500b\u91cd\u9ede"),(0,a.kt)("h2",{id:"ipvs-\u8207-iptables-\u7684\u53d6\u4ee3\u554f\u984c"},"IPVS \u8207 IPTABLES \u7684\u53d6\u4ee3\u554f\u984c"),(0,a.kt)("p",null,"\u6211\u8a8d\u70ba\u6c92\u6709\u8fa6\u6cd5\u5c07 IPVS \u8207 IPTABLES \u76f4\u63a5\u8a55\u6bd4\u512a\u52a3\uff0c\u505a\u51fa\u8ab0\u80fd\u5920\u53d6\u4ee3\u8ab0\u7684\u7d50\u8ad6\u3002\n\u539f\u56e0\u662f\u5169\u8005\u500b\u529f\u80fd\u9762\u5411\u5b8c\u5168\u4e0d\u540c\uff0c IPVS \u80fd\u5920\u63d0\u4f9b\u7684\u529f\u80fd\u5f88\u5c11\uff0c\u5c31\u662f\u5b8c\u5168\u91dd\u5c0d LoadBalancing \u5be6\u4f5c\u800c\u5df2\uff0c\u7136\u800c IPTABLES \u672c\u8eab\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u975e\u5e38\u591a\uff0c\u7279\u5225\u662f\u900f\u904e ",(0,a.kt)("inlineCode",{parentName:"p"},"-m"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"-j")," \u9019\u4e9b module\u64f4\u5145\u5f8c\u53ef\u4ee5\u8fa6\u5230\u7684\u4e8b\u60c5\u66f4\u591a\u4e86\u3002"),(0,a.kt)("p",null,"\u5927\u90e8\u5206\u7684\u8a55\u6bd4\u6587\u7ae0\u5176\u5be6\u90fd\u662f\u91dd\u5c0d\u65bc ",(0,a.kt)("strong",{parentName:"p"},"Load-Balancing")," \u9019\u4ef6\u4e8b\u60c5\u4f86\u6bd4\u8f03\uff0c\u5982\u679c\u771f\u7684\u5920\u719f\u6089\u5176\u5e95\u5c64\u67b6\u69cb\u5c31\u6703\u7406\u89e3\u5230\uff0c ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u662f\u5c08\u9580\u91dd\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"LB")," \u53bb\u5be6\u4f5c\u7684\uff0c\u7136\u800c ",(0,a.kt)("strong",{parentName:"p"},"IPTABLES")," \u4e26\u4e0d\u662f\uff0c\u800c\u662f\u63a1\u7528\u4e00\u4e9b\u6bd4\u8f03\u7375\u5947\u7684\u65b9\u5f0f\u4f86\u9054\u5230\u985e\u4f3c\u7684\u529f\u80fd\n\u56e0\u6b64\u6548\u80fd\u4e0a\u6703\u6709\u5dee\u7570\u4e5f\u4e0d\u8db3\u70ba\u5947\uff0c\u751a\u81f3\u8aaa\u82e5 IPVS \u6c92\u6709\u66f4\u597d\uff0c\u6839\u672c\u6c92\u6709\u767c\u5c55\u7684\u5fc5\u8981(\u6211\u8a8d\u70ba)\u3002"),(0,a.kt)("h2",{id:"ipvs-\u9664\u932f\u4e0d\u6613"},"IPVS \u9664\u932f\u4e0d\u6613"),(0,a.kt)("p",null,"\u7d9c\u89c0 IPVS \u7684\u4f7f\u7528\u6587\u4ef6\u8207\u67b6\u69cb\u8aaa\u660e\uff0c\u57fa\u672c\u4e0a\u90fd\u4e0d\u592a\u6703\u8b1b\u5230 IPVS \u8207 Netfilter \u7684\u95dc\u4fc2\uff0c\u4f46\u662f\u5176\u5be6\u5c0d\u65bc\u6bcf\u500b\u5c01\u5305\u4f86\u8aaa\uff0c\u5176\u5be6\u90fd\u662f\u57fa\u65bc ",(0,a.kt)("strong",{parentName:"p"},"netfilter")," \u7684\u67b6\u69cb\u5728\u8dd1\uff0c\u6703\u5148\u88ab ",(0,a.kt)("strong",{parentName:"p"},"iptables")," \u7684\u898f\u5247\u8655\u7406(mangle/filter)\uff0c\u63a5\u4e0b\u4f86\u624d\u88ab IPVS \u64f7\u53d6\u53bb\u8655\u7406\u3002\n\u9019\u7a2e\u60c5\u6cc1\u4e0b\uff0c\u7576\u767c\u73fe\u554f\u984c\u6642\uff0c\u5176\u5be6\u4e0d\u592a\u5bb9\u6613\u77e5\u9053\u554f\u984c\u9ede\u5728\u54ea\u88e1\uff0c\u5230\u5e95\u662f ",(0,a.kt)("strong",{parentName:"p"},"IPTABLES")," \u7684\u898f\u5247\u51fa\u932f\uff0c\u9084\u662f ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u672c\u8eab\u7684\u529f\u80fd\u6216\u662f\u8a2d\u5b9a\u51fa\u932f\u3002\n\u6b64\u5916\uff0c\u5c0d\u65bc IPVS \u4f7f\u7528\u8005\u4f86\u8aaa\u80fd\u5920\u89c0\u5bdf\u5230\u7684\u8cc7\u8a0a\u5927\u90e8\u5206\u90fd\u662f\u4f9d\u8cf4 ",(0,a.kt)("strong",{parentName:"p"},"ipvsadm")," \u9019\u500b\u5de5\u5177\uff0c\u986f\u793a\u7684\u5c31\u53ea\u6709 ",(0,a.kt)("strong",{parentName:"p"},"\u8a2d\u5b9a\u4e86\u54ea\u4e9b server"),", ",(0,a.kt)("strong",{parentName:"p"},"\u5206\u914d\u4e86\u591a\u5c11\u5c01\u5305")," \u7b49\u6bd4\u8f03\u4e0a\u5c64\u7684\u8cc7\u8a0a\uff0c\u5c0d\u65bc\u9664\u932f\u80fd\u5920\u63d0\u4f9b\u7684\u7dda\u7d22\u6709\u9650\uff0c\u6700\u7d42\u9084\u662f\u8981\u9023\u540c ",(0,a.kt)("strong",{parentName:"p"},"iptables")," \u4e00\u8d77\u89c0\u770b\u7814\u7a76\uff0c\u624d\u80fd\u5920\u9396\u5b9a\u554f\u984c\u7684\u767c\u751f\u9ede\u3002"),(0,a.kt)("h1",{id:"\u7d50\u8ad6"},"\u7d50\u8ad6"),(0,a.kt)("p",null,"\u62d6\u4e86\u5f88\u4e45\u7684\u7b2c\u56db\u7bc7 ",(0,a.kt)("strong",{parentName:"p"},"IPVS")," \u6587\u7ae0\u7d42\u65bc\u5beb\u5b8c\uff0c\u9019\u4e2d\u9593\u4e5f\u7d93\u6b77\u4e86\u4e00\u6b21\u7684\u7dda\u4e0a Meetup \u4f86\u6fc3\u7e2e\u56db\u7bc7\u6587\u7ae0\u7684\u4ecb\u7d39\uff0c\u8a72\u6b21 Meetup \u4e5f\u6709",(0,a.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=6ZaUIRZ-SO8&t=14s"},"\u7dda\u4e0a\u9304\u5f71"),", \u6709\u8208\u8da3\u7684\u4e5f\u53ef\u4ee5\u89c0\u770b"),(0,a.kt)("p",null,"\u85c9\u7531\u9019\u56db\u7bc7\u6587\u7ae0\u7684\u5b78\u7fd2\uff0c\u8b93\u6211\u5c0d\u65bc IPVS \u7684\u6982\u5ff5\u6709\u66f4\u6df1\u7684\u7406\u89e3\uff0c\u540c\u6642\u4e5f\u66f4\u80fd\u8aaa\u51fa IPVS \u8207 IPTABLES \u7684\u7570\u540c\u4e4b\u8655\uff0c\u5c0d\u65bc\u76f8\u95dc\u6587\u7ae0\u4e5f\u80fd\u5920\u6709\u66f4\u6df1\u7684\u80cc\u666f\u53bb\u63a2\u8a0e\u8207\u601d\u8003\u3002"))}c.isMDXComponent=!0}}]);