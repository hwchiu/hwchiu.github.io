"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[65570],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),i=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=i(e.components);return a.createElement(m.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=i(n),y=r,f=u["".concat(m,".").concat(y)]||u[y]||c[y]||l;return n?a.createElement(f,o(o({ref:t},s),{},{components:n})):a.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=y;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p[u]="string"==typeof e?e:r,o[1]=p;for(var i=2;i<l;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},95756:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var a=n(87462),r=(n(67294),n(3905));const l={slug:"python-ruamel",title:"ruamel.yaml \u5c0f\u7b46\u8a18",keywords:["python","yaml"],tags:["Python"],description:"\u672c\u7bc7\u6587\u7ae0\u8a18\u9304\u4e00\u4e0b\u4f7f\u7528 Python \u53bb\u64cd\u4f5c YAML \u9047\u5230\u7684\u5c0f\u554f\u984c\u8207\u89e3\u6cd5",date:new Date("2023-06-22T15:09:15.000Z")},o=void 0,p={unversionedId:"techPost/2023/python-yaml",id:"techPost/2023/python-yaml",title:"ruamel.yaml \u5c0f\u7b46\u8a18",description:"\u672c\u7bc7\u6587\u7ae0\u8a18\u9304\u4e00\u4e0b\u4f7f\u7528 Python \u53bb\u64cd\u4f5c YAML \u9047\u5230\u7684\u5c0f\u554f\u984c\u8207\u89e3\u6cd5",source:"@site/docs/techPost/2023/python-yaml.md",sourceDirName:"techPost/2023",slug:"/techPost/2023/python-ruamel",permalink:"/docs/techPost/2023/python-ruamel",draft:!1,tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",frontMatter:{slug:"python-ruamel",title:"ruamel.yaml \u5c0f\u7b46\u8a18",keywords:["python","yaml"],tags:["Python"],description:"\u672c\u7bc7\u6587\u7ae0\u8a18\u9304\u4e00\u4e0b\u4f7f\u7528 Python \u53bb\u64cd\u4f5c YAML \u9047\u5230\u7684\u5c0f\u554f\u984c\u8207\u89e3\u6cd5",date:"2023-06-22T15:09:15.000Z"},sidebar:"techPost",previous:{title:"\u7bc0\u9ede\u5d29\u58de\u6642\u5982\u4f55\u5feb\u901f\u8655\u7406 Pod",permalink:"/docs/techPost/2023/k8s-node-fault-recovery"},next:{title:"Spark SQL, ThriftServer, GCS in Kubernetes.",permalink:"/docs/techPost/2023/spark-gcs-k8s"}},m={},i=[],s={toc:i},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u4f7f\u7528 Python \u7ba1\u7406\u6700\u7c21\u6613\u7684\u65b9\u5f0f\u5c31\u662f\u900f\u904e pyyaml \u9019\u500b\u5957\u4ef6\u4f86\u8655\u7406\uff0c\u5176\u5b89\u88dd\u4e5f\u975e\u5e38\u7c21\u55ae"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash="},"pip3 install pyyaml\n")),(0,r.kt)("p",null,"\u5b89\u88dd\u5b8c\u7562\u5f8c\u5c31\u53ef\u4ee5\u900f\u904e\u4e0b\u5217\u4e00\u500b\u7c21\u55ae\u7684\u7bc4\u4f8b\u4f86\u8b80\u53d6\u6a94\u6848\u4e26\u4e14\u91cd\u65b0\u4fee\u6539\u56de\u53bb"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import yaml\n\nwith open('data1.yaml', 'r') as file:\n    data = yaml.safe_load(file)\n\nwith open('output_file.yaml', 'w') as file:\n    yaml.dump(data, file)\n")),(0,r.kt)("p",null,"\u5047\u8a2d\u4eca\u5929 ",(0,r.kt)("inlineCode",{parentName:"p"},"data1.yaml")," \u7684\u5167\u5bb9\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml="},'# resources\nresources:\n  requests:\n    cpu: "50m"\n    memory: "256Mi"\n  limits:\n    cpu: "2000m"\n    memory: "4096Mi"\n\n# config\nconfig:\n  enabled: false\n  internal:\n    - name: test\n      data:\n        port: 8080\n        size: 123\n      hosts:\n        - a.b.com\n        - c.b.com\n')),(0,r.kt)("p",null,"\u57f7\u884c\u4e0a\u8ff0\u7684\u7bc4\u4f8b\u5c31\u6703\u8b80\u53d6\u8a72\u6a94\u6848\u4e26\u4e14\u91cd\u65b0\u8f38\u51fa\u5230\u4e00\u500b\u540d\u70ba output_file.yaml \u7684\u6a94\u6848\uff0c\u9019\u6642\u5f8c\u53bb\u6aa2\u8996\u5176\u5167\u5bb9\u6703\u5f97\u5230\u4e0b\u5217\u7bc4\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml="},"config:\n  enabled: false\n  internal:\n  - data:\n      port: 8080\n      size: 123\n    hosts:\n    - a.b.com\n    - c.b.com\n    name: test\nresources:\n  limits:\n    cpu: 2000m\n    memory: 4096Mi\n  requests:\n    cpu: 50m\n    memory: 256Mi\n")),(0,r.kt)("p",null,"\u4ed4\u7d30\u89c0\u5bdf\u9019\u500b\u8f38\u51fa\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230\u5176\u8207\u6700\u539f\u59cb\u7684\u6a94\u6848\u6709\u8af8\u591a\u5dee\u7570"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u8a3b\u89e3\u4e0d\u898b\u4e86"),(0,r.kt)("li",{parentName:"ol"},"\u5167\u5bb9\u9806\u5e8f\u8abf\u52d5"),(0,r.kt)("li",{parentName:"ol"},"list \u5e95\u4e0b\u7684 indent \u4e0d\u4e00\u81f4\uff0c\u5169\u908a\u7684 config.internal.data \u9806\u5e8f\u4e0d\u540c"),(0,r.kt)("li",{parentName:"ol"},'\u5b57\u4e32\u7684 quota \u90fd\u88ab\u79fb\u9664\uff0c\u5982 "2000m"')),(0,r.kt)("p",null,"\u5982\u679c\u4eca\u5929\u7684\u9700\u6c42\u662f\u52d5\u614b\u7522\u751f\u5168\u65b0 YAML \u6a94\u6848\uff0c\u90a3\u4e0a\u8ff0\u9019\u4e9b\u554f\u984c\u5c31\u4e0d\u5fa9\u5b58\u5728\uff0c\u4f46\u662f\u7576\u4eca\u5929\u7684\u9700\u6c42\u662f\u4fee\u6539\u5df2\u7d93\u5b58\u5728\u7684 YAML \u540c\u6642\u53c8\u5e0c\u671b\u76e1\u91cf\u53ef\u80fd\u4fdd\u6301\u539f\u6a23\uff0c\u90a3\u539f\u751f\u7684 Pyyaml \u4e26\u6c92\u6709\u975e\u5e38\u597d\u7684\u89e3\u6cd5\u53bb\u8655\u7406\u9019\u4e9b\u554f\u984c\u3002"),(0,r.kt)("p",null,"\u8b6c\u5982\u8a3b\u89e3\u7684\u554f\u984c\u5df2\u7d93\u5b58\u5728\u5f88\u4e45\u76ee\u524d\u4e5f\u6c92\u6709\u6b63\u5f0f\u89e3\u6cd5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/yaml/pyyaml/issues/90"},"https://github.com/yaml/pyyaml/issues/90"))),(0,r.kt)("p",null,"\u56e0\u6b64\u5982\u679c\u6709\u4e0a\u8ff0\u9700\u6c42\u7684\u5beb\u6cd5\uff0c\u6703\u66f4\u63a8\u85a6\u6539\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://yaml.readthedocs.io/en/latest/"},"ruamel.yaml\n")," \u4f86\u9032\u884c\u8655\u7406"),(0,r.kt)("p",null,"\u5b89\u88dd\u90e8\u5206\u4e5f\u975e\u5e38\u7c21\u55ae\uff0c\u53ef\u4ee5\u900f\u904e pip3 \u5b89\u88dd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash="},"pip3 install ruamel.yaml\n")),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u500b\u5b8c\u5168\u975e\u5e38\u7c21\u6613\u7684\u8b80\u53d6\u4e26\u4e14\u8f38\u51fa\u7bc4\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python="},"\nfrom ruamel.yaml import YAML\n\nyaml = YAML()\nyaml.indent(mapping=2, sequence=4, offset=2)\nyaml.preserve_quotes = True\n\nwith open('data1.yaml', 'r') as file:\n    data = yaml.load(file)\n\nwith open('output_file2.yaml', 'w') as file:\n    yaml.dump(data, file)\n")),(0,r.kt)("p",null,"\u8a72\u7bc4\u4f8b\u4e2d\u6703\u5148\u521d\u59cb\u5316 YAML \u7684\u7269\u4ef6\uff0c\u4e26\u4e14\u8a2d\u5b9a\u5e7e\u500b\u5c6c\u6027"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4fdd\u7559\u5b57\u4e32\u4e2d\u7684 quotes"),(0,r.kt)("li",{parentName:"ol"},"\u8a2d\u5b9a indent \u76f8\u95dc\u53c3\u6578"),(0,r.kt)("li",{parentName:"ol"},"\u8a3b\u89e3\u9810\u8a2d\u6703\u88ab\u4fdd\u7559")),(0,r.kt)("p",null,"\u56e0\u6b64\u57f7\u884c\u4e0a\u8ff0\u7bc4\u4f8b\u5f97\u5230\u7684 output_file2.yaml \u5167\u5bb9\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml="},'# resources\nresources:\n  requests:\n    cpu: "50m"\n    memory: "256Mi"\n  limits:\n    cpu: "2000m"\n    memory: "4096Mi"\n\n# config\nconfig:\n  enabled: false\n  internal:\n    - name: test\n      data:\n        port: 8080\n        size: 123\n      hosts:\n        - a.b.com\n        - c.b.com\n')),(0,r.kt)("p",null,"\u53ef\u4ee5\u89c0\u5bdf\u5230\u6b64\u7bc4\u4f8b\u8207\u539f\u59cb\u5167\u5bb9\u5b8c\u5168\u4e00\u81f4\uff0c\u6c92\u6709\u4efb\u4f55\u5b57\u4e32\u6216\u662f\u4efb\u4f55\u6b04\u4f4d\u88ab\u81ea\u52d5\u8655\u7406\uff0c\u56e0\u6b64\u5982\u679c\u5c0d\u65bc\u4fee\u6539 YAML \u53c8\u540c\u6642\u4e0d\u5e0c\u671b\u6539\u52d5\u65e2\u6709\u6a94\u6848\u5167\u5bb9\u683c\u5f0f\u7684\u90fd\u63a8\u85a6\u6539\u7528 ruamel.yaml \u4f86\u8655\u7406"))}c.isMDXComponent=!0}}]);