"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[72434],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=p(n),k=l,d=s["".concat(c,".").concat(k)]||s[k]||m[k]||r;return n?a.createElement(d,i(i({ref:t},u),{},{components:n})):a.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=k;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[s]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},36833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const r={title:"mTCP \u8b80\u5f8c\u7b46\u8a18",date:"2016-08-31 14:39",comments:!0,tags:["Network","System","Paper"]},i=void 0,o={unversionedId:"techPost/2016/mtcp-reading-note",id:"techPost/2016/mtcp-reading-note",title:"mTCP \u8b80\u5f8c\u7b46\u8a18",description:"\u4e4b\u524d\u5728\u7db2\u8def\u4e0a\u770b\u5230\u4e86\u4e00\u7bc7 paper",source:"@site/docs/techPost/2016/mtcp-reading-note.md",sourceDirName:"techPost/2016",slug:"/techPost/2016/mtcp-reading-note",permalink:"/docs/techPost/2016/mtcp-reading-note",draft:!1,tags:[{label:"Network",permalink:"/docs/tags/network"},{label:"System",permalink:"/docs/tags/system"},{label:"Paper",permalink:"/docs/tags/paper"}],version:"current",frontMatter:{title:"mTCP \u8b80\u5f8c\u7b46\u8a18",date:"2016-08-31 14:39",comments:!0,tags:["Network","System","Paper"]},sidebar:"techPost",previous:{title:"Build Mozilla NSS on windows",permalink:"/docs/techPost/2016/build_mozilla_nss_on_windows"},next:{title:"NFQUEUE drop UDP packets",permalink:"/docs/techPost/2016/netfilter-nfqueue"}},c={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Current Limitation",id:"current-limitation",level:2},{value:"Current Solution",id:"current-solution",level:2},{value:"Why User-level TCP",id:"why-user-level-tcp",level:2},{value:"Design",id:"design",level:2},{value:"User-level Packet I/O Library",id:"user-level-packet-io-library",level:2},{value:"Introduction",id:"introduction-1",level:4},{value:"Implementation",id:"implementation",level:4},{value:"User-level TCP Stack",id:"user-level-tcp-stack",level:2},{value:"Introduction",id:"introduction-2",level:4},{value:"Implementation",id:"implementation-1",level:4},{value:"Basic TCP Processing",id:"basic-tcp-processing",level:5},{value:"Lock-free, Per-core Data Structures",id:"lock-free-per-core-data-structures",level:5},{value:"Batched Event Handling",id:"batched-event-handling",level:5},{value:"Optimizing for Short-lived Connections",id:"optimizing-for-short-lived-connections",level:5},{value:"Priority-based packet queueing",id:"priority-based-packet-queueing",level:5},{value:"Lightweight connection setup",id:"lightweight-connection-setup",level:5}],u={toc:p},s="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(s,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u4e4b\u524d\u5728\u7db2\u8def\u4e0a\u770b\u5230\u4e86\u4e00\u7bc7 paper\n",(0,l.kt)("a",{parentName:"p",href:"http://www.ndsl.kaist.edu/~kyoungsoo/papers/mtcp.pdf"},"mTCP: A Highly Scalable User-level TCP Stack for Multicore Systems"),"\n\u6a19\u984c\u89ba\u5f97\u9084\u6eff\u6709\u8da3\u7684\uff0c\u5c31\u82b1\u4e86\u4e9b\u6642\u9593\u5c07\u5176\u770b\u5b8c\uff0c\u4e26\u4e14\u7528\u9019\u7bc7\u6587\u7ae0\u7576\u4f5c\u7b46\u8a18"),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u7576\u524d\u7684 TCP connection \u4e2d\uff0c\u5927\u90e8\u5206\u7684\u5c01\u5305\u90fd\u662f\u5c0fsize\u7684\uff0c\u5982\u4f55\u5feb\u901f\u7684\u8655\u7406\u9019\u4e9b\u5c01\u5305\u662f\u500b\u63d0\u5347\u6548\u80fd\u7684\u91cd\u9ede"),(0,l.kt)("li",{parentName:"ul"},"\u6839\u64da\u9019\u7bc7",(0,l.kt)("a",{parentName:"li",href:"http://dl.acm.org/citation.cfm?id=2464442"},"\u8ad6\u6587"),"\uff0c\u5728\u7279\u5b9a\u7684\u7db2\u8def\u74b0\u5883\u4e0b(large cellular network)\uff0c\u8d85\u904e 90% \u7684 TCP \u5c01\u5305\u90fd\u5c0f\u65bc 32KB\uff0c\u8d85\u904e 50% \u7684\u5247\u662f\u5c0f\u65bc 4KB\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7576\u524d\u7684 Linux Kenrl \u7684\u67b6\u69cb\u4f7f\u5f97\u8655\u7406\u5c0f\u5c01\u5305\u7684\u901f\u5ea6\u6c92\u6709\u5f88\u597d\u7684\u8868\u73fe\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u76ee\u524d\u4e16\u754c\u4e0a\u6709\u5f88\u591a\u7a2e\u65b9\u6848\u5617\u8a66\u89e3\u6c7a\u6b64\u554f\u984c\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4fee\u6539 kernel \u7684\uff0c\u5982 MegaPipe, FlexSC"),(0,l.kt)("li",{parentName:"ul"},"\u5728 user-space \u63d0\u4f9b\u9ad8\u901f\u7684 Packet I/O\uff0c\u9019\u90e8\u5206\u901a\u5e38\u662f\u76f4\u63a5\u8ddf\u7db2\u5361\u64cd\u4f5c\uff0c\u8df3\u904e kernel\u3002\u5982 netmap, DPDK, PSIO\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u4e0a\u8ff0\u7684\u65b9\u6848\u90fd\u96e3\u4ee5\u61c9\u7528\u5230\u73fe\u6709\u7684\u7cfb\u7d71",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6539 kernel code \u5c0d\u65bc\u5df2\u7d93\u61c9\u7528\u7684\u4f3a\u670d\u5668\u4f86\u8aaa\uff0c\u4e0d\u662f\u90a3\u9ebc\u65b9\u4fbf"),(0,l.kt)("li",{parentName:"ul"},"user-space library \u7684\u7f3a\u9ede",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"\u6c92\u6709\u5be6\u4f5c TCP stack\uff0c\u6240\u4ee5\u4f7f\u7528\u8005\u90fd\u8981\u81ea\u5df1\u60f3\u8fa6\u6cd5\u53bb\u8655\u7406\u6574\u500bdata (\u6bcf\u500b Layer \u81ea\u884c\u8655\u7406\uff09"),(0,l.kt)("li",{parentName:"ol"},"\u6c92\u6709\u63d0\u4f9b\u7d71\u4e00\u7684\u4ecb\u9762\uff0c\u73fe\u5b58\u7684\u61c9\u7528\u7a0b\u5f0f\u5f88\u96e3 porting"))))),(0,l.kt)("li",{parentName:"ul"},"\u672c\u7bc7 paper \u63d0\u51fa\u7684\u4e00\u500b\u65b0\u7684\u67b6\u69cb mTCP\uff0c\u5b97\u65e8\u5c31\u662f\u89e3\u6c7a\u4e0a\u8ff0\u6240\u6709\u554f\u984c",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u4fee\u6539 kernel, \u5be6\u4f5c\u65bc user-space"),(0,l.kt)("li",{parentName:"ul"},"\u8b93\u73fe\u6709\u7684\u61c9\u7528\u7a0b\u5f0f\u53ef\u4ee5\u5bb9\u6613\u4f7f\u7528\uff0c\u5feb\u901f\u8f49\u63db",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"\u63d0\u4f9b\u826f\u597d\u7684 wrapper \u7d66\u7576\u524d\u7684 BSD-socket API\uff0c\u540c\u6642\u4e5f\u63d0\u4f9b event \u76f8\u95dc\u7684(epoll)"),(0,l.kt)("li",{parentName:"ol"},"\u5be6\u4f5c TCP stack"),(0,l.kt)("li",{parentName:"ol"},"\u67b6\u69cb\u4e0a\u8981\u89e3\u6c7a\u7576\u524d kernel \u7684\u67b6\u69cb\u554f\u63d0\uff0c\u63d0\u5347\u6574\u9ad4\u7684\u8655\u7406\u901f\u5ea6")))))),(0,l.kt)("h2",{id:"current-limitation"},"Current Limitation"),(0,l.kt)("p",null,"\u4f5c\u8005\u5728\u6587\u7ae0\u4e2d\u63d0\u53ca\u7576\u524d linux kernel \u7684\u56db\u500b\u554f\u984c\uff0c\u9019\u4e9b\u554f\u984c\u5c0e\u81f4\u7576\u524d\u7684 TCP stack \u6c92\u6709\u8fa6\u6cd5\u5f88\u6709\u6548\u7387\u7684\u8655\u7406\u5c01\u5305\u3002\n####Lack of connection locality\n\u6709\u4e0d\u5c11\u61c9\u7528\u7a0b\u5f0f\u6703\u4f7f\u7528 Multi-Thread\uff0c\u9019\u4e9b threads \u6703\u4e00\u8d77\u5171\u4eab\u4e00\u500b listen socket's accept queue. \u9019\u7a2e\u60c5\u6cc1\u4e0b\u9019\u4e9b thread \u5f7c\u6b64\u9593\u8981\u900f\u904e lock \u4f86\u6436\u596a\u8a72 socket \u7684\u4f7f\u7528\u6b0a\uff0c\u9019\u908a\u6703\u4f7f\u5f97thread\u7684\u6548\u7387\u4e0b\u964d\nKernel \u5c0d\u65bc connection locality\u7684\u4e0d support \u6703\u56e0\u70ba CPU \u7684cache miss\u7522\u751f\u984d\u5916\u7684\u8ca0\u64d4"),(0,l.kt)("p",null,"####Shared file descriptor space\n\u5c0d\u65bc POSIX-compliant \u7684 OS \u4f86\u8aaa\uff0c \u5c0d\u65bc\u6bcf\u500b process \u4f86\u8aaa\uff0c\u5176 fd \u662f\u5171\u4eab\u7684\uff0c\u8209\u4f8b\u4f86\u8aaa\u6bcf\u6b21\u5728\u5275\u5efa\u65b0\u7684 fd \u6642\uff0c\u90fd\u8981\u53bb\u5c0b\u627e\u7576\u524d\u6700\u5c0f\u53ef\u7528\u7684\u6578\u5b57\u4f86\u4f7f\u7528\u3002\n\u5c0d\u65bc\u4e00\u500b\u8655\u7406\u5927\u91cf\u9023\u7dda\u7684\u5fd9\u788c server \u4f86\u8aaa\uff0c\u6bcf\u500b thread \u5728\u5efa\u7acb socket \u7684\u6642\u5019\uff0c\u5c31\u6703\u56e0\u70ba lock \u9593\u7684\u722d\u596a\u800c\u7522\u751f\u4e00\u500b\u984d\u5916\u7684\u8ca0\u64d4\u3002\n\u5c0d socket \u4e5f\u4f7f\u7528 fd \u4f86\u9032\u884c\u64cd\u4f5c\uff0c\u4e5f\u6703\u5c0d linux kernel \u5167\u7684 VFS \u9020\u6210\u984d\u5916\u7684\u8ca0\u64d4\u3002\uff08\u9019\u908a\u6211\u770b\u4e0d\u592a\u61c2\uff09"),(0,l.kt)("p",null,"####Inefficient per-packet processing\n\u5148\u524d\u7684\u7814\u7a76\u6307\u51fa\uff0c\u9f90\u5927\u7684\u5c01\u5305\u7d50\u69cb(sk_buff),\u6bcf\u500b\u5c01\u5305\u7684\u8a18\u61b6\u9ad4\u8655\u7406\u4ee5\u53ca\uff24\uff2d\uff21\u9019\u4e9b\u884c\u70ba\u662f\u5c0f\u5c01\u5305\u8655\u7406\u6548\u7387\u4e0d\u4f73\u7684\u4e3b\u56e0\u3002"),(0,l.kt)("p",null,"####System call overhead\n\u5c0d\u65bc\u77ed\u9031\u671f\u7684\u9023\u7dda\u4f86\u8aaa\uff0cBSD socket API \u9700\u8981\u983b\u7e41\u5730\u5728 user/kernel space\u505a\u5207\u63db\uff0c\u6839\u64da FlexSC \u548c VOS\u7684\u7814\u7a76\u6307\u51fa\uff0c\u5927\u91cf\u7684system call\u6703\u5c0d cpu\u7684\u8655\u7406\u72c0\u614b\u9020\u6210\u6df7\u4e82(top-level caches, branch prediction table, etc)\uff0c\u56e0\u6b64\u6548\u80fd\u6703\u4e0b\u964d\u3002"),(0,l.kt)("h2",{id:"current-solution"},"Current Solution"),(0,l.kt)("p",null,"####Lack of connection locality"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Affinity-Accept"),(0,l.kt)("li",{parentName:"ul"},"MegaPipe"),(0,l.kt)("li",{parentName:"ul"},"Linux kernel's socket option SO_REUSEPORT (after 3.9.4)")),(0,l.kt)("p",null,"####Shared file descriptor space"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"MegaPipe")),(0,l.kt)("p",null,"####Inefficient per-packet processing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"User level packet I/O libray",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Intel DPDK"),(0,l.kt)("li",{parentName:"ul"},"Libzero for DNA"),(0,l.kt)("li",{parentName:"ul"},"netmap")))),(0,l.kt)("p",null,"####System call overhead"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"FlexSC"),(0,l.kt)("li",{parentName:"ul"},"VOS")),(0,l.kt)("h2",{id:"why-user-level-tcp"},"Why User-level TCP"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u53ef\u64fa\u812b\u548c kernel \u7684\u7cfe\u7e8f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7576\u524d kernel \u4e2d\u7684\u67b6\u69cb\uff0c\u56e0\u70ba fd \u7684\u5171\u7528\uff0cTCP stack \u5f88\u96e3\u5f9e kernel \u4e2d\u7368\u7acb\u62bd\u51fa\u4f86\u3002"))),(0,l.kt)("li",{parentName:"ol"},"\u53ef\u76f4\u63a5\u5957\u7528\u7576\u524d\u4e00\u4e9b\u9ad8\u6548\u7387\u7684 packet I/O library\uff0c\u5982 netmap, DPDK,etc."),(0,l.kt)("li",{parentName:"ol"},"\u5728\u4e0d\u4fee\u6539 kernel \u7684\u60c5\u6cc1\u4e0b\uff0c\u53ef\u4ee5\u6279\u6b21\u7684\u8655\u7406\u5c01\u5305\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u80fd\u5920\u8f15\u6613\u7684\u652f\u63f4\u73fe\u5b58\u7684 application\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"mTCP \u63d0\u4f9b\u4e86\u985e\u4f3c BSD-like \u7684 socket API.")))),(0,l.kt)("h2",{id:"design"},"Design"),(0,l.kt)("p",null,"####Introduction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"mTCP \u5e0c\u671b\u5728\u5411\u4e0b\u652f\u63f4\u7576\u524d\u7684 multi-threaded, event-driven \u61c9\u7528\u7a0b\u5f0f\u7684\u524d\u63d0\u4e0b\uff0c\u63d0\u4f9b\u5728\u591a\u6838\u5fc3\u7cfb\u7d71\u4e0b\u6709\u9ad8\u64f4\u5c55\u6027\u7684\u7cfb\u7d71"),(0,l.kt)("li",{parentName:"ul"},"mTCP \u5fc5\u9808\u8981\u63d0\u4f9b BSD-like \u7684 socket API \u4ee5\u53ca event-driven API\uff0c\u80fd\u5920\u8b93\u73fe\u5b58\u7684\u61c9\u7528\u7a0b\u5f0f\u7c21\u55ae\u7684\u8f49\u63db\u904e\u53bb"),(0,l.kt)("li",{parentName:"ul"},"mTCP \u7531\u5169\u5927\u7269\u4ef6\u7d44\u6210\uff0c\u5206\u5225\u662f ",(0,l.kt)("strong",{parentName:"li"},"User-level TCP stack")," \u4ee5\u53ca ",(0,l.kt)("strong",{parentName:"li"},"Packet I/O library"),".")),(0,l.kt)("p",null,"####Implementation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5c0d\u65bc\u6bcf\u4e00\u500b\u61c9\u7528\u7a0b\u5f0f\u4f86\u8aaa\uff0cmTCP\u65bc\u6bcf\u500b CPU Core \u4e0a\u904b\u884c\u4e00\u500b thread.",(0,l.kt)("blockquote",{class:"imgur-embed-pub",lang:"en","data-id":"a/2fQFi"},(0,l.kt)("a",{href:"//imgur.com/2fQFi"})),(0,l.kt)("script",{async:!0,src:"//s.imgur.com/min/embed.js",charset:"utf-8"})),(0,l.kt)("li",{parentName:"ul"},"mTCP \u6703\u900f\u904e\u5176 ",(0,l.kt)("strong",{parentName:"li"},"Packet I/O library"),"\u76f4\u63a5\u5c0d NIC \u8655\u7406\u5c01\u5305\u7684\u6536\u9001",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7531\u65bc mTCP \u9019\u90e8\u5206\u662f\u4f9d\u8cf4\u73fe\u5b58\u7684\u89e3\u6c7a\u65b9\u6848\uff0c\u800c\u7576\u524d\u6240\u6709\u7684 ",(0,l.kt)("strong",{parentName:"li"},"Packet I/O library")," \u90fd\u6709\u4e00\u500b\u9650\u5236\uff0c\u5c31\u662f\u6bcf\u500b NIC \u4e0a\u9762\u53ea\u80fd\u904b\u884c\u4e00\u500b application\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9019\u9650\u5236\u4f5c\u8005\u76f8\u4fe1\u672a\u4f86\u6703\u88ab\u89e3\u6c7a\u7684\u3002")))),(0,l.kt)("h2",{id:"user-level-packet-io-library"},"User-level Packet I/O Library"),(0,l.kt)("h4",{id:"introduction-1"},"Introduction"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"    \u7576\u524d\u6709\u5f88\u591a\u9ad8\u901f\u7684 (100M packets/seconds) packet I/O system \u90fd\u4e0d\u9069\u5408\u4f86\u5be6\u4f5c Transport-layer stack (such TCP),\u56e0\u70ba\u9019\u4e9b system \u7684\u5e95\u5c64\u90fd\u662f\u63a1\u7528 polliing \u7684\u65b9\u3115\u53d6\u8655\u7406\u5c01\u5305\uff0c\u63a1\u7528 pollung \u7684\u65b9\u5f0f\u6703\u6d6a\u8cbb cpu cycle\u3002\n    \u6b64\u5916\uff0cmTCP \u5e0c\u671b\u80fd\u5920\u63d0\u4f9b\u5728\u591a\u7db2\u5361\u72c0\u6cc1\u4e0b\uff0c\u80fd\u5920\u9ad8\u6548\u7387\u8655\u7406 TX/RX queues \u7684\u591a\u5de5\u80fd\u529b\u3002\u8209\u4f8b\u4f86\u8aaa\uff0c\u5047\u5982\u7cfb\u7d71\u7576\u524d\u6b63\u5728\u7b49\u5f85 control packet \u7684\u5230\u4f86\uff0c\u82e5\u6b64\u6642\u56e0\u70ba\u8981\u53bb polling RX \u5c01\u5305\uff0c\u5c31\u6703\u5c0e\u81f4 TX \u6c92\u6709\u8fa6\u6cd5\u9806\u5229\u7684\u5c07\u5c01\u5305\u9001\u51fa\uff0c\u82e5 TX \u60f3\u8981\u9001\u51fa\u7684\u662f\u5982 ACK/SYN \u4e4b\u985e\u7684\u5c01\u5305\uff0c\u53ef\u80fd\u5c31\u6703\u89f8\u767c TCP \u7684\u91cd\u50b3\u6a5f\u5236\u5c0e\u81f4\u6574\u9ad4\u901f\u5ea6\u4e0b\u964d\u3002\n\n\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c mTCP \u9019\u908a\u63a1\u7528\u4e86 PacketShader I/O engine (PSIO) \u4f86\u63d0\u4f9b\u9ad8\u6548\u7387\u7684 event-driven packet I/O interface.\n    PSIO \u4f7f\u7528 RSS \u9019\u500b\u6280\u8853\u4f86\u9054\u5230 flow-level \u7684\u5c01\u5305\u5206\u914d\u6280\u8853\uff0c\u8b93\u6bcf\u689d connection \u7684\u5c01\u5305\u90fd\u80fd\u5920\u7dad\u6301\u5728\u540c\u4e00\u500b RX queue\u4e2d\u3002\u85c9\u6b64\u964d\u4f4e\u4e0d\u540c CPU\u7af6\u722d\u5c01\u5305\u7684\u8ca0\u64d4\u3002\n")),(0,l.kt)("h4",{id:"implementation"},"Implementation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u4e86\u8207 ",(0,l.kt)("strong",{parentName:"li"},"select")," \u985e\u4f3c\u7684 ",(0,l.kt)("strong",{parentName:"li"},"ps_select"),"\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6b64 API \u6703\u53bb\u76e3\u807d\u6709\u8208\u8da3\u7db2\u5361\u7684TX/RX queue\u4e8b\u4ef6\uff0c\u8207 netmap \u63d0\u4f9b\u7684 selece/poll \u985e\u4f3c")))),(0,l.kt)("h2",{id:"user-level-tcp-stack"},"User-level TCP Stack"),(0,l.kt)("h4",{id:"introduction-2"},"Introduction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u70ba\u4e86\u6e1b\u5c11\u5927\u91cf ",(0,l.kt)("strong",{parentName:"li"},"system call")," \u5c0d\u65bc kernel \u9020\u6210\u7684\u8ca0\u64d4\uff0c\u5fc5\u9808\u8981\u5c07kernel\u5167\u95dc\u65bcTCP\u7684\u64cd\u4f5c\u90fd\u642c\u79fb\u5230 user-space\u4f86\u64cd\u4f5c"),(0,l.kt)("li",{parentName:"ul"},"\u5728 mTCP \u4e2d\uff0c\u63a1\u7528\u4e00\u500b\u540d\u70ba ",(0,l.kt)("strong",{parentName:"li"},"zero-thread TCP"),"\u4f86\u63d0\u4f9b\u6b64\u529f\u80fd\uff0c\u4e3b\u8981\u7684\u61c9\u7528\u7a0b\u5f0f\u53ef\u4ee5\u900f\u904e\u7c21\u55ae\u7684 function call\u800c\u4e0d\u662fsystem call\u4f86\u9054\u5230\u4e00\u6a23\u7684\u529f\u80fd\uff0c\u540c\u6642\u6709\u66f4\u597d\u7684\u6548\u80fd\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0a\u8ff0\u8a2d\u8a08\u7684\u552f\u4e00\u9650\u5236\u5c31\u662f\u5167\u90e8 TCP \u8655\u7406\u7684\u6b63\u78ba\u6027\u6703\u4f9d\u8cf4\u65bc\u8a72 application \u662f\u5982\u4f55\u53bb\u547c\u53eb TCP \u76f8\u95dc\u7684 function( timely invocation)"),(0,l.kt)("li",{parentName:"ul"},"\u5728 mTCP \u4e2d\uff0c\u63a1\u7528\u4e0d\u540c\u7684 thread \u4f86\u8655\u7406\u4e0a\u8ff0\u7684\u554f\u984c\uff0c\u61c9\u7528\u7a0b\u5f0f\u7684 thread \u8ddf mTCP \u7684 thread \u4e2d\u9593\u662f\u900f\u904e\u4e00\u500b share buffer \u4f86\u4ea4\u63db\u8cc7\u6599\uff0c\u800c application \u53ea\u80fd\u4f7f\u7528 mTCP \u63d0\u4f9b\u7684 function \u4f86\u64cd\u4f5c share buffer\u3002\n\u85c9\u7531\u9019\u7a2e\u65b9\u5f0f\uff0c\u53ef\u4ee5\u78ba\u4fdd TCP \u7684 data\u5728\u5171\u7528\u4e0a\u662f\u5b89\u5168\u4e14\u6b63\u78ba\u7121\u8aa4\u7684.\n\u7576\u61c9\u7528\u7a0b\u5f0f\u60f3\u8981\u4fee\u6539 share buffer \u6642\uff0c\u6703\u767c\u9001\u4e00\u500b write request \u5230\u6240\u8b02\u7684 job queue\u5167\uff0c\u63a5\u8005 mTCP \u5167\u7684 thread\u7576\u6436\u5230 CPU \u5f8c\uff0c\u6703\u53bb\u628a job queue \u5167\u7684\u5de5\u4f5c\u53d6\u51fa\uff0c\u7136\u5f8c\u57f7\u884c\u5c0d\u61c9\u7684\u6307\u4ee4\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7136\u800c\uff0c\u4e0a\u8ff0\u7684\u8a2d\u8a08\u5176\u5be6\u6703\u56e0\u70ba\u5171\u7528\u7684\u8cc7\u6599\u8ddfmTCP\u8207application\u7684\u5207\u63db\u800c\u7522\u751f\u984d\u5916\u7684\u8ca0\u64d4\uff0c\u9019\u4e9b\u8ca0\u64d4\u53cd\u800c\u6bd4\u50b3\u7d71\u7684system call\u9084\u4f86\u5f97\u9f90\u5927"),(0,l.kt)("li",{parentName:"ul"},"\u63a5\u4e0b\u4f86\u7684\u7ae0\u7bc0\uff0c\u6703\u8b1b\u8ff0 mTCP \u6700\u5f8c\u5982\u4f55\u5be6\u4f5c\u4e26\u4e14\u514b\u670d\u4e0a\u8ff0\u7684\u554f\u984c")),(0,l.kt)("h4",{id:"implementation-1"},"Implementation"),(0,l.kt)("h5",{id:"basic-tcp-processing"},"Basic TCP Processing"),(0,l.kt)("blockquote",{class:"imgur-embed-pub",lang:"en","data-id":"AMYWvLB"},(0,l.kt)("a",{href:"//imgur.com/AMYWvLB"})),(0,l.kt)("script",{async:!0,src:"//s.imgur.com/min/embed.js",charset:"utf-8"}),"- mTCP Thtread \u5f9e\u7db2\u5361\u7684 RX queue \u8b80\u53d6\u6279\u6b21\u8cc7\u6599(batch)\u5f8c\uff0c\u76f4\u63a5\u50b3\u7d66\u5167\u90e8\u7684 TCP \u908f\u8f2f\u8655\u7406\u3002 - \u5c0d\u65bc\u6bcf\u4e00\u500b\u5c01\u5305\u4f86\u8aaa\uff0c\u9996\u5148\u6703\u5148\u641c\u5c0b(\u6216\u5275\u9020)\u5c0d\u61c9\u7684 TCP control block(TCB)\uff0c\u6b64 TCB \u6703\u5b58\u653e\u65bc flow hash table\u3002 \u4ee5\u4e0a\u5716\u70ba\u4f8b\uff0c\u7576 server \u6536\u5230\u4e00\u500b\u5c0d\u61c9\u65bc\u5176 SYN/ACK \u7684ACK\u6642\uff0c\u65b0\u7684 connection \u5c31\u6703\u88ab\u5efa\u7acb\uff0c\u6b64\u6642\u6703\u5c07\u5c0d\u61c9\u7684 TCB \u7d66\u653e\u5230 **accept queue**\uff0c\u540c\u6642\u6703\u5728\u7522\u751f\u4e00\u500b **read event** \u7d66\u5c0d\u61c9\u7684 **listen socket**\u3002 \u5728\u9023\u7dda\u5efa\u7acb\u5f8c\uff0c\u7576\u8cc7\u6599\u5c01\u5305\u5230\u9054 mTCP\u6642\uff0cmTCP \u6703\u5c07\u5c01\u5305\u7684\u5167\u5bb9\u7d66\u8907\u88fd\u4e00\u4efd\u5230 socket \u7684 **read buffer**\uff0c\u540c\u6642\u4e5f\u7522\u751f\u4e00\u4efd **read event** \u7d66\u5c0d\u61c9\u7684 socket\uff0c\u9019\u6a23 application \u90a3\u908a\u5c31\u53ef\u4ee5\u7528 **read** \u7684\u51fd\u5f0f\u8b80\u53d6\u5230\u5c01\u5305\u7684\u5167\u5bb9\u3002 - \u7576 mTCP \u8655\u7406\u597d\u6240\u6709\u63a5\u6536\u5230\u7684\u5c01\u5305\u5f8c\uff0c\u6703\u5c07\u6240\u6709\u5728 **queue **\u5167\u7684 **event **\u90fd\u63a8\u5230 application \u4e0a\u7684 **queue** \u53bb\uff0c\u540c\u6642\u900f\u904e **signal** \u7684\u65b9\u5f0f\u53eb\u8d77\u8a72 application \u4f86\u8655\u7406\u5c01\u5305\u3002 - \u5c0d\u65bc application \u4f86\u8aaa\uff0c\u63a5\u4e0b\u4f86\u5c01\u5305\u7684 write \u8655\u7406\u90fd\u4e0d\u6703\u7522\u751f content switch\uff0c\u800c\u662f\u6703\u900f\u904e mTCP \u7684\u67b6\u69cb\u5c07\u6240\u6709\u8981\u5f80\u5916\u9001\u7684\u5c01\u5305\u90fd\u5beb\u5165\u4e00\u500b send buffer \u540c\u6642\u4e5f\u5c07\u5c0d\u61c9\u7684 tcb \u653e\u5230 **write queue**\u5167\u3002\u63a5\u4e0b\u4f86 mTCP \u6703\u6536\u96c6\u6240\u6709\u8981\u5f80\u5916\u9001\u7684 tcb\uff0c\u7136\u5f8c\u7d71\u4e00\u653e\u5165\u4e00\u500b **send list**\u4e2d\uff0c\u6700\u5f8c\u6279\u6b21\u7684\u5c07\u9019\u4e9b\u5c01\u5305\u76f4\u63a5\u9001\u5230\u7db2\u5361\u7684 **TX queue** \u8655\u7406\u3002",(0,l.kt)("h5",{id:"lock-free-per-core-data-structures"},"Lock-free, Per-core Data Structures"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u70ba\u4e86\u6e1b\u5c11mTCP threads\u4e4b\u9593\u7684 CPU \u7af6\u722d\uff0c mTCP \u5c07\u6240\u6709\u8cc7\u6e90(flow pool, socket buffers,etc.)\u6bcf\u500b CPU core\u90fd\u653e\u7f6e\u4e00\u4efd\uff0c\u6b64\u5916\uff0c\u9084\u53ef\u4ee5\u900f\u904e ",(0,l.kt)("em",{parentName:"li"},"RSS"),"\u7684\u6280\u8853\u4f86\u9054\u5230 flow-level \u7684CPU affinity\u3002\n\u6b64\u5916\uff0cmTCP\u5728 ",(0,l.kt)("strong",{parentName:"li"},"application")," \u8207 ",(0,l.kt)("strong",{parentName:"li"},"mTCP "),"\u4e4b\u9593\u4f7f\u7528\u4e86 ",(0,l.kt)("strong",{parentName:"li"},"lock-free")," \u7684\u8cc7\u6599\u7d50\u69cb\uff0c\u540c\u6642\u4e5f\u63d0\u4f9b\u4e86\u4e00\u7a2e\u66f4\u6709\u6548\u7387\u7684\u65b9\u5f0f\u4f86\u7ba1\u7406 TCP timer\u76f8\u95dc\u7684\u64cd\u4f5c\u3002")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Thread mapping and flow-level core affinity"),"\nFlow-level core affinity \u7e3d\u5171\u5206\u6210\u5169\u500b\u968e\u6bb5\u57f7\u884c"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"packet I/O \u9019\u5c64\u8981\u78ba\u4fdd\u5728\u7576\u524d\u53ef\u7528\u4e14\u642d\u914d ",(0,l.kt)("em",{parentName:"li"},"RSS")," \u7684 ",(0,l.kt)("em",{parentName:"li"},"CPU")," \u4e0a\u53bb\u5206\u914d TCP connection\uff0c\u900f\u904e\u6b64\u6a5f\u5236\u53ef\u4ee5\u8655\u7406\u6bcf\u500b core \u4e0a\u9762\u7684 TCP \u898f\u6a21\u554f\u984c\u3002"),(0,l.kt)("li",{parentName:"ol"},"mTCP \u5c0d\u65bc\u6bcf\u500b ",(0,l.kt)("strong",{parentName:"li"},"application thread"),"\u90fd\u6703\u7522\u751f\u4e00\u500b thread\uff0c\u4e26\u4e14\u8b93\u9019\u5169\u500b thread \u90fd\u8655\u65bc\u540c\u4e00\u500b physical CPU core\u4e0a\uff0c\u9019\u6a23\u53ef\u4ee5\u78ba\u4fdd",(0,l.kt)("strong",{parentName:"li"},"packet"),"\u8207",(0,l.kt)("strong",{parentName:"li"},"flow"),"\u7684\u5728\u8655\u7406\u4e0a\u80fd\u5920\u4eab\u6709 core affinity\u3002")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Multi-core and cache-friendly data structures")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u4e0b\u5217\u5e38\u7528\u7684\u8cc7\u6599\u7d50\u69cb\u90fd\u6703\u5b58\u653e\u5728\u6bcf\u500b TCP Thread \u4e2d\u4fdd\u6709\u7368\u7acb\u4e00\u4efd",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Flow Hash Table")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Socket Id Manger"),(0,l.kt)("li",{parentName:"ul"},"Pool of TCB"),(0,l.kt)("li",{parentName:"ul"},"socket buffers.")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"\u85c9\u7531\u4e0a\u8ff0\u8cc7\u6599\u7684\u5b89\u6392\uff0c\u80fd\u5920\u5927\u5e45\u6e1b\u5c11\u8de8 threads/CPU cores \u4e4b\u9593\u7684\u8cc7\u6599\u5b58\u53d6\uff0c\u540c\u6642\u63d0\u4f9b\u826f\u597d\u7684\u5e73\u884c\u6027\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u5047\u5982\u4eca\u5929\u6709\u4e00\u500b\u8cc7\u6599\u5fc5\u9808\u8981\u8de8 Thread \u5b58\u53d6(\u8b6c\u5982 mTCP thread \u8ddf application thread)\uff0c\u9996\u5148\u6703\u5148\u5c07\u6240\u6709\u7684\u8cc7\u6599\u7d50\u69cb\u5c0d\u6bcf\u4e00\u500bCPU\u90fd\u653e\u4e00\u4efd\uff0c\u7136\u5f8c\u4f7f\u7528single-producer/single-consumer\u4f86\u9054\u5230lock-free data structure\u7684\u5b58\u53d6\n\u5f9e application \u5230 mTCP \u4f86\u770b\uff0c mTCP \u7dad\u8b77 ",(0,l.kt)("strong",{parentName:"li"},"write"),", ",(0,l.kt)("strong",{parentName:"li"},"connect")," ",(0,l.kt)("strong",{parentName:"li"},"close")," \u7684 queues\uff0c\u53cd\u904e\u4f86\u5247\u662f\u7dad\u8b77\u4e00\u500b",(0,l.kt)("strong",{parentName:"li"},"accept"),"\u7684 queue\u3002"),(0,l.kt)("li",{parentName:"ol"},"\u70ba\u4e86\u80fd\u5920\u66f4\u52a0\u5229\u7528 CPU cacue \u6a5f\u5236\uff0cmTCP\u4e5f\u6703\u8a18\u4f4f\u76ee\u524d\u6bd4\u8f03\u5e38\u7528\u7684\u8cc7\u6599\u7d50\u69cb\u5927\u5c0f\u4e26\u4f7f\u5176\u7b26\u5408CPU cache\u7684\u6a5f\u5236\uff0c\u7136\u5f8c\u8b93\u5176\u5927\u5c0f\u5c0d\u9f4a\u65bcCPU\u7684 cache line \u5927\u5c0f\n\u8209\u4f8b\u4f86\u8aaa\uff0cTCB\u6703\u88ab\u5206\u6210\u5169\u500b\u90e8\u5206\uff0c\u7b2c\u4e00\u500b\u90e8\u5206\u662f 64 bytes\uff0c\u5b58\u653e\u4e86\u6700\u5e38\u4f7f\u7528\u5230\u7684\u6b04\u4f4d\u4ee5\u53ca\u5169\u500b\u6307\u6a19\u6307\u5411\u5269\u4e0b\u6bd4\u8f03\u5c11\u7528\u5230\u7684\u90e8\u5206\uff0c\u5206\u5225\u662f128\u4ee5\u53ca192 bytes\n5.\u70ba\u4e86\u5c07\u8a18\u61b6\u9ad4\u8981\u6c42\u8207\u91cb\u653e\u9020\u6210\u7684\u8ca0\u64d4\u6700\u5c0f\u5316\uff0cmTCP\u6703\u5728\u6bcf\u500bcore\u90fd\u53bb\u8981\u6c42\u8a18\u61b6\u9ad4\u4f86\u5b58\u653e",(0,l.kt)("strong",{parentName:"li"},"TCB"),"\u8207",(0,l.kt)("strong",{parentName:"li"},"socket buffers"),"\uff0c\n\u6b64\u5916\uff0c\u7531\u65bc",(0,l.kt)("strong",{parentName:"li"},"TCB"),"\u5b58\u53d6\u6a21\u5f0f\u5f88\u96a8\u6a5f\uff0c\u70ba\u4e86\u964d\u4f4e",(0,l.kt)("strong",{parentName:"li"},"TCB"),"\u5728 ",(0,l.kt)("strong",{parentName:"li"},"TLM")," miss \u7684\u6a5f\u7387\uff0c\u65bc\u662f\u4f7f\u7528\u4e86\u5927\u91cf\u7684 page\uff0c\u4e26\u4e14\u5c07 tcb \u8207 hash table index \u76f8\u95dc\u7684\u8cc7\u8a0a\u90fd\u653e\u5165pages\u4e2d\u3002")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Efficient TCP timter management:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5728 TCP \u7684\u904b\u4f5c\u904e\u7a0b\u4e2d\uff0c\u6709\u4e09\u500b\u5730\u65b9\u9700\u8981\u6709 timrer \u7684\u8655\u7406",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u91cd\u50b3\u7684 timeout")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"connection \u5728TIME_WAIT\u72c0\u614b\u6642\u7684\u7b49\u5f85"),(0,l.kt)("li",{parentName:"ul"},"connection keep-alive \u7684\u6aa2\u67e5")),(0,l.kt)("p",null,"mTCP \u63d0\u4f9b\u4e86\u5169\u7a2e\u6a21\u5f0f\u7684 timers\uff0c\u4e00\u7a2e\u662f\u4ee5\u6392\u5e8f\u7684list\u4f86\u7ba1\u7406\uff0c\u53e6\u5916\u4e00\u7a2e\u5247\u662f\u4ee5hash table\u4f86\u7ba1\u7406\u3002\n\u5c0d\u65bc",(0,l.kt)("strong",{parentName:"p"},"coarse grain timers"),"\u4f86\u8aaa(\u5982TIME_WAIT, keep-alive check)\uff0cmTCP\u4f7f\u7528\u4e00\u500b list\u4f86\u8a18\u4f4f\u6240\u6709tcb\uff0c\u4e26\u4e14\u4f9d\u64da\u5176timeout\u7684\u503c\u4f86\u9032\u884c\u6392\u5e8f\u3002(\u8981\u7dad\u8b77\u9019\u500b sorting list\u662f\u7c21\u55ae\u7684\u4e8b\u60c5\uff0c\u56e0\u70ba\u6bcf\u6b21\u8981\u88ab\u52a0\u9032\u4f86\u7684\u65b0TCB\uff0c\u5176timeout\u4e00\u5b9a\u662f\u6bd4\u7576\u524dlist\u5167\u7684\u9084\u8981\u5927)\nmTCP\u6bcf\u4e00\u79d2\u90fd\u6703\u9032\u884c\u78ba\u8a8d\uff0c\u6aa2\u67e5\u8a72 list \u5167\u662f\u5426\u6709 tcb \u5df2\u7d93\u904e\u6642\u9700\u8981\u88ab\u8655\u7406\u4e86\u3002\n\u5c0d\u65bc",(0,l.kt)("strong",{parentName:"p"},"fine-grained retransmission timers"),"\u4f86\u8aaa\uff0cmTCP\u4f7f\u7528\u4e86 hash table \u4f86\u627e\u67e5 tcb\uff0c\u800c\u4f7f\u7528\u7684 key \u5247\u662f\u7576\u524d\u5269\u4e0b\u7684\u6642\u9593(\u4f7f\u7528milliseconds\u70ba\u55ae\u4f4d)\u3002\u7576\u4e00\u500b hash bucket\u7684\u6642\u9593\u5230\u9054\u6642\uff0c\u5c31\u6703\u4e00\u53e3\u6c23\u5c07bucket\u5167\u6240\u6709\u7684 ",(0,l.kt)("strong",{parentName:"p"},"tcbs"),"\u4e00\u8d77\u9032\u884c\u8655\u7406\u3002"),(0,l.kt)("h5",{id:"batched-event-handling"},"Batched Event Handling"),(0,l.kt)("blockquote",{class:"imgur-embed-pub",lang:"en","data-id":"a/hHYNf"},(0,l.kt)("a",{href:"//imgur.com/hHYNf"})),(0,l.kt)("script",{async:!0,src:"//s.imgur.com/min/embed.js",charset:"utf-8"}),"- mTCP \u85c9\u7531batch\u7684\u65b9\u5f0f\u4e00\u53e3\u6c23\u8655\u7406\u591a\u500b flow event\uff0c\u85c9\u6b64\u53ef\u4ee5\u964d\u4f4e\u5927\u91cf event \u9020\u6210\u7684 content switch\u3002 - \u7576 mTCP \u6536\u5230\u5c01\u5305\u6642\uff0c\u6703\u81ea\u5df1\u7522\u751f\u4e00\u500b flow-level event\uff0c\u6700\u5f8c\u6703\u7d71\u4e00\u5c07\u8a72 event \u901a\u77e5\u5230 application\u3002\u5982\u4e0a\u5716\u6240\u793a \u82e5 application \u8981\u9001\u5c01\u5305\u6642\uff0c\u6703\u628a\u6240\u6709\u7684 write event \u653e\u5230 write queue\uff0c\u4e4b\u5f8c mTCP \u6703\u5f9e queue \u5167\u5c07 jobs\u53d6\u51fa\uff0c\u7136\u5f8c\u4e00\u53e3\u6c23\u9001\u5230 NIC \u7684 TX queue\u53bb\u8655\u7406\u3002 - \u9019\u90e8\u5206\u7684\u4e26\u4e0d\u662f\u7368\u5275\u7684\u60f3\u6cd5\uff0c\u76ee\u524d**MegaPipe**,**VOS**\u90fd\u6709\u5be6\u4f5c\u9019\u529f\u80fd",(0,l.kt)("h5",{id:"optimizing-for-short-lived-connections"},"Optimizing for Short-lived Connections"),(0,l.kt)("p",null,"mTCP \u63a1\u7528\u4e86\u5169\u500b\u65b9\u5f0f\u4f86\u6700\u4f73\u5316\u5c0f\u5c01\u5305\u7684\u50b3\u8f38\uff0c\u5206\u5225\u662f\n",(0,l.kt)("strong",{parentName:"p"},"Priority-based packet queueing")," \u4ee5\u53ca",(0,l.kt)("strong",{parentName:"p"},"Lightweight connection setup"),"\u3002"),(0,l.kt)("h5",{id:"priority-based-packet-queueing"},"Priority-based packet queueing"),(0,l.kt)("p",null,"\u5c0d\u65bcTCP\u9023\u7dda\u4f86\u8aaa\uff0c\u63a7\u5236\u5c01\u5305(SYN/ACK)\u4e0d\u4f46\u662f\u500b\u5c0f\u5c01\u5305\u7684\u50b3\u8f38\uff0c\u4e5f\u5c0d\u6574\u500b\u50b3\u8f38\u901f\u7387\u626e\u6f14\u5f88\u91cd\u8981\u7684\u89d2\u8272\uff0c\u56e0\u6b64SYN/ACK\u80fd\u5920\u6108\u65e9\u9001\u5230\u5c0d\u65b9\u662f\u6108\u597d\u7684\u3002\n\u7136\u5f8c\u7576\u7cfb\u7d71\u4e2d\u6709\u5927\u91cf\u7684\u8cc7\u6599\u5c01\u5305\u8981\u50b3\u8f38\u6642\uff0c\u9019\u4e9b\u63a7\u5236\u5c01\u5305\u53ef\u80fd\u5c31\u6703\u56e0\u70ba\u8981\u7af6\u722d TX queue \u800c\u63d0\u9ad8\u4e86 queueing dealy\u3002\nmTCP\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0c\u6c7a\u5b9a\u5c0e\u5165Priority\u7684\u6982\u5ff5\u4f86\u8655\u7406\u5c01\u5305\uff0c\u91dd\u5c0d\u9019\u4e9b\u63a7\u5236\u5c01\u5305\u7d66\u4e88\u66f4\u9ad8\u7684\u512a\u5148\u6b0a\uff0c\u80fd\u5920\u76e1\u65e9\u7684\u5f80\u5916\u9001\uff0c\n\u5916\u4e86\u9054\u6210\u9019\u500b\u6982\u5ff5\uff0c\u5728TX\u90e8\u5206\u5be6\u4f5c\u4e86\u4e09\u7a2elist\uff0c\u6bcf\u7a2elist\u5206\u5225\u5b58\u653e\u4e0d\u540c\u7a2e\u985e\u7684\u5c01\u5305\uff0c\u5206\u5225\u662f Control, Ack, Data \u4e09\u7a2e\u3002\n\u7576\u8981\u628a\u5c01\u5305\u63a8\u5411TX queue\u7684\u6642\u5019\uff0c\u6703\u4f9d\u6b64\u9806\u5e8f\u5c07\u4e09\u500b list \u7684\u5c01\u5305\u5f9eTX queue \u9001\u51fa\uff0c\u85c9\u6b64\u907f\u514d\u9019\u4e9b\u91cd\u8981\u5c01\u5305\u6703\u6709\u904e\u5927\u7684queueing delay\u3002"),(0,l.kt)("h5",{id:"lightweight-connection-setup"},"Lightweight connection setup"),(0,l.kt)("p",null,"\u6839\u64da\u7814\u7a76\u767c\u73fe\uff0c\u5728\u5efa\u7acb\u8d77\u6574\u500b TCP connection \u904e\u7a0b\u4e2d\uff0c\u6709\u5f88\u5927\u4e00\u90e8\u4efd\u7684\u8ca0\u64d4\u90fd\u662f\u5728\u65bc\u8981\u914d\u7f6e\u8a18\u61b6\u9ad4\u7d66TCB\u4ee5\u53caSocket Buffer\u3002\n\u7576\u540c\u6642\u6709\u591a\u500bthread\u547c\u53eb",(0,l.kt)("strong",{parentName:"p"},"malloc"),",",(0,l.kt)("strong",{parentName:"p"},"free"),"\u6642\uff0ckernel\u5167\u7684\u8a18\u61b6\u9ad4\u7ba1\u7406\u8005\u6703\u5f88\u5fd9\u788c\u5730\u4f86\u670d\u52d9\u6bcf\u500bthread\u7684\u8acb\u6c42\u3002\n\u70ba\u4e86\u89e3\u6c7a\u9019\u500b\u554f\u984c\uff0cmTCP\u6703\u4e8b\u5148\u5f9ekernel\u914d\u7f6e\u4e00\u500b\u5f88\u5927\u7684\u8a18\u61b6\u9ad4\u6c60\uff0c\u7576\u6709\u4efb\u4f55Thread\u60f3\u8981\u914d\u7f6e\u8a18\u61b6\u9ad4\u6642\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f9e\u8a72\u8a18\u61b6\u9ad4\u6c60\u4e2d\u53bb\u5b58\u53d6\uff0c"))}m.isMDXComponent=!0}}]);