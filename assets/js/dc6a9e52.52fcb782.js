"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[35122],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=a,k=c["".concat(s,".").concat(m)]||c[m]||p[m]||l;return n?o.createElement(k,r(r({ref:t},d),{},{components:n})):o.createElement(k,r({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,r[1]=i;for(var u=2;u<l;u++)r[u]=n[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},94726:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var o=n(87462),a=(n(67294),n(3905));const l={title:"Kubernetes Self-Healing \u80cc\u5f8c\u7684\u7dad\u904b\u8f9b\u82e6\u8ac7",authors:"hwchiu",tags:["Linux","Kubernetes","Testing"],description:"Kubernetes self-healing \u7684\u908f\u8f2f\u8207\u539f\u7406\u63a2\u8a0e"},r="Preface",i={unversionedId:"2025/k8s_selfhealing",id:"2025/k8s_selfhealing",title:"Kubernetes Self-Healing \u80cc\u5f8c\u7684\u7dad\u904b\u8f9b\u82e6\u8ac7",description:"Kubernetes self-healing \u7684\u908f\u8f2f\u8207\u539f\u7406\u63a2\u8a0e",source:"@site/docs/2025/k8s_selfhealing.md",sourceDirName:"2025",slug:"/2025/k8s_selfhealing",permalink:"/docs/2025/k8s_selfhealing",draft:!1,tags:[{label:"Linux",permalink:"/docs/tags/linux"},{label:"Kubernetes",permalink:"/docs/tags/kubernetes"},{label:"Testing",permalink:"/docs/tags/testing"}],version:"current",lastUpdatedBy:"HWC",frontMatter:{title:"Kubernetes Self-Healing \u80cc\u5f8c\u7684\u7dad\u904b\u8f9b\u82e6\u8ac7",authors:"hwchiu",tags:["Linux","Kubernetes","Testing"],description:"Kubernetes self-healing \u7684\u908f\u8f2f\u8207\u539f\u7406\u63a2\u8a0e"},sidebar:"techPost",previous:{title:"2025",permalink:"/docs/category/2025"},next:{title:"2024",permalink:"/docs/category/2024"}},s={},u=[{value:"Case 1",id:"case-1",level:2},{value:"Case 2",id:"case-2",level:2},{value:"\u7d50\u679c\u89c0\u5bdf",id:"\u7d50\u679c\u89c0\u5bdf",level:2},{value:"Stateful",id:"stateful",level:2},{value:"Stateless",id:"stateless",level:2}],d={toc:u},c="wrapper";function p(e){let{components:t,...l}=e;return(0,a.kt)(c,(0,o.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"preface"},"Preface"),(0,a.kt)("p",null,"Kubernetes \u5bb9\u5668\u5e73\u53f0\u6709\u5f88\u591a\u512a\u52e2\u8207\u7279\u5178\uff0c\u9019\u4e9b\u5f37\u8abf\u7684\u80fd\u529b\u5c31\u662f\u5e0c\u671b\u6e1b\u7de9\u7ba1\u7406\u7684\u8ca0\u64d4\uff0c\u8b93\u6240\u6709\u904b\u884c\u7684\u670d\u52d9\u53ef\u4ee5\u518d\u4e0d\u592a\u9700\u8981\u8003\u616e\u5e95\u5c64\u7bc0\u9ede\u7684\u72c0\u6cc1\u4e0b\u53bb\u81ea\u52d5\u64f4\u5bb9\u8207\u4fee\u5fa9\uff0c\u85c9\u6b64\u89e3\u653e\u7cfb\u7d71\u7ba1\u7406\u54e1\u53bb\u624b\u52d5\u8abf\u5ea6\u8207\u64f4\u5c55\u670d\u52d9\u7684\u9700\u6c42\uff0e\n\u7136\u800c Kubernetes \u672c\u8eab\u7684\u5be6\u4f5c\u908f\u8f2f\u8207\u65b9\u5f0f\u662f\u5426\u771f\u7684\u7b26\u5408\u6211\u5011\u7684\u8a8d\u77e5\u8207\u671f\u671b\uff1f"),(0,a.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u6703\u5c08\u6ce8\u65bc\u7bc0\u9ede\u640d\u58de\u6642\u7684\u81ea\u6211\u4fee\u5fa9\u6a5f\u5236\u53bb\u63a2\u8a0e\uff0c\u91cd\u65b0\u76e4\u9ede\u4e0b\u76ee\u524d Kubernetes \u7684\u5be6\u4f5c\u65b9\u5f0f\u8207\u6548\u679c\uff0c"),(0,a.kt)("h1",{id:"testing-environment"},"Testing Environment"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Ubuntu 24.04"),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528 KIND \u642d\u5efa\u4e00\u500b\u6709\u4e09\u500b worker node \u7684 1.34 K8s")),(0,a.kt)("h2",{id:"case-1"},"Case 1"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e Deployment \u90e8\u7f72\u4e00\u500b\u4e0d\u7528 PVC \u7684 Pod\uff0c\u526f\u672c\u70ba 1"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e docker stop kind-workerx \u7684\u6307\u4ee4\u95dc\u6a5f")),(0,a.kt)("p",null,"\u89c0\u5bdf\u591a\u4e45\u5f8c\uff0c\u8a72 Pod \u6703\u88ab\u79fb\u9664\u7136\u5f8c\u91cd\u65b0\u90e8\u7f72\u5230\u5176\u4ed6\u7bc0\u9ede"),(0,a.kt)("h2",{id:"case-2"},"Case 2"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e Statefulset \u90e8\u7f72\u4e00\u500b\u4e0d\u7528 PVC \u7684 Pod\uff0c\u526f\u672c\u70ba 1"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e docker stop kind-workerx \u7684\u6307\u4ee4\u95dc\u6a5f")),(0,a.kt)("p",null,"\u89c0\u5bdf\u591a\u4e45\u5f8c\uff0c\u8a72 Pod \u6703\u88ab\u79fb\u9664\u7136\u5f8c\u91cd\u65b0\u90e8\u7f72\u5230\u5176\u4ed6\u7bc0\u9ede"),(0,a.kt)("h2",{id:"\u7d50\u679c\u89c0\u5bdf"},"\u7d50\u679c\u89c0\u5bdf"),(0,a.kt)("p",null,"\u91dd\u5c0d\u4e0a\u8ff0\u60c5\u6cc1\uff0c\u6211\u5011\u53ef\u4ee5\u89c0\u5bdf\u5b8c\u5168\u622a\u7136\u4e0d\u540c\u7684\u7b54\u6848\n\u91dd\u5c0d Deployment \u9019\u7a2e Stateless \u7684\u670d\u52d9\uff0cPod \u5927\u6982 6 \u5206\u9418\u5de6\u53f3\u5c31\u6703\u88ab\u91cd\u65b0\u90e8\u7f72\u5230\u53e6\u5916\u4e00\u500b\u7bc0\u9ede\uff0c\u7136\u800c Statefulset \u5247\u662f\u6703\u89c0\u5bdf\u5230 Pod \u5361\u5728 Terminating \u6c92\u6709\u5f8c\u7e8c\uff0c\u4e0d\u8ad6\u591a\u4e45\u90fd\u4e0d\u6703\u770b\u5230\u8a72 Pod \u88ab\u91cd\u65b0\u8abf\u5ea6\u5230\u5176\u4ed6\u7bc0\u9ede"),(0,a.kt)("h1",{id:"\u7d50\u679c\u5206\u6790"},"\u7d50\u679c\u5206\u6790"),(0,a.kt)("p",null,"\u4e0a\u8ff0\u7684\u7d50\u679c\u6709\u5169\u500b\u554f\u984c\u9700\u8981\u5206\u5225\u53bb\u63a2\u8a0e\uff0c\u5206\u5225\u662f"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u70ba\u4ec0\u9ebc Stateless \u9700\u8981\u5927\u6982 6 \u5206\u9418\u5de6\u53f3\u624d\u6703\u88ab\u91cd\u65b0\u90e8\u7f72"),(0,a.kt)("li",{parentName:"ol"},"\u70ba\u4ec0\u9ebc Stateful \u6c38\u9060\u90fd\u9577\u4e0d\u56de\u4f86\uff1f")),(0,a.kt)("p",null,"\u9019\u5169\u500b\u554f\u984c\u8aaa\u5927\u4e5f\u4e0d\u662f\u5f88\u5927\uff0c\u8aaa\u5c0f\u4e5f\u4e0d\u662f\u5f88\u5c0f\uff0c\u66f4\u52a0\u91cd\u8981\u7684\u53cd\u800c\u662f\u6211\u5011\u5fc5\u9808\u8981\u8a8d\u77e5\u9810\u8a2d\u7684 Kubernetes \u6703\u6709\u9019\u4e9b\u73fe\u8c61\uff0c\u56e0\u6b64\u5f8c\u671f\u7dad\u8b77 Kubernetes \u6642\u624d\u80fd\u5920\u9810\u6599\u5230\u6703\u767c\u751f\u7684\u5404\u7a2e\u4e8b\u60c5\uff0e"),(0,a.kt)("p",null,"\u4ee5\u61c9\u7528\u7a0b\u5f0f\u7684\u89d2\u5ea6\u4f86\u8aaa"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Stateless (Deployment) \u5982\u679c\u6709\u5f88\u591a\u500b\u526f\u672c\u7684\u60c5\u6cc1\uff0c\u5c11\u4e00\u500b\u526f\u672c\u516d\u5206\u9418\u771f\u7684\u5c0d\u670d\u52d9\u5f71\u97ff\u5f88\u5927\u55ce\uff1f"),(0,a.kt)("li",{parentName:"ol"},"Stateful \u672c\u8eab\u5982\u679c\u5361\u6b7b\uff0c\u4f46\u662f\u5982\u679c\u7bc0\u9ede\u5fa9\u6d3b\u7684\u8a71\uff0c\u9019\u500b Statefulset \u9084\u662f\u6703\u9577\u56de\u4f86\u6b63\u78ba\u63d0\u4f9b\u670d\u52d9")),(0,a.kt)("p",null,"\u9019\u4e9b\u82b1\u8cbb\u7684\u6642\u9593\u5230\u5e95\u80fd\u4e0d\u80fd\u88ab\u5718\u968a\u8ddf\u4f7f\u7528\u8005\u6240\u63a5\u53d7\uff0c\u5247\u662f\u4e0d\u540c\u7522\u696d\u4e0d\u540c\u5718\u968a\u6703\u6709\u4e0d\u540c\u7684\u7b54\u6848\uff0c\u6c92\u6709\u4e00\u500b\u6a19\u6e96\u7684\u8aaa\u6cd5\uff0e\n\u672c\u7bc7\u6587\u7ae0\u4e0d\u63a2\u8a0e\u9019\u4e9b\u6642\u9593\u5230\u5e95\u5408\u4e0d\u5408\u7406\uff0c\u800c\u662f\u6703\u66f4\u5c08\u6ce8\u65bc\u9019\u4e9b\u7d50\u679c\u7684\u5206\u6790\uff0c\u5f9e Kubernetes \u7684\u5be6\u4f5c\u908f\u8f2f\u4f86\u89c0\u6e2c\u4e26\u4e14\u638c\u63e1\u5230\u9019\u4e9b\u7d50\u679c\u7684\u539f\u56e0"),(0,a.kt)("h1",{id:"\u539f\u7406\u5206\u6790"},"\u539f\u7406\u5206\u6790"),(0,a.kt)("h2",{id:"stateful"},"Stateful"),(0,a.kt)("p",null,"Stateful \u7684\u7269\u4ef6\u4e4b\u6240\u4ee5\u7a31\u70ba Stataeful\uff0c\u662f\u56e0\u70ba\u5176\u6bcf\u500b Pod \u90fd\u6709\u5c08\u5c6c\u7684\u540d\u7a31\uff0c\u4e14\u76f8\u540c\u540d\u7a31\u7684 Pod \u540c\u6642\u9593\u4e0d\u80fd\u6709\u5169\u500b\u904b\u884c\uff0e\n\u56e0\u6b64 Stateful Pod \u7684\u81ea\u52d5\u64f4\u5145\u90fd\u9700\u8981\u91dd\u5c0d\u7576\u524d Pod \u7684\u72c0\u6cc1\u53bb\u78ba\u8a8d\uff0e"),(0,a.kt)("p",null,"\u7576\u7bc0\u9ede\u640d\u58de\u6642\uff0c\u7bc0\u9ede\u4e0a\u7684 Kubelet \u4e5f\u6c92\u6709\u8fa6\u6cd5\u56de\u61c9 API Server \u7684\u4efb\u4f55\u8a62\u554f\uff0c\u56e0\u6b64 Kubernetes \u5c31\u6c92\u6709\u8fa6\u6cd5\u5224\u65b7\u8a72 Statefulset \u662f\u5426\u5df2\u7d93\u88ab\u79fb\u9664\u4e86\uff0c\u53ea\u80fd\u5920\u5c07\u8a72\u7269\u4ef6\u7d66\u6a19\u793a\u70ba Terminating \u7684\u60c5\u6cc1\n\u56e0\u70ba Kubelet \u4e0d\u80fd\u56de\u61c9\uff0cPod \u5c31\u4e0d\u80fd\u79fb\u9664\uff0c\u6240\u4ee5 StatefulSet \u7684 Pod \u624d\u6c92\u6709\u8fa6\u6cd5\u88ab\u91cd\u65b0\u8abf\u5ea6\uff0e"),(0,a.kt)("p",null,"\u6b64\u5916\u56e0\u70ba Stateful \u7684\u6982\u5ff5\u662f\u6709\u72c0\u614b\u7684\uff0c\u6240\u4ee5\u8655\u7406\u7684\u89d2\u5ea6\u8981\u6bd4 Stateless \u66f4\u70ba\u4ed4\u7d30\u5c0f\u5fc3\uff0c\u904e\u5ea6\u90e8\u7f72\u6709\u53ef\u80fd\u6703\u5f71\u97ff\u5230\u5176\u72c0\u614b\uff0c\u56e0\u6b64\u9019\u4e00\u584a\u7684\u7ba1\u7406\u76f8\u5c0d\u65bc Stateless \u4f86\u8aaa\u90fd\u66f4\u70ba\u56b4\u8b39\uff0c\u5e36\u4f86\u7684\u6548\u679c\u5c31\u662f\u5f88\u591a\u904b\u4f5c\u9084\u662f\u9700\u8981\u4eba\u70ba\u4ecb\u5165\u53bb\u8655\u7406\uff0e"),(0,a.kt)("h2",{id:"stateless"},"Stateless"),(0,a.kt)("p",null,"\u4e0d\u540c\u65bc Stateful \u7684\u9650\u5236\uff0cStateless \u672c\u8cea\u4e0a\u7684\u8a2d\u8a08\u662f\u53ef\u591a\u526f\u672c\u96a8\u6642\u64f4\u5145\u7684\uff0c\u4e14\u6bcf\u500b Pod \u7684\u540d\u7a31\u90fd\u4e0d\u540c\uff0c\u800c\u5be6\u9a57\u4e2d\u7684 6 \u5206\u9418\u672c\u8cea\u4e0a\u662f Kubernetes \u89c0\u5bdf\u5230\u8a72\u7bc0\u9ede\u8655\u65bc Not Ready \u7684\u72c0\u6cc1\uff0c\u4e14\u6301\u7e8c\u6642\u9593\u8d85\u904e\u4e00\u500b\u9580\u6abb\uff0c\u6c7a\u5b9a\u4e3b\u52d5\u5c07\u76f8\u95dc\u7684 pod \u90fd\u91cd\u65b0\u90e8\u7f72\uff0e\n\u9019\u500b\u6d41\u7a0b\u727d\u626f\u5230\u5169\u500b\u4e8b\u4ef6"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7576\u7bc0\u9ede\u51fa\u73fe\u6545\u969c\u6642\uff0c Kubernetes \u6703\u82b1\u591a\u5c11\u6642\u9593\u53bb\u5b9a\u7fa9\u8a72\u7bc0\u9ede\u70ba Not Ready"),(0,a.kt)("li",{parentName:"ol"},"\u7576\u7bc0\u9ede\u70ba Not Ready \u6642\uff0c Kubernetes \u6703\u9700\u8981\u7b49\u5f85\u591a\u4e45\u6642\u9593\uff0c\u624d\u6703\u5c07\u8a72\u7bc0\u9ede\u4e0a\u9762\u7684 Pod \u7d66\u91cd\u65b0\u8abf\u5ea6\u8207\u90e8\u7f72\uff0e")),(0,a.kt)("p",null,"\u4ee5\u4e0a\u8ff0\u7684\u5be6\u9a57\u74b0\u5883\u4f86\u770b\uff0c\u9019\u5169\u8005\u7684\u6642\u9593\u5206\u5225\u662f 50 \u79d2\u8207 300 \u79d2\u5de6\u53f3\uff0c"),(0,a.kt)("h1",{id:"node-not-ready-detection"},"Node Not Ready Detection"),(0,a.kt)("p",null,"\u7576\u6211\u5011\u900f\u904e Kubectl get nodes \u7684\u6642\u5019\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230\u7bc0\u9ede\u7684\u72c0\u614b\u70ba Ready\uff0c\u800c\u7576\u7bc0\u9ede\u51fa\u73fe\u554f\u984c\u6642\uff0c\u9019\u4e9b\u72c0\u614b\u5c31\u6703\u88ab\u8f49\u63db\u70ba NotReady."),(0,a.kt)("p",null,"\u6b64\u5be6\u4f5c\u908f\u8f2f\u662f\u7531 Kubelet \u4e3b\u52d5\u56de\u5831\u7684\u6a5f\u5236\uff0c\u6bcf\u53f0\u7bc0\u9ede\u4e0a\u7684 Kubelet \u5b9a\u671f\u90fd\u6703\u5c07\u8a0a\u606f\u50b3\u905e\u7d66 API Server\uff0c\u800c\u9019\u500b\u50b3\u905e\u7684\u7d50\u679c\u6703\u8a18\u9304\u5230 Kubernetes \u5167\u7684\u7269\u4ef6\uff0c"),(0,a.kt)("p",null,"\u57f7\u884c ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl -n kube-node-lease get lease")," \u53ef\u4ee5\u89c0\u5bdf\u5230\u6bcf\u500b\u7bc0\u9ede\u90fd\u6703\u6709\u4e00\u500b\u5c08\u5c6c\u7684 lease \u7269\u4ef6\uff0c\u800c\u7269\u4ef6\u5167\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},".spec.renewTime")," \u5247\u662f\u7528\u4f86\u8a18\u9304 API Server \u6536\u5230\u7684\u6642\u9593\uff0e\u5982\u4e0b\u5716\n",(0,a.kt)("img",{alt:"image",src:n(93418).Z,width:"800",height:"121"})),(0,a.kt)("p",null,"\u4ee5\u4e0a\u5716\u4f86\u770b\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230\u8a72 RenewTime \u6bcf\u5341\u79d2\u6703\u66f4\u65b0\u4e00\u6b21\uff0c\u9019\u500b\u6642\u9593\u5176\u5be6\u4e5f\u5c31\u662f Kubelet \u66f4\u65b0\u7684\u9593\u9694\u6642\u9593\uff0c\u662f\u6bcf\u5341\u79d2\u4e00\u6b21\uff0e"),(0,a.kt)("p",null,"\u4ee5\u76ee\u524d ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/release-1.34/pkg/kubelet/kubelet.go#L1050-L1061"},"1.34")," \u7684\u539f\u59cb\u78bc\u4f86\u770b\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230 Kubelet \u7684\u8a08\u7b97\u65b9\u5f0f\u70ba"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5f9e kubelet \u7684\u8a2d\u5b9a\u4e2d\u53d6\u5f97 NodeLeaseDurationSeconds"),(0,a.kt)("li",{parentName:"ol"},"\u4e58\u4e0a\u4e00\u500b\u56fa\u5b9a\u7684\u5e38\u6578 0.25 (nodeLeaseRenewIntervalFraction)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-=golang"},"const {\n\n    // nodeLeaseRenewIntervalFraction is the fraction of lease duration to renew the lease\n    nodeLeaseRenewIntervalFraction = 0.25\n...\n}\n\n\n...\n\n    leaseDuration := time.Duration(kubeCfg.NodeLeaseDurationSeconds) * time.Second\n    renewInterval := time.Duration(float64(leaseDuration) * nodeLeaseRenewIntervalFraction)\n    klet.nodeLeaseController = lease.NewController(\n        klet.clock,\n        klet.heartbeatClient,\n        string(klet.nodeName),\n        kubeCfg.NodeLeaseDurationSeconds,\n        klet.onRepeatedHeartbeatFailure,\n        renewInterval,\n        string(klet.nodeName),\n        v1.NamespaceNodeLease,\n        util.SetNodeOwnerFunc(klet.heartbeatClient, string(klet.nodeName)))\n")),(0,a.kt)("p",null,"\u4ee5 (\u5b98\u65b9\u6587\u4ef6)","[https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/]"," \u4e2d\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230\u6b64\u8a2d\u5b9a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"nodeLeaseDurationSeconds (int32)\n\nnodeLeaseDurationSeconds is the duration the Kubelet will set on its corresponding Lease. NodeLease provides an indicator of node health by having the Kubelet create and periodically renew a lease, named after the node, in the kube-node-lease namespace. If the lease expires, the node can be considered unhealthy. The lease is currently renewed every 10s, per KEP-0009. In the future, the lease renewal interval may be set based on the lease duration. The field value must be greater than 0. Default: 40\n")),(0,a.kt)("p",null,"\u9810\u8a2d\u503c\u662f 40 \u7684\u60c5\u6cc1\uff0c 0.25 * 40 = 10\uff0c\u56e0\u6b64 Kubelet \u5c31\u6703\u6bcf 10 \u79d2\u66f4\u65b0\u4e00\u6b21"),(0,a.kt)("p",null,"\u5982\u679c\u60f3\u8981\u8abf\u6574\u7684\u8a71\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 /var/lib/kubelet/config.yaml \u5167\u7684 nodeLeaseDurationSeconds \u4e26\u4e14\u91cd\u555f Kubelet \u5373\u53ef\uff0c\u7576\u91cd\u555f\u5f8c\u5c31\u6703\u89c0\u5bdf\u5230 Lease \u7684\u66f4\u65b0\u983b\u7387\u6703\u63d0\u5347\uff0c\u4ee5\u4e0b\u7bc4\u4f8b\u662f\u5c07\u8a72\u503c\u4fee\u6539\u70ba 20\uff0c\u5247\u66f4\u65b0\u983b\u7387\u5247\u8b8a\u6210\u6bcf\u4e94\u79d2\u4e00\u6b21"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(42980).Z,width:"800",height:"156"}),"\n",(0,a.kt)("img",{alt:"image",src:n(17572).Z,width:"800",height:"1201"})),(0,a.kt)("p",null,"Kubelet \u900f\u904e lease \u7269\u4ef6\u5f8c\uff0c\u5f8c\u7e8c\u5247\u662f Controller \u672c\u8eab\u6703\u53bb\u5b9a\u671f\u6aa2\u67e5\u9019\u4e9b Lease \u7269\u4ef6\uff0c\u4e26\u4e14\u5224\u65b7\u8a72\u7bc0\u9ede\u662f\u5426\u592a\u4e45\u6c92\u6709\u66f4\u65b0\uff0c\u4e00\u65e6\u8a72\u7bc0\u9ede\u7684 Lease \u592a\u4e45\u6c92\u6709\u66f4\u65b0\uff0c\u5247\u6703\u5224\u5b9a\u8a72\u7bc0\u9ede\u70ba Not Healthy\uff0c\u6700\u5f8c\u5c31\u5c07\u72c0\u614b\u4fee\u6539\u70ba Not Ready\uff0e"),(0,a.kt)("p",null,"\u4ee5\u76ee\u524d\u7684 1.34 \u7248\u672c\u4f86\u8aaa"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Controller \u5247\u662f\u6bcf\u4e94\u79d2\u6aa2\u67e5\u4e00\u6b21"),(0,a.kt)("li",{parentName:"ol"},"\u8d85\u904e 50 \u79d2\u6c92\u6709\u66f4\u65b0\uff0c\u5247\u662f\u6703\u5c07\u8a72\u9ede\u5224\u5b9a\u70ba\u4e0d\u5065\u5eb7")),(0,a.kt)("p",null,"\u9019\u5169\u500b\u53c3\u6578\u53ef\u4ee5\u900f\u904e\u4fee\u6539 Controller \u7684\u8a2d\u5b9a\u4f86\u8abf\u6574\uff0c\u5982 ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/"},"Controller")," \u7684\u6558\u8ff0"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--node-monitor-grace-period"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Default: 50s")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Amount of time which we allow running Node to be unresponsive before marking it unhealthy. Must be N times more than kubelet's nodeStatusUpdateFrequency, where N means number of retries allowed for kubelet to post node status. This value should also be greater than the sum of HTTP2_PING_TIMEOUT_SECONDS and HTTP2_READ_IDLE_TIMEOUT_SECONDS")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"--node-monitor-period"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Default: 5s")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"The period for syncing NodeStatus in cloud-node-lifecycle-controller.")),(0,a.kt)("p",null,"\u4ee5\u4e0b\u662f\u76ee\u524d ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/v1.34.1/pkg/controller/nodelifecycle/node_lifecycle_controller.go#L657"},"1.34")," \u7684\u76f8\u95dc\u5be6\u4f5c\uff0c\u6703\u5148\u900f\u904e nodeMonitorPeriod \u53bb\u5b9a\u671f\u555f\u52d5 goroutine\uff0c\u5167\u90e8\u5247\u662f\u6aa2\u67e5\u72c0\u6cc1\u4e26\u4e14\u6839\u64da\u60c5\u6cc1\u8abf\u6574\uff0c\u6700\u5f8c\u900f\u904e now() \u7684\u65b9\u5f0f\u4f86\u5224\u5225\u8a72 lease \u7269\u4ef6\u7684 RenewTime \u8207 MonitorGracePeriod (50 secs) \u662f\u5426\u6709\u8d85\u904e\uff0c\u6709\u7684\u8a71\u5c31\u6703\u5f8c\u7e8c\u8abf\u6574\u72c0\u614b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang"},'    go wait.UntilWithContext(ctx, func(ctx context.Context) {\n        if err := nc.monitorNodeHealth(ctx); err != nil {\n            logger.Error(err, "Error monitoring node health")\n        }\n    }, nc.nodeMonitorPeriod)\n\n    <-ctx.Done()\n....\n\n// monitorNodeHealth verifies node health are constantly updated by kubelet, and if not, post "NodeReady==ConditionUnknown".\n// This function will\n//   - add nodes which are not ready or not reachable for a long period of time to a rate-limited\n//     queue so that NoExecute taints can be added by the goroutine running the doNoExecuteTaintingPass function,\n//   - update the PodReady condition Pods according to the state of the Node Ready condition.\nfunc (nc *Controller) monitorNodeHealth(ctx context.Context) error {\n    ....\n}\n\n\n// tryUpdateNodeHealth checks a given node\'s conditions and tries to update it. Returns grace period to\n// which given node is entitled, state of current and last observed Ready Condition, and an error if it occurred.\nfunc (nc *Controller) tryUpdateNodeHealth(ctx context.Context, node *v1.Node) (time.Duration, v1.NodeCondition, *v1.NodeCondition, error) {\n...\n    if nc.now().After(nodeHealth.probeTimestamp.Add(gracePeriod)) {\n    ...\n}\n\n')),(0,a.kt)("p",null,"\u6b64\u5916\uff0c\u8a72 ",(0,a.kt)("inlineCode",{parentName:"p"},"node-monitor-grace-period")," \u904e\u5f80\u7684\u9810\u8a2d\u503c\u662f 40 \u79d2\uff0c\u7136\u800c\u81ea\u5f9e 1.31 \u5f8c\uff0c\u56e0\u70ba\u4e0b\u5217\u6b64 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/issues/121793"},"issue")," \u800c\u8abf\u6574\u70ba 50 \u79d2\uff0c\u4e3b\u8981\u662f\u672c\u4f86\u7684 40 \u79d2\u6bd4 Kubelet \u7684 HTTP2 \u9810\u8a2d timeout \u9084\u8981\u77ed\uff0c\u56e0\u6b64\u8abf\u6574\u70ba 50 \u79d2"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(14762).Z,width:"800",height:"425"})),(0,a.kt)("h1",{id:"pod-eviction"},"Pod Eviction"),(0,a.kt)("p",null,"\u7576\u7bc0\u9ede\u88ab\u6a19\u793a\u70ba Not Ready \u5f8c\uff0cController \u5247\u6703\u958b\u59cb\u6aa2\u67e5\uff0c\u7576\u8d85\u904e\u67d0\u500b\u6642\u9593\u9ede\u5f8c\u5c31\u6703\u958b\u59cb\u5c07\u8a72\u7bc0\u9ede\u4e0a\u7684 Pod \u90fd\u9a45\u9010\u91cd\u65b0\u90e8\u7f72\u5230\u5225\u7684\u7bc0\u9ede\uff0e"),(0,a.kt)("p",null,"Kubernetes 1.27 \u4ee5\u524d\uff0c\u53ef\u4ee5\u900f\u904e ",(0,a.kt)("inlineCode",{parentName:"p"},"--pod-eviction-timeout")," \u6b64\u53c3\u6578\u4f86\u8abf\u6574\u9810\u8a2d\u6578\u503c\uff0c\u7136\u800c\u8a72\u65b9\u5f0f\u7d93\u904e ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/website/commit/3a81c94ba8b6ada277bc5e5e44a4e7ce62c2cfa9"},"Commit 3a81c94")," \u8abf\u6574\u5f8c\uff0c\u5c07\u6b64\u65b9\u5f0f\u7d66\u79fb\u9664\u4e26\u4e14\u5f15\u5165\u4e86 Taint-Based \u7684\u65b9\u5f0f\u53bb\u8abf\u6574"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(60638).Z,width:"612",height:"252"})),(0,a.kt)("p",null,"Taint/Toleration \u5f88\u5e38\u642d\u914d NoSchedule \u7684\u65b9\u5f0f\u4f86\u8abf\u6574\u7bc0\u9ede\u7684\u90e8\u7f72\u7b56\u7565\uff0c\u900f\u904e\u6b64\u6a5f\u5236\u6211\u5011\u53ef\u4ee5\u6839\u64da\u9700\u6c42\u8b93\u7279\u5b9a\u7684 Pod \u90e8\u7f72\u5230\u7279\u5b9a\u7684\u7bc0\u9ede\u4e0a\uff0c\u7136\u800c\u9664\u4e86 NoSchedule \u5916\uff0c\u9084\u6709 NoExecute \u7684\u7279\u6027\u53ef\u4ee5\u4f7f\u7528\uff0c\u76f8\u5c0d\u65bc NoSchedule \u662f\u91dd\u5c0d Schduling \u968e\u6bb5\u8abf\u6574\u90e8\u7f72\u76ee\u6a19\uff0c NoExecute \u5247\u662f\u5c07\u904b\u884c\u7684 Pod \u7d66\u91cd\u65b0\u8abf\u5ea6\u8d70\uff0e\n\u6839\u64da ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/"},"\u5b98\u65b9\u6587\u4ef6")," \u7684\u6558\u8ff0\uff0c NoExecute \u53ef\u4ee5\u5c07 Pod \u7d66\u99ac\u4e0a\u9a45\u9010\u8d70\uff0c\u6b64\u5916\u53ef\u4ee5\u642d\u914d tolerationSeconds \u9019\u500b\u79d2\u6578\u4f86\u8abf\u6574\u6642\u9593\uff0c\u7576 Pod \u7dad\u6301\u8d85\u904e\u6b64\u6642\u9593\u5f8c\u90fd\u9084\u6c92\u6709\u8fa6\u6cd5\u91dd\u5c0d\u8a72 Taint \u5c31\u8655\u7406\uff0c\u5c31\u6703\u89f8\u767c NoExecute \u88ab\u91cd\u65b0\u90e8\u7f72\uff0e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Normally, if a taint with effect NoExecute is added to a node, then any pods that do not tolerate the taint will be evicted immediately, and pods that do tolerate the taint will never be evicted. However, a toleration with NoExecute effect can specify an optional tolerationSeconds field that dictates how long the pod will stay bound to the node after the taint is added. For example,\n")),(0,a.kt)("p",null,"\u76ee\u524d\u6240\u6709\u7684 Pod \u88ab\u90e8\u7f72\u7684\u6642\u5019\uff0c\u90fd\u6703\u81ea\u52d5\u5730\u88ab\u52a0\u4e0a\u4e0b\u5217\u5169\u500b Toleration\uff0c\u4e0b\u5217\u5169\u500b Toleration \u91dd\u5c0d\u5169\u7a2e Taint \u53bb\u8655\u7406"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"node.kubernetes.io/not-ready"),(0,a.kt)("li",{parentName:"ol"},"node.kubernetes.io/unreachable\n\u540c\u6642\u8a2d\u5b9a tolerationSeconds: 300 \u79d2\u7684\u8a2d\u5b9a\uff0e")),(0,a.kt)("p",null,"\u9019\u610f\u5473\u53ea\u8981\u7576\u7bc0\u9ede\u88ab Controller \u5224\u5b9a\u70ba Not Ready \u4e14\u52a0\u4e0a\u5c0d\u61c9\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"node.kubernetes.io/not-ready")," Taint \u5f8c\uff0cPod \u5c31\u6703\u958b\u59cb\u8a08\u7b97\u6642\u9593\uff0c300 \u79d2\u5167\u90fd\u7dad\u6301\u9019\u500b\u72c0\u6cc1\uff0c\u5c31\u6703\u76f4\u63a5\u88ab Controller \u7d66\u91cd\u65b0\u9a45\u9010\uff0e\n\u9019\u5169\u500b\u6578\u5b57\u662f\u53ef\u4ee5\u81ea\u884c\u64b0\u5beb YAML  \u53bb\u8abf\u6574\u7684\uff0c\u56e0\u6b64\u5982\u679c\u61c9\u7528\u7a0b\u5f0f\u5e0c\u671b\u53ef\u4ee5\u66f4\u5feb\u901f\u4e14\u66f4\u654f\u6377\u7684\u53bb\u8f49\u79fb\u7684\u8a71\uff0c\u53ef\u4ee5\u81ea\u884c\u52a0\u5165\u9019\u5169\u500b Toleration\uff0c\u8b93\u7bc0\u9ede\u51fa\u73fe\u6545\u969c\u6642\uff0c Pod \u80fd\u5920\u66f4\u5feb\u7684\u81ea\u6211\u8abf\u5ea6\u8207\u91cd\u65b0\u90e8\u7f72\uff0e"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image",src:n(60036).Z,width:"800",height:"334"})),(0,a.kt)("p",null,"\u56e0\u70ba\u4e0a\u8ff0\u9019\u4e9b\u6a5f\u5236"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u7bc0\u9ede\u8d85\u904e 50 \u79d2\u90fd\u6c92\u6709\u66f4\u65b0\uff0c\u5c31\u6703\u88ab Controller \u5224\u5b9a\u70ba Not Ready"),(0,a.kt)("li",{parentName:"ol"},"PoD \u7684 Toleration \u8a2d\u5b9a\uff0c\u7576\u7bc0\u9ede\u7dad\u6301 Not Ready \u72c0\u614b 300 \u79d2\u5f8c\u5c31\u6703\u88ab\u9a45\u9010\u5230\u5176\u4ed6\u7bc0\u9ede")),(0,a.kt)("p",null,"\u56e0\u6b64\u9019\u5c31\u662f\u70ba\u4ec0\u9ebc\u76ee\u524d Deployment \u9700\u8981\u7b49\u5f85\u5927\u6982 350 \u79d2~=6 \u5206\u9418\u5de6\u53f3\u624d\u53ef\u4ee5\u81ea\u884c\u88ab\u90e8\u7f72\uff0e"),(0,a.kt)("h1",{id:"solution"},"Solution"),(0,a.kt)("p",null,"\u7406\u89e3\u4e86\u9019\u4e9b\u6a5f\u5236\u5f8c\uff0c\u6211\u5011\u77e5\u9053\u53ef\u4ee5\u900f\u904e\u4e00\u4e9b\u53c3\u6578\u4f86\u8abf\u6574 Stateless \u7684\u4fee\u5fa9\u6642\u9593\uff0c\u5f9e\u9810\u8a2d\u7684 350 \u79d2\u4e0b\u964d\u5230 120/180 \u79d2\u7b49\uff0c\u4e0d\u904e\u5373\u4f7f\u6709\u9019\u4e9b\u6a5f\u5236\uff0cStatefulSet \u7684\u7269\u4ef6\u4e5f\u6c92\u6709\u8fa6\u6cd5\u88ab\u8abf\u6574\uff0c\u56e0\u6b64\u4e00\u500b\u6bd4\u8f03\u5e38\u898b\u7684\u505a\u6cd5\u662f\u6703\u5be6\u4f5c\u4e00\u500b\u984d\u5916\u7684\u63a7\u5236\u5668\uff0c\u8a72\u63a7\u5236\u5668\u5be6\u4f5c\u4e0b\u5217\u908f\u8f2f"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5075\u6e2c\u7bc0\u9ede\u662f\u5426\u51fa\u554f\u984c"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e Drain \u7684\u884c\u70ba\u5c07\u7bc0\u9ede\u4e0a\u7684 Pod \u7d66\u5f37\u5236\u79fb\u9664")),(0,a.kt)("p",null,"\u7279\u5225\u662f (2) \u7684\u908f\u8f2f\uff0c\u80fd\u5920\u5f37\u5236\u7684\u5c07 Statefulset Pod \u7d66\u79fb\u9664\uff0c\u5373\u4f7f\u6c92\u6709\u6536\u5230 Kubelet \u7684\u901a\u77e5\u4e5f\u9084\u662f\u53ef\u4ee5\u9806\u5229\u79fb\u9664\uff0c\u79fb\u9664\u5f8c\u5c31\u53ef\u4ee5\u5c07 StatefulSet Pod \u7d66\u91cd\u65b0\u90e8\u7f72\u5230\u5176\u4ed6\u7bc0\u9ede\u4e0a\uff0e\n\u53e6\u5916\u9019\u5169\u500b\u908f\u8f2f\u7684\u5be6\u4f5c\u6642\u9593\uff0c\u4e5f\u53ef\u4ee5\u9054\u5230\u7e2e\u77ed\u81ea\u52d5\u4fee\u5fa9\u7684\u6642\u9593\uff0c\u4e0d\u904e\u6574\u9ad4\u7684\u8003\u91cf\u9084\u662f\u9700\u8981\u64d4\u5fc3\uff0c\u7bc0\u9ede\u7684\u6bc0\u58de\u662f\u771f\u7684\u51fa\u554f\u984c\uff0c\u9084\u662f\u56e0\u70ba\u67d0\u4e9b\u539f\u56e0\u6545\u969c\u5c0e\u81f4\u7684 False Alarm\uff0c\u9019\u90e8\u5206\u5c31\u662f\u5be6\u4f5c\u4e0a\u9700\u8981\u6289\u64c7\u8207\u6c7a\u5b9a\u7684\u90e8\u5206"),(0,a.kt)("h1",{id:"case-3"},"Case (3)"),(0,a.kt)("p",null,"\u5be6\u52d9\u4e0a\uff0c StatefulSet \u90e8\u7f72\u7684\u6642\u5019\u90fd\u6703\u642d\u914d PVC \u4f86\u7372\u5f97\u4e00\u500b\u5132\u5b58\u7a7a\u9593\uff0c\u56e0\u6b64\u4ee5\u76f8\u540c\u7684\u74b0\u5883\u8207\u9032\u884c\u6e2c\u8a66"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e Statefulset \u90e8\u7f72\u4e00\u500b\u7528 PVC \u7684 Pod\uff0c\u526f\u672c\u70ba 1"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e docker stop kind-workerx \u7684\u6307\u4ee4\u95dc\u6a5f"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e kubectl drain node --force=1 \u7684\u65b9\u5f0f\u5f37\u5236\u79fb\u9664 Pod")),(0,a.kt)("p",null,"\u89c0\u5bdf\u591a\u4e45\u5f8c\uff0c\u8a72 Pod \u6703\u88ab\u79fb\u9664\u7136\u5f8c\u91cd\u65b0\u90e8\u7f72\u5230\u5176\u4ed6\u7bc0\u9ede"),(0,a.kt)("p",null,"\u6309\u7167\u6211\u5011\u524d\u8ff0\u7684\u7406\u89e3\uff0c\u57fa\u672c\u4e0a\u53ea\u8981\u547c\u53eb drain node \u53bb\u5f37\u8feb\u79fb\u9664\uff0c\u9019\u4e9b Pod \u61c9\u8a72\u90fd\u8981\u53ef\u4ee5\u7acb\u5373\u5730\u88ab\u6e05\u9664\u4e7e\u6de8\uff0c\u7136\u5f8c\u91cd\u65b0\u90e8\u7f72\u5230\u5176\u4ed6\u7bc0\u9ede\uff0c\u4f46\u662f\u5be6\u52d9\u4e0a\u6703\u89c0\u5bdf\u5230 Pod \u537b\u6703\u5361\u4f4f\u81f3\u5c11\u516d\u5206\u9418\uff0c\u4e4b\u5f8c\u624d\u6703\u88ab\u79fb\u9664\u4e26\u4e14\u88ab\u90e8\u7f72\uff0e"),(0,a.kt)("p",null,"\u9019\u90e8\u5206\u53c8\u662f\u53e6\u5916\u4e00\u500b\u56f0\u64fe\u7684\u554f\u984c\uff0c\u672c\u8cea\u4e0a\u8ddf PVC \u7684\u5b58\u53d6\u6709\u95dc\uff0c\u6c92\u6709\u4f7f\u7528 PVC \u5c31\u6c92\u6709\u9019\u516d\u5206\u9418\u7684\u554f\u984c\uff0c\u4e00\u65e6\u4f7f\u7528 PVC \u5c31\u6703\u6709\u9019\u500b\u516d\u5206\u9418\u8981\u7b49\u5f85"),(0,a.kt)("h1",{id:"pvc-issue"},"PVC Issue"),(0,a.kt)("p",null,"\u7576\u4e00\u500b\u542b\u6709 PVC \u7684\u7269\u4ef6\u8981\u79fb\u9664\u6642\uff0c\u9664\u4e86 Pod \u4e4b\u5916\uff0c\u6709\u4e00\u500b\u66f4\u70ba\u91cd\u8981\u7684\u662f VolumeAttachment \u7269\u4ef6\uff0c\u70ba\u4e86\u78ba\u4fdd Pod \u7684\u8f49\u79fb\u5c0d\u8cc7\u6599\u662f\u5b89\u5168\u7684\uff0c\u6240\u6709\u7684 VolumeAttachment \u9700\u8981\u88ab\u5b89\u5168\u79fb\u9664\u5f8c\uff0c Kubernetes \u624d\u6703\u8a8d\u70ba\u8a72 Pod \u5b89\u5168\u7136\u5f8c\u624d\u6703\u6709\u5f8c\u7e8c\u7684\u91cd\u65b0\u8abf\u5ea6\uff0e"),(0,a.kt)("p",null,"\u4ee5\u76ee\u524d ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/release-1.34/pkg/controller/volume/attachdetach/attach_detach_controller.go"},"1.34")," \u7684\u908f\u8f2f\u4f86\u770b\uff0c\u53ef\u4ee5\u89c0\u5bdf\u5230 Volume Attach \u76f8\u95dc Controller \u6709\u4ee5\u4e0b\u7684\u7a0b\u5f0f\u78bc"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang"},"type TimerConfig struct {\n...\n\n    // DesiredStateOfWorldPopulatorLoopSleepPeriod is the amount of time the\n    // DesiredStateOfWorldPopulator loop waits between successive executions\n    DesiredStateOfWorldPopulatorLoopSleepPeriod time.Duration\n...\n    \n\nvar DefaultTimerConfig = TimerConfig{\n    ReconcilerLoopPeriod:                              100 * time.Millisecond,\n    ReconcilerMaxWaitForUnmountDuration:               6 * time.Minute,\n    DesiredStateOfWorldPopulatorLoopSleepPeriod:       1 * time.Minute,\n    DesiredStateOfWorldPopulatorListPodsRetryDuration: 3 * time.Minute,\n}\n")),(0,a.kt)("p",null,"\u8a72\u7a0b\u5f0f\u78bc\u5b9a\u7fa9\u4e86\u4e00\u500b\u540d\u70ba ReconcilerMaxWaitForUnmountDuration \u7684\u8b8a\u6578\uff0c\u9810\u8a2d\u662f 6 \u5206\u9418\uff0c\u5f8c\u7e8c\u7684 ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/release-1.34/pkg/controller/volume/attachdetach/reconciler/reconciler.go#L214-L243"},"Controller")," \u6d41\u7a0b\u4e2d\u5247\u662f\u6703"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6aa2\u67e5\u76ee\u524d\u82b1\u8cbb\u591a\u5c11\u6642\u9593\u4e86\uff0c\u5982\u679c\u8d85\u904e MaxWaitForUnmountDuration\uff0c\u5247\u5617\u8a66\u57f7\u884c ",(0,a.kt)("inlineCode",{parentName:"li"},"forceDetatch")," \u4f86\u5f37\u5236\u79fb\u9664 VolumeAttachment")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang"},'            maxWaitForUnmountDurationExpired := elapsedTime > rc.maxWaitForUnmountDuration\n\n            isHealthy, err := rc.nodeIsHealthy(attachedVolume.NodeName)\n            if err != nil {\n                logger.V(5).Info("Failed to get health of node",\n                    "node", klog.KRef("", string(attachedVolume.NodeName)),\n                    "err", err)\n            }\n\n            // Force detach volumes from unhealthy nodes after maxWaitForUnmountDuration if force detach is enabled\n            // Ensure that the timeout condition checks this correctly so that the correct metric is updated below\n            forceDetatchTimeoutExpired := maxWaitForUnmountDurationExpired && !rc.disableForceDetachOnTimeout\n            if maxWaitForUnmountDurationExpired && rc.disableForceDetachOnTimeout {\n                logger.V(5).Info("Drain timeout expired for volume but disableForceDetachOnTimeout was set", "node", klog.KRef("", string(attachedVolume.NodeName)), "volumeName", attachedVolume.VolumeName)\n            }\n            forceDetach := !isHealthy && forceDetatchTimeoutExpired\n\n')),(0,a.kt)("p",null,"\u5f9e\u7a0b\u5f0f\u78bc\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u9664\u4e86\u55ae\u7d14\u7528\u6642\u9593\u5224\u65b7\u5916\uff0c\u6709\u4e00\u500b\u984d\u5916\u7684\u8a2d\u5b9a\u53ef\u4ee5\u5b8c\u5168\u7981\u6b62\u9019\u985e\u578b\u7684\u5f37\u5236\u79fb\u9664\u52d5\u4f5c\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u9700\u8981\u4eba\u70ba\u4ecb\u5165\uff0c\u4e0d\u904e\u8a72\u8a2d\u5b9a\u9810\u8a2d\u662f\u95dc\u9589\u7684\uff0c\u56e0\u6b64\u53ea\u8981\u6642\u9593\u8d85\u904e 6 \u5206\u9418\uff0cController \u5c31\u6703\u4ecb\u5165\u4e26\u4e14\u79fb\u9664 VolumeAttachment\uff0c\u7136\u5f8c Statefulset \u624d\u53ef\u4ee5\u958b\u59cb\u88ab\u79fb\u8f49\uff0c\u9019\u500b\u516d\u5206\u9418\u5c31\u662f\u5c0e\u81f4\u5361\u4f4f\u7684\u516d\u5206\u9418\uff0e"),(0,a.kt)("p",null,"\u4e0d\u5e78\u7684\u662f\uff0c\u9019\u516d\u5206\u9418\u76ee\u524d\u662f\u4e00\u500b\u4e0d\u53ef\u8a2d\u5b9a\u7684\u9910\u6578\uff0c\u9019\u610f\u5473\u5982\u679c\u6211\u5011\u6309\u7167\u5148\u524d\u7684\u601d\u8def\u53bb\u8a2d\u8a08\u4fee\u5fa9\u529f\u80fd\u7684\u8a71\uff0c\u4efb\u4f55\u6709\u639b\u8f09 PVC \u7684 StatefulSet \u90fd\u9700\u8981\u81f3\u5c11\u516d\u5206\u9418\u4ee5\u4e0a\u624d\u53ef\u4ee5\u518d\u7bc0\u9ede\u640d\u58de\u6642\u81ea\u52d5\u88ab\u8abf\u5ea6\uff0c\u516d\u5206\u9418\u7684\u6642\u9593\u5167\uff0c\u5982\u679c\u540c\u6642\u6709\u7b2c\u4e8c\u500b\u7bc0\u9ede\u640d\u58de\u5c0e\u81f4\u53c8\u6709\u904e\u591a\u7684 Pod \u55aa\u5931\u529f\u80fd\u7684\u8a71\uff0c\u53ef\u80fd\u6703\u5c0e\u81f4\u670d\u52d9\u6574\u9ad4\u51fa\u554f\u984c\uff0e\n\u56e0\u6b64\u89e3\u6c7a\u65b9\u5f0f\u9664\u4e86\u60f3\u8fa6\u6cd5\u7e2e\u77ed\u516d\u5206\u9418\u5916\uff0c\u90e8\u7f72\u7684\u90e8\u5206\u4e5f\u9700\u8981\u76e1\u91cf\u5c07 Pod \u7d66\u5206\u6563\u958b\uff0c\u76e1\u91cf\u907f\u514d\u55ae\u4e00\u7bc0\u9ede\u6545\u969c\u5f71\u97ff\u904e\u591a\u7684 Pod\u3002"),(0,a.kt)("p",null,"\u70ba\u4e86\u6539\u5584\u9019\u500b\u6642\u9593\u554f\u984c\uff0c\u540c\u6642\u53c8\u8981\u53ef\u4ee5\u518d\u5b89\u5168\u8207\u6548\u7387\u65b9\u9762\u4e00\u8d77\u63d0\u5347\uff0c ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/enhancements/tree/master/keps/sig-storage/2268-non-graceful-shutdown"},"KEP-2268: Non graceful node shutdown")," \u88ab\u63d0\u51fa\u8207\u5be6\u4f5c\uff0c\u8a72 KEP \u7684\u90e8\u5206\u5982\u4e0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"In this KEP, we are proposing a way that allows stateful workloads to failover to a different node successfully after the original node is shutdown or in a non-recoverable state such as the hardware failure or broken OS.\n")),(0,a.kt)("p",null,"\u6b64 KEP \u5f15\u5165\u4e00\u500b\u65b0\u7684 Taint\uff0c\u53ea\u8981\u91dd\u5c0d\u7bc0\u9ede\u6253\u4e0a\u7279\u5b9a\u7684 Taint\uff0c\u5247 Controller \u5c31\u6703\u76f4\u63a5\u8655\u7406\uff0c\u76f8\u95dc\u7684\u908f\u8f2f\u53ef\u4ee5\u770b\u9019\u908a\u7684",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/release-1.34/pkg/controller/volume/attachdetach/reconciler/reconciler.go#L231-L243"},"\u7a0b\u5f0f\u78bc"),"\n\u6709\u4e86\u6b64\u6a5f\u5236\uff0c\u672c\u4f86\u516d\u5206\u9418\u7684\u6642\u9593\u5c31\u4e0d\u9700\u8981\u7279\u5225\u4fee\u6539\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e3b\u52d5\u53bb\u91dd\u5c0d\u6709\u554f\u984c\u7684\u7bc0\u9ede\u7d66\u4e88\u7279\u5b9a\u7684 Taint\uff0c\u5f8c\u7e8c\u5c31\u6703\u9032\u884c detach \u7684\u64cd\u4f5c\uff0e"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"node.kubernetes.io/out-of-service")," \u5247\u662f\u6b64 KEP \u5f15\u5165\u7684 Taint  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang"},'            hasOutOfServiceTaint, err := rc.hasOutOfServiceTaint(attachedVolume.NodeName)\n            if err != nil {\n                logger.V(5).Info("Failed to get taint specs for node",\n                    "node", klog.KRef("", string(attachedVolume.NodeName)),\n                    "err", err)\n            }\n\n            // Check whether volume is still mounted. Skip detach if it is still mounted unless we have\n            // decided to force detach or the node has `node.kubernetes.io/out-of-service` taint.\n            if attachedVolume.MountedByNode && !forceDetach && !hasOutOfServiceTaint {\n                logger.V(5).Info("Cannot detach volume because it is still mounted", "node", klog.KRef("", string(attachedVolume.NodeName)), "volumeName", attachedVolume.VolumeName)\n                continue\n            }\n')),(0,a.kt)("p",null,"\u9664\u4e86 Kubernetes \u672c\u8eab\u5916\uff0c\u4e5f\u6709\u4e9b CSI Controller \u4e5f\u5c0e\u5165\u6b64\u6a5f\u5236\uff0c\u7576\u89c0\u5bdf\u5230\u7bc0\u9ede\u4e0a\u6709\u8a72\u7279\u5b9a\u7684 Taint \u6642\uff0c\u4e5f\u6703\u5f9e Storage Controller \u65b9\u9762\u9032\u884c Detach \u7684\u52d5\u4f5c\uff0c\u8b93\u76f8\u95dc\u7684 Volume \u53ef\u4ee5\u66f4\u5b89\u5168\u7684\u8655\u7406\uff0e\n\u5c07\u6b64\u6982\u5ff5\u878d\u5408\u5230\u524d\u8ff0\u7684 Controller \u7684\u8a71\uff0c\u908f\u8f2f\u5c31\u662f"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5075\u6e2c\u7bc0\u9ede\u662f\u5426\u51fa\u554f\u984c\uff0c\u662f\u5426\u88ab\u6a19\u793a\u70ba NotReady"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e Taint \u4f86\u6a19\u793a\u8a72\u7bc0\u9ede\u70ba OutOfService"),(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e Drain \u7684\u65b9\u5f0f\u5c07 Pod \u7d66\u9a45\u9010")),(0,a.kt)("p",null,"\u900f\u904e\u4e0a\u8ff0\u7684\u6d41\u7a0b\u5c31\u6709\u8fa6\u6cd5\u63d0\u65e9\u7684\u5c07\u640d\u6bc0\u7bc0\u9ede\u4e0a\u7684 Stateless/Stateful Pod \u76e1\u5feb\u7684\u9a45\u9010\u4f86\u964d\u4f4e\u5c0d\u670d\u52d9\u9020\u6210\u5f71\u97ff\u7684\u6642\u9593"),(0,a.kt)("h1",{id:"summary"},"Summary"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Kubernetes \u7bc0\u9ede\u640d\u58de\u6642\uff0c\u6703\u5617\u8a66\u5c07 Pod \u9032\u884c\u91cd\u65b0\u90e8\u7f72"),(0,a.kt)("li",{parentName:"ol"},"Stateless \u5927\u6982\u8981\u7b49 350 \u79d2\u5de6\u53f3\uff0c\u800cStatefulSet \u5247\u9700\u8981\u4eba\u70ba\u4ecb\u5165\u624d\u6703\u8f49\u79fb\uff0c\u5426\u5247\u6703\u5361\u6b7b Terminating"),(0,a.kt)("li",{parentName:"ol"},"Stateless \u61c9\u7528\u7a0b\u5f0f\u53ef\u4ee5\u900f\u904e Taint \u642d\u914d TolerationSeconds \u4f86\u63d0\u65e9\u9032\u884c\u8f49\u79fb"),(0,a.kt)("li",{parentName:"ol"},"StatefulSet \u53ea\u80fd\u900f\u904e Drain Node \u7684\u65b9\u5f0f\u4f86\u5f37\u8feb\u8f49\u79fb\uff0c\u4e0d\u7136\u5c31\u662f\u8981\u7b49\u7bc0\u9ede\u56de\u4f86\uff0c\u8b93 Kubelet \u80fd\u5920\u56de\u5831\u72c0\u614b"),(0,a.kt)("li",{parentName:"ol"},"\u5982\u679c StatefulSet \u6709\u642d\u914d PVC \u7684\u8a71\uff0c\u6703\u6709\u984d\u5916\u516d\u5206\u9418\u7684\u6642\u9593\u8981\u7b49\u5f85\uff0c\u6b64\u6642\u9593\u4e0d\u53ef\u4fee\u6539\uff0c\u5fc5\u9808\u8981\u4ef0\u8cf4\u65b0\u7248 KEP \u5f15\u5165\u7684 Taint \u4f86\u52a0\u901f\u4f5c\u7528")))}p.isMDXComponent=!0},60638:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/controller_commit-9713d0e9d5973236a266e18f8af7b441.png"},14762:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/github-ac76f67dd55904c5d4b6bf7e97914aa4.png"},42980:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/kubelet_config-c87c8b734c0849bc9012ba86da40bb8f.png"},93418:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/lease1-776c2328ba46be17d9f9b6e2a4bbb428.png"},17572:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/lease2-ddd7096bec2a3f70f33e6bbf8a6ce66f.png"},60036:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/taint-190535f82b718433ab836a8a14d05ba2.png"}}]);