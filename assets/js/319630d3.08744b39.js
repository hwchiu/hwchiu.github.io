"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[71399],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),r=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=r(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=r(t),m=o,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return t?a.createElement(f,l(l({ref:n},d),{},{components:t})):a.createElement(f,l({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[c]="string"==typeof e?e:o,l[1]=s;for(var r=2;r<i;r++)l[r]=t[r];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},87516:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>r});var a=t(87462),o=(t(67294),t(3905));const i={slug:"k8s-pod-affinity-2",title:"\u89e3\u5bc6 Assigning Pod To Nodes(\u4e0b)",keywords:["Kubernetes","DevOps","PodAffinity"],date:new Date("2023-08-13T01:52:57.000Z"),authors:"hwchiu",tags:["Kubernetes","DevOps"],description:"\u63a2\u8a0e Kubernetes \u5167\u5982\u4f55\u63a7\u5236 Pod \u8207\u7bc0\u9ede\u7684\u5206\u914d\u95dc\u4fc2"},l=void 0,s={unversionedId:"techPost/2023/k8s-assigning-pod-2",id:"techPost/2023/k8s-assigning-pod-2",title:"\u89e3\u5bc6 Assigning Pod To Nodes(\u4e0b)",description:"\u63a2\u8a0e Kubernetes \u5167\u5982\u4f55\u63a7\u5236 Pod \u8207\u7bc0\u9ede\u7684\u5206\u914d\u95dc\u4fc2",source:"@site/docs/techPost/2023/k8s-assigning-pod-2.md",sourceDirName:"techPost/2023",slug:"/techPost/2023/k8s-pod-affinity-2",permalink:"/docs/techPost/2023/k8s-pod-affinity-2",draft:!1,tags:[{label:"Kubernetes",permalink:"/docs/tags/kubernetes"},{label:"DevOps",permalink:"/docs/tags/dev-ops"}],version:"current",frontMatter:{slug:"k8s-pod-affinity-2",title:"\u89e3\u5bc6 Assigning Pod To Nodes(\u4e0b)",keywords:["Kubernetes","DevOps","PodAffinity"],date:"2023-08-13T01:52:57.000Z",authors:"hwchiu",tags:["Kubernetes","DevOps"],description:"\u63a2\u8a0e Kubernetes \u5167\u5982\u4f55\u63a7\u5236 Pod \u8207\u7bc0\u9ede\u7684\u5206\u914d\u95dc\u4fc2"},sidebar:"techPost",previous:{title:"Kubernetes 1.28 Sidecar Container \u521d\u9ad4\u9a57",permalink:"/docs/techPost/2023/k8s-sidecar"},next:{title:"\u89e3\u5bc6 Assigning Pod To Nodes(\u4e0a)",permalink:"/docs/techPost/2023/k8s-pod-affinity-1"}},p={},r=[{value:"Anti-Affinity",id:"anti-affinity",level:2},{value:"Affinity",id:"affinity",level:2}],d={toc:r},c="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u8981\u4f86\u63a2\u8a0e Kubernetes \u4e2d\u6709\u54ea\u4e9b\u65b9\u5f0f\u53ef\u4ee5\u7528\u4f86\u5f71\u97ff Pod \u8207 Node \u4e4b\u9593\u7684\u5206\u914d\u95dc\u4fc2\u3002"),(0,o.kt)("p",null,"\u5c0d\u74b0\u5883\u8207\u524d\u8ff0\u7ae0\u7bc0\u4e0d\u719f\u7684\u8acb\u5148\u524d\u5f80\u95b1\u8b80\u524d\u7bc7\u6587\u7ae0 ",(0,o.kt)("a",{parentName:"p",href:"https://www.hwchiu.com/k8s-assigning-pod.html"},"\u89e3\u5bc6 Assigning Pod To Nodes(\u4e0a)")),(0,o.kt)("h1",{id:"inter-pod-antiaffinity"},"Inter-Pod (Anti)Affinity"),(0,o.kt)("p",null,"Inter-Pod Affinity \u8207 Anti-Affinity \u8b93\u4f7f\u7528\u8005\u6839\u64da\u5df2\u5728\u7bc0\u9ede\u4e0a\u904b\u884c\u7684 Pod \u7684\u6a19\u7c64\u800c\u975e Node \u672c\u8eab\u7684\u6a19\u7c64\u4f86\u9650\u5236 Pod \u53ef\u4ee5\u88ab\u8abf\u5ea6\u5230\u54ea\u4e9b\u7bc0\u9ede\u4e0a\u3002"),(0,o.kt)("p",null,"\u6240\u4ee5\u6bd4\u8f03\u5c0d\u65b9\u5df2\u7d93\u4e0d\u55ae\u55ae\u662f Node \u800c\u662f Pod \u7684\u6a19\u7c64\u3002"),(0,o.kt)("p",null,"\u800c\u5be6\u4f5c\u4e0a\u66f4\u70ba\u7cbe\u6e96\u7684\u8aaa\u6cd5\uff0c\u5176\u5224\u65b7\u8207\u8abf\u5ea6\u7684\u76ee\u6a19\u5c0d\u8c61\u4e26\u4e0d\u662f\u7bc0\u9ede\uff0c\u800c\u662f\u4e00\u500b\u5206\u7fa4\u5f8c\u7684\u7d50\u679c"),(0,o.kt)("p",null,"\u8209\u4f8b\u4f86\u8aaa\uff0c\u6211\u5011\u53ef\u4ee5\u6709\u4e0b\u5217\u4e0d\u540c\u7684\u5206\u7fa4\u7d50\u679c"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/BJ5XNkE33.png",alt:null}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/BkD4V1Vhn.png",alt:null}),"\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/HykSNkNnh.png",alt:null})),(0,o.kt)("p",null,'\u5206\u7fa4\u7684\u65b9\u5f0f\u5247\u662f\u900f\u904e Node \u4e0a\u7684 label\uff0c\u900f\u904e key/value \u7684\u5f62\u5f0f\u5c07\u76f8\u540c value \u7684\u7bc0\u9ede\u7d66\u6b78\u985e\u70ba\u540c\u4e00\u7fa4\u9ad4\uff0c\u800c Key \u7684\u9078\u64c7\u5247\u662f\u900f\u904e "topologyKey" \u9019\u500b\u6b04\u4f4d\u4f86\u8a2d\u5b9a'),(0,o.kt)("p",null,"\u8209\u4f8b\u4f86\u8aaa\uff0c\u5982\u679c\u4eca\u5929\u8a2d\u5b9a\ntopologyKey = ",(0,o.kt)("inlineCode",{parentName:"p"},"kubernetes.io/hostname"),"\uff0c\u5247\u5c31\u6703\u57fa\u65bc\u7bc0\u9ede\u7684 hostname \u4f86\u5206\u7fa4\uff0c\u90a3\u56e0\u70ba\u6c92\u6709\u7bc0\u9ede\u6709\u4e00\u6a23\u7684\u540d\u7a31\uff0c\u6240\u4ee5\u56db\u500b\u7bc0\u9ede\u5c31\u6703\u81ea\u52d5\u5206\u6210\u56db\u7fa4\uff0c\u5982\u4e0a\u5716\u4e00\n\u4f46\u662f\u82e5\u63a1\u7528\ntopologyKey = ",(0,o.kt)("inlineCode",{parentName:"p"},"kind.zone"),"\uff0c\u5247\u5c31\u6703\u57fa\u65bc ",(0,o.kt)("inlineCode",{parentName:"p"},"kind.zone")," \u7684\u65b9\u5f0f\u53bb\u5206\u7fa4\uff0c\u6240\u4ee5\u5206\u7fa4\u7684\u7d50\u679c\u5c31\u6703\u5982\u540c\u4e0a\u5716\u4e8c\u6240\u793a\uff0c\u6700\u5f8c\u5206\u6210\u5169\u7fa4\u3002"),(0,o.kt)("p",null,"\u56e0\u6b64\u4f7f\u7528 Inter-Pod (Anti)Affinity \u6642\u9084\u8981\u5148\u8003\u616e\u5982\u4f55\u5c07\u7bc0\u9ede\u5206\u7fa4\uff0c\u5e38\u898b\u7684\u65b9\u6cd5\u6709"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u4ee5\u7bc0\u9ede\u7684\u540d\u7a31\u5206\u7fa4"),(0,o.kt)("li",{parentName:"ol"},"\u4ee5Zone\u7684\u5206\u7fa4\uff0c\u7279\u5225\u662f\u96f2\u7aef\u74b0\u5883\u4e2d\u5e0c\u671b\u670d\u52d9\u53ef\u4ee5\u90e8\u7f72\u5230\u4e0d\u540c\u7684 Zone \u4f86\u9054\u5230\u9ad8\u53ef\u7528\u6027\u3002")),(0,o.kt)("p",null,"\u9019\u908a\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b98\u7db2\u6709\u63d0\u5230\u82e5\u6709\u90e8\u5206\u7bc0\u9ede\u6c92\u6709 ",(0,o.kt)("inlineCode",{parentName:"p"},"topoologyKey")," \u6240\u63cf\u8ff0\u7684 Key \u90a3\u53ef\u80fd\u6703\u9020\u6210\u4e9b\u975e\u9810\u671f\u7684\u884c\u70ba\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u78ba\u4fdd\u6240\u6709\u7bc0\u9ede\u90fd\u6709\u5c0d\u61c9\u7684 Label key\u3002"),(0,o.kt)("p",null,'\u8207 NodeAffinity \u76f8\u4f3c\uff0c Inter-Pod Affinity \u4e5f\u63d0\u4f9b\u57fa\u65bc "Required" \u8207 "Preferred" \u5169\u7a2e\u4e0d\u540c\u7684\u9078\u64c7\u7b56\u7565\uff0c\u56e0\u6b64\u8a2d\u5b9a\u4e0a\u7684\u908f\u8f2f\u8207\u683c\u5f0f\u5e7e\u4e4e\u5b8c\u5168\u96f7\u540c\uff0c\u5e7e\u500b\u552f\u4e00\u7684\u5dee\u7570\u662f'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash="},'$ kubectl explain pod.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution\nKIND:     Pod\nVERSION:  v1\n\nRESOURCE: requiredDuringSchedulingIgnoredDuringExecution <[]Object>\n\nDESCRIPTION:\n     If the affinity requirements specified by this field are not met at\n     scheduling time, the pod will not be scheduled onto the node. If the\n     affinity requirements specified by this field cease to be met at some point\n     during pod execution (e.g. due to a pod label update), the system may or\n     may not try to eventually evict the pod from its node. When there are\n     multiple elements, the lists of nodes corresponding to each podAffinityTerm\n     are intersected, i.e. all terms must be satisfied.\n\n     Defines a set of pods (namely those matching the labelSelector relative to\n     the given namespace(s)) that this pod should be co-located (affinity) or\n     not co-located (anti-affinity) with, where co-located is defined as running\n     on a node whose value of the label with key <topologyKey> matches that of\n     any node on which a pod of the set of pods is running\n\nFIELDS:\n   labelSelector        <Object>\n     A label query over a set of resources, in this case pods.\n\n   namespaceSelector    <Object>\n     A label query over the set of namespaces that the term applies to. The term\n     is applied to the union of the namespaces selected by this field and the\n     ones listed in the namespaces field. null selector and null or empty\n     namespaces list means "this pod\'s namespace". An empty selector ({})\n     matches all namespaces.\n\n   namespaces   <[]string>\n     namespaces specifies a static list of namespace names that the term applies\n     to. The term is applied to the union of the namespaces listed in this field\n     and the ones selected by namespaceSelector. null or empty namespaces list\n     and null namespaceSelector means "this pod\'s namespace".\n\n   topologyKey  <string> -required-\n     This pod should be co-located (affinity) or not co-located (anti-affinity)\n     with the pods matching the labelSelector in the specified namespaces, where\n     co-located is defined as running on a node whose value of the label with\n     key topologyKey matches that of any node on which any of the selected pods\n     is running. Empty topologyKey is not allowed.\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash="},'$ kubectl explain pod.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm\nKIND:     Pod\nVERSION:  v1\n\nRESOURCE: podAffinityTerm <Object>\n\nDESCRIPTION:\n     Required. A pod affinity term, associated with the corresponding weight.\n\n     Defines a set of pods (namely those matching the labelSelector relative to\n     the given namespace(s)) that this pod should be co-located (affinity) or\n     not co-located (anti-affinity) with, where co-located is defined as running\n     on a node whose value of the label with key <topologyKey> matches that of\n     any node on which a pod of the set of pods is running\n\nFIELDS:\n   labelSelector        <Object>\n     A label query over a set of resources, in this case pods.\n\n   namespaceSelector    <Object>\n     A label query over the set of namespaces that the term applies to. The term\n     is applied to the union of the namespaces selected by this field and the\n     ones listed in the namespaces field. null selector and null or empty\n     namespaces list means "this pod\'s namespace". An empty selector ({})\n     matches all namespaces.\n\n   namespaces   <[]string>\n     namespaces specifies a static list of namespace names that the term applies\n     to. The term is applied to the union of the namespaces listed in this field\n     and the ones selected by namespaceSelector. null or empty namespaces list\n     and null namespaceSelector means "this pod\'s namespace".\n\n   topologyKey  <string> -required-\n     This pod should be co-located (affinity) or not co-located (anti-affinity)\n     with the pods matching the labelSelector in the specified namespaces, where\n     co-located is defined as running on a node whose value of the label with\n     key topologyKey matches that of any node on which any of the selected pods\n     is running. Empty topologyKey is not allowed.\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u9700\u8981\u900f\u904e ",(0,o.kt)("inlineCode",{parentName:"li"},"topologyKey")," \u4f86\u6307\u5b9a\u5982\u4f55\u5206\u7fa4\u7bc0\u9ede"),(0,o.kt)("li",{parentName:"ol"},"\u7531\u65bc\u6c7a\u7b56\u662f\u57fa\u65bc Pod \u7684 Label \u4f86\u6c7a\u5b9a\uff0c\u800c Pod \u672c\u8eab\u5be6\u969b\u4e0a\u662f\u6709 namespace \u7684\u6982\u5ff5\u7684\uff0c\u9810\u8a2d\u60c5\u6cc1\u4e0b\u53ea\u6703\u6bd4\u8f03\u76f8\u540c namespace \u7684 Pod\uff0c\u5982\u679c\u6709\u7279\u5225\u9700\u6c42\u7684\u6642\u5019\u9084\u8981\u4f7f\u7528 namespaceSelector \u6216\u662f namespace \u4f86\u9078\u5b9a\u76ee\u6a19 namespace\uff0c\u5247\u9019\u4e9b namespace \u4e0a\u7684\u6240\u6709 Pod \u90fd\u6703\u88ab\u7d0d\u5165\u8003\u91cf")),(0,o.kt)("p",null,"\u6b64\u5916 Anti-Affinity \u8207 Affinity \u5be6\u4f5c\u4e0a\u6709\u4e00\u4e9b\u95dc\u65bc\u5c0d\u7a31\u6027\u7684\u5dee\u7570\uff0c\u8a73\u7d30\u4f86\u6e90\u70ba",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/design-proposals-archive/blob/main/scheduling/podaffinity.md#a-comment-on-symmetry?WT.mc_id=AZ-MVP-5003331"},"\u5b98\u65b9\u8a2d\u8a08\u6587\u4ef6")),(0,o.kt)("p",null,"\u5c0d Anti-Affinity \u4f86\u8aaa\uff0c\u82e5\u670d\u52d9 A \u4e0d\u60f3\u8981\u8207\u670d\u52d9 B \u88ab\u8abf\u5ea6\u4e00\u8d77\uff0c\u5247\u96b1\u542b\u670d\u52d9 B \u4e5f\u4e0d\u60f3\u8981\u8ddf\u670d\u52d9A \u4e00\u8d77\uff0c\u4f46\u662f\u5c0d Affinity \u4f86\u8aaa\u5247\u6c92\u6709\u9019\u7a2e\u5c0d\u7a31\u6027\uff0c\u6240\u4ee5\u5169\u8005\u90e8\u7f72\u7684\u6f14\u7b97\u6cd5\u6709\u4e9b\u8a31\u4e0d\u540c\uff0c\u4ee5\u4e0b\u7bc0\u9304\u81ea",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/design-proposals-archive/blob/main/scheduling/podaffinity.md#a-comment-on-symmetry?WT.mc_id=AZ-MVP-5003331"},"\u5b98\u65b9\u8a2d\u8a08\u6587\u4ef6")),(0,o.kt)("p",null,"Anti-Affinity"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"if S1 has the aforementioned RequiredDuringScheduling anti-affinity rule\n    if a node is empty, you can schedule S1 or S2 onto the node\n    if a node is running S1 (S2), you cannot schedule S2 (S1) onto the node\n")),(0,o.kt)("p",null,"\u9019\u610f\u5473\u5982\u679c\u4eca\u5929\u6709\u670d\u52d9 A \u900f\u904e Anti-Affinity \u53bb\u9650\u5236\u8207 B \u7684\u8abf\u5ea6\u60c5\u6cc1\uff0c\u5247\u90e8\u7f72\u670d\u52d9 A \u6216\u662f\u670d\u52d9 B \u90fd\u6703\u53bb\u6aa2\u67e5\u662f\u5426\u6709\u9055\u53cd\u898f\u5247\uff0c\u6c92\u6709\u7684\u8a71\u5247\u96a8\u610f\u90e8\u7f72\u3002"),(0,o.kt)("p",null,"Affintiy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"if S1 has the aforementioned RequiredDuringScheduling affinity rule\n    if a node is empty, you can schedule S2 onto the node\n    if a node is empty, you cannot schedule S1 onto the node\n    if a node is running S2, you can schedule S1 onto the node\n    if a node is running S1+S2 and S1 terminates, S2 continues running\n    if a node is running S1+S2 and S2 terminates, the system terminates S1 (eventually)\n")),(0,o.kt)("p",null,"\u76f8\u540c\u7bc4\u4f8b\u4f86\u770b\uff0c\u670d\u52d9 A \u900f\u904e Affinity \u53bb\u8981\u6c42\u8207\u670d\u52d9 B \u4e00\u8d77\u7684\u8abf\u5ea6\u60c5\u6cc1\uff0c\u6839\u64da\u7b2c\u4e8c\u689d\u898f\u5247\uff0c\u82e5\u670d\u52d9 B \u4e0d\u5b58\u5728\uff0c\u5247\u670d\u52d9 A \u6703\u5361\u4f4f\u4e0d\u80fd\u8abf\u5ea6\uff0c\u8655\u65bc Pending \u72c0\u6cc1\u3002"),(0,o.kt)("h2",{id:"anti-affinity"},"Anti-Affinity"),(0,o.kt)("p",null,"\u7b2c\u4e00\u500b\u7bc4\u4f8b\u5617\u8a66\u900f\u904e ",(0,o.kt)("inlineCode",{parentName:"p"},"required")," \u4f86\u9650\u5236\u90e8\u7f72\u60c5\u6cc1\uff0c\u800c\u53c3\u7167\u5c0d\u8c61\u70ba\u81ea\u5df1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml="},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pod-affinity-1\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: pod-affinity-1\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-1\n    spec:\n      containers:\n        - name: www-server\n          image: hwchiu/netutils\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchExpressions:\n              - key: app\n                operator: In\n                values:\n                - pod-affinity-1\n            topologyKey: "kind.zone"\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u57fa\u65bc ",(0,o.kt)("inlineCode",{parentName:"li"},"kind.zone")," \u4f5c\u70ba TopologyKey "),(0,o.kt)("li",{parentName:"ol"},"\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"li"},"AntiAffinity")," \u914d\u4e0a Required\uff0c\u8981\u6c42\u540c ToplogyKey \u4e2d\u5f7c\u6b64\u4e0d\u80fd\u51fa\u73fe\u7b2c\u4e8c\u500b Pod"),(0,o.kt)("li",{parentName:"ol"},"\u90e8\u7f72\u4e09\u500b\u526f\u672c")),(0,o.kt)("p",null,"\u6839\u64da\u524d\u8ff0\u5c0d\u7a31\u6027\u6240\u63cf\u8ff0\u7684\u898f\u5247\uff0c\u82e5\u7576\u4e0b\u74b0\u5883\u6c92\u6709\u4efb\u4f55\u7b26\u5408\u898f\u5247\u7684 Pod\uff0c\u5247\u53ef\u4ee5\u96a8\u610f\u90e8\u7f72\uff0c\u6240\u4ee5\u7b2c\u4e00\u500b Pod \u53ef\u4ee5\u9806\u5229\u90e8\u7f72\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/HJVMwDEh3.png",alt:null})),(0,o.kt)("p",null,"\u7b2c\u4e8c\u500b Pod \u90e8\u7f72\u7684\u6642\u5019\u5c31\u6703\u89c0\u5bdf\u5230 Pod1 \u5df2\u7d93\u628a\u5de6\u908a\u7d66\u4f54\u64da\u4e86\uff0c\u56e0\u6b64\u53ea\u5269\u4e0b\u53f3\u908a\u8a72\u7fa4\u53ef\u7528"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/Bk8bwwVnh.png",alt:null})),(0,o.kt)("p",null,"\u7b2c\u4e09\u500b Pod \u90e8\u7f72\u7684\u6642\u5019\u56e0\u70ba\u5169\u500b\u7fa4\u4e0a\u9762\u90fd\u5df2\u7d93\u6709 Pod \u6b63\u5728\u904b\u884c\uff0c\u800c\u74b0\u5883\u4e2d\u6c92\u6709\u4efb\u4f55\u5176\u4ed6\u7b26\u5408\u689d\u4ef6\u7684\u7bc0\u9ede\u53ef\u4ee5\u7528\uff0c\u56e0\u6b64\u6700\u7d42\u5c31\u6703\u5361\u5230 Pending."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/Byx8vPEn3.png",alt:null})),(0,o.kt)("p",null,"\u7531\u7d50\u679c\u53ef\u4ee5\u89c0\u5bdf\u6839\u64da ",(0,o.kt)("inlineCode",{parentName:"p"},"TopologyKey=kind.zone")," \u4f86\u5206\u985e\uff0c\u53e2\u96c6\u4e2d\u53ea\u80fd\u5206\u5230\u5169\u7fa4\uff0c\u800c\u7b2c\u4e09\u500b Pod \u5247\u6703\u56e0\u70ba AntiAffinity + Required \u7684\u6548\u679c\u56e0\u6b64\u6c92\u6709\u8fa6\u6cd5\u88ab\u90e8\u7f72\uff0c\u6240\u4ee5\u9019\u7a2e\u4f7f\u7528\u65b9\u6cd5\u5c31\u8981\u7279\u5225\u6ce8\u610f\u526f\u672c\u6578\u91cf\u8207\u5206\u7fa4\u6578\u91cf\uff0c\u7279\u5225\u662f\u7576\u900f\u904e HPA \u4f86\u52d5\u614b\u8abf\u6574\u526f\u672c\u6642\u66f4\u5bb9\u6613\u51fa\u932f\u3002"),(0,o.kt)("p",null,"\u82e5\u5c07 ",(0,o.kt)("inlineCode",{parentName:"p"},"Rqeuired")," \u6539\u6210 ",(0,o.kt)("inlineCode",{parentName:"p"},"Prefer")," \u7684\u6982\u5ff5\u7684\u8a71\uff0c\u5247\u53ef\u4ee5\u9054\u5230\u4e00\u6a23\u5c07 Pod \u7d66\u5206\u6563\u540c\u6642\u53c8\u4e0d\u6703\u51fa\u73fe Pending \u7684\u72c0\u6cc1\uff0c\u56e0\u70ba\u6b64\u6642\u7684\u689d\u4ef6\u4e0d\u662f\u786c\u6027\u898f\u5b9a\uff0c\u800c\u662f\u53c3\u8003\u800c\u5df2\uff0c\u6240\u4ee5\u524d\u9762\u5169\u500b Pod \u90fd\u6703\u76e1\u91cf\u5206\u6563\uff0c\u800c\u7b2c\u4e09\u500b Pod \u4f9d\u7136\u6709\u80fd\u529b\u88ab\u8abf\u5ea6\u3002"),(0,o.kt)("p",null,"\u9019\u6642\u5019\u5f97\u5230\u7684\u7d50\u679c\u53ef\u80fd\u6703\u662f\u5982\u4e0b\u5716"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/BJ1n2_4n2.png",alt:null})),(0,o.kt)("p",null,"\u7b2c\u4e8c\u500b\u7bc4\u4f8b\u6e96\u5099\u5169\u500b\u6a94\u6848\uff0c\u6a21\u64ec\u670d\u52d9 A \u8207 B \u5f7c\u6b64\u4e4b\u9593\u7684 Anti-Affinity \u8a2d\u5b9a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml="},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pod-affinity-3\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: pod-affinity-3\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-3\n    spec:\n      containers:\n        - name: www-server\n          image: hwchiu/netutils\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchExpressions:\n              - key: app\n                operator: In\n                values:\n                - pod-affinity-4\n            topologyKey: "kind.zone"\n')),(0,o.kt)("p",null,"\u8a72\u7bc4\u4f8b\u7e7c\u7e8c\u4f7f\u7528 Anti-Affinity + required \u7684\u65b9\u5f0f\u4f86\u9650\u5236\uff0c\u4e0d\u904e\u9019\u6b21\u7684\u53c3\u7167\u5c0d\u8c61\u662f\u5225\u7684\u670d\u52d9 ",(0,o.kt)("inlineCode",{parentName:"p"},"pod-affinity-4"),"\uff0c\u800c\u74b0\u5883\u4e2d\u76ee\u524d\u6c92\u6709\u9019\u500b\u670d\u52d9\u51fa\u73fe"),(0,o.kt)("p",null,"\u90e8\u7f72\u4e0a\u4e0d\u6703\u51fa\u73fe\u554f\u984c\uff0c\u6240\u6709\u7684 Pod \u90fd\u53ef\u4ee5\u6b63\u5e38\u904b\u884c\uff0c\u63a5\u8005\u6211\u5011\u5617\u8a66\u90e8\u7f72\u4e00\u500b\u6c92\u6709\u4efb\u4f55 Affinity \u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"pod-affinity-4")," \u670d\u52d9"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml="},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pod-affinity-4\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: pod-affinity-4\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-4\n    spec:\n      containers:\n        - name: www-server\n          image: hwchiu/netutils\n")),(0,o.kt)("p",null,"\u53ef\u4ee5\u89c0\u5bdf\u5230\u9019\u6642\u5019 pod-affinity-4 \u9019\u500b\u670d\u52d9\u537b\u5361 Pending \u4e86\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/rJrPpdN3n.png",alt:null})),(0,o.kt)("p",null,"\u900f\u904e ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl describe")," \u53ef\u4ee5\u770b\u5230\u539f\u56e0\u70ba\u662f\u56e0\u70ba\u4e0d\u6eff\u8db3\u7576\u4e0b\u904b\u884c Pod \u7684 Anti-Affinity\u3002\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/r1OipdN22.png",alt:null})),(0,o.kt)("p",null,"\u9019\u4e5f\u662f\u8a2d\u8a08\u6587\u4ef6\u4e2d\u6240\u63cf\u8ff0\u7684\u5c0d\u7a31\u6027\uff0c\u56e0\u6b64\u5373\u4f7f\u5f8c\u7e8c\u670d\u52d9\u6c92\u6709\u7279\u5225\u64b0\u5beb Anti-Affinity\uff0c\u5176\u8abf\u5ea6\u7684\u904e\u7a0b\u4e2d\u4e5f\u6703\u6839\u64da\u7576\u4e0b\u5176\u4ed6 Pod \u7684\u8cc7\u8a0a\u4f86\u5224\u5225\u662f\u5426\u53ef\u4ee5\u8abf\u5ea6"),(0,o.kt)("h2",{id:"affinity"},"Affinity"),(0,o.kt)("p",null,"\u63a5\u4e0b\u4f86\u57fa\u65bc\u76f8\u540c\u6982\u5ff5\u4f86\u6e2c\u8a66 Affinity\uff0c\u670d\u52d9 A \u4f9d\u8cf4\u65bc \u670d\u52d9 B(pod-affinity-6)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml="},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pod-affinity-5\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app: pod-affinity-5\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-5\n    spec:\n      containers:\n        - name: www-server\n          image: hwchiu/netutils\n      affinity:\n        podAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchExpressions:\n              - key: app\n                operator: In\n                values:\n                - pod-affinity-6\n            topologyKey: "kind.zone"\n')),(0,o.kt)("p",null,"\u8207 ",(0,o.kt)("inlineCode",{parentName:"p"},"Anti-Affinity")," \u4e0d\u540c\uff0c\u82e5\u7576\u4e0b\u627e\u4e0d\u5230\u76ee\u6a19\u670d\u52d9\uff0c ",(0,o.kt)("inlineCode",{parentName:"p"},"Affinity")," \u5247\u6703\u5361\u5728 Pending \u7684\u72c0\u6cc1\uff0c\u6c92\u6709\u8fa6\u6cd5\u90e8\u7f72\u3002\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/SkZ1JtEn2.png",alt:null})),(0,o.kt)("p",null,"\u8a3b: \u82e5\u53c3\u8003\u5c0d\u8c61\u662f\u81ea\u5df1\u5247\u70ba\u7279\u6b8a\u60c5\u6cc1\uff0c\u4e0d\u6703\u6709 Pending \u7684\u60c5\u6cc1\u767c\u751f\uff0c\u5426\u5247\u6703\u6709 deadlock \u7684\u60c5\u5f62\u51fa\u73fe\u3002"),(0,o.kt)("p",null,"\u63a5\u4e0b\u4f86\u90e8\u7f72\u670d\u52d9 B"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml="},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: pod-affinity-6\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: pod-affinity-6\n  template:\n    metadata:\n      labels:\n        app: pod-affinity-6\n    spec:\n      containers:\n        - name: www-server\n          image: hwchiu/netutils\n")),(0,o.kt)("p",null,"\u90e8\u7f72\u4e0b\u53bb\u5f8c\u53ef\u4ee5\u89c0\u5bdf\u5230\u670d\u52d9 A \u8207 B \u5e7e\u4e4e\u540c\u6642\u9806\u5229\u5b8c\u6210\u8abf\u5ea6\u7684\u6c7a\u7b56\uff0c\u4e00\u8d77\u88ab\u5206\u914d\u5230\u76f8\u540c\u7684 kind.zone \u5167\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/HkKllKE23.png",alt:null})),(0,o.kt)("p",null,"\u4ee5\u904e\u7a0b\u4e2d\u4f86\u8aaa\uff0c\u6700\u521d\u7684\u670d\u52d9 A \u56e0\u70ba\u627e\u4e0d\u5230\u670d\u52d9 B \u53ef\u4ee5\u5339\u914d\uff0c\u6240\u4ee5\u5168\u90e8\u5361 Pending \u7684\u72c0\u6cc1\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/r1DebtNhh.png",alt:null})),(0,o.kt)("p",null,"\u800c\u670d\u52d9 B \u672c\u8eab\u6c92\u6709\u63cf\u8ff0\u4efb\u4f55 Affinity \u7684\u898f\u5247\uff0c\u56e0\u6b64\u672c\u8eab\u9806\u5229\u88ab\u8abf\u5ea6\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/SJzbWt432.png",alt:null})),(0,o.kt)("p",null,"\u7576\u670d\u52d9 B \u88ab\u8abf\u5ea6\u5230 kind.zone=zone1 \u5f8c\uff0c\u6240\u6709\u5361\u4f4f\u7684\u670d\u52d9 A \u5c31\u6709\u53c3\u7167\u5c0d\u8c61\u53ef\u4ee5\u6bd4\u8f03\uff0c\u6240\u5df2\u5168\u90e8 Pod \u5c31\u76f4\u63a5\u90e8\u7f72\u4e0a\u53bb\u4e86\u3002\n",(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/HkJzWtVn3.png",alt:null})),(0,o.kt)("h1",{id:"podtopologyspread"},"PodTopologySpread"),(0,o.kt)("p",null,"\u524d\u8ff0\u6240\u63a2\u8a0e\u7684 NodeAffinity \u4ee5\u53ca Inter-Pod (Anti)Affinity \u53ef\u4ee5\u6eff\u8db3\u8a31\u591a\u4eba\u63a7\u5236 Pod \u8abf\u5ea6\u7684\u9700\u6c42\uff0c\u7136\u800c\u5be6\u969b\u4f7f\u7528\u4e0a\u6703\u9047\u5230\u4e00\u4e9b\u554f\u984c"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u900f\u904e NodeAffinity \u4e26\u6c92\u6709\u4fdd\u8b49 Pod \u53ef\u4ee5\u5747\u52fb\u7684\u5206\u6563\u5230\u5404\u7bc0\u9ede\u4e0a\uff0c\u6709\u53ef\u80fd\u6703\u9047\u5230\u5206\u4f48\u4e0d\u5747\u52fb\u7684\u60c5\u6cc1 (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kubernetes/issues/68981?WT.mc_id=AZ-MVP-5003331"},"66981"),")"),(0,o.kt)("li",{parentName:"ol"},"Inter-Pod Anti Affinity \u78b0\u5230 Deployment rolling upgrade \u6642\u6703\u51fa\u554f\u984c\uff0c\u65b0\u7684 Pod \u8981\u5148\u88ab\u5275\u7acb\u4f46\u662f\u56e0\u70ba Anti-Affinity \u7684\u9650\u5236\u5c0e\u81f4\u6c92\u6709\u7bc0\u9ede\u53ef\u7528\uff0c\u6240\u4ee5\u65b0\u7248\u672c\u7684 Pod \u5c31\u6703\u8655\u65bc Pending \u800c\u6574\u500b Deployment \u66f4\u65b0\u5c31\u6703\u5361\u6b7b ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kubernetes/issues/40358?WT.mc_id=AZ-MVP-5003331"},"40358"))),(0,o.kt)("p",null,"\u56e0\u70ba\u4e0a\u8ff0\u554f\u984c\u6240\u4ee5\u5c31\u6709\u4e86 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/enhancements/tree/master/keps/sig-scheduling/895-pod-topology-spread#motivation"},"Pod Topology Spread")," \u7684\u767c\u5c55\uff0c\u800c\u6574\u500b ",(0,o.kt)("inlineCode",{parentName:"p"},"Pod Topology Spread")," \u4e2d\u6700\u91cd\u8981\u7684\u4e00\u500b\u56e0\u7d20\u5c31\u7a31\u70ba Skew\uff0c\u8a72\u6578\u503c\u662f\u7528\u4f86\u8655\u7406 Pod \u5206\u914d\u4e0d\u5747\u52fb\u7684\u554f\u984c\uff0c\u5176\u5b9a\u7fa9\u70ba\u3002"),(0,o.kt)("p",null,"skew = Pods number matched in current topology - min Pods matches in a topology"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PodTopologySpread")," \u6bcf\u6b21\u5206\u914d Pod \u7684\u6642\u5019\u90fd\u6703\u91dd\u5c0d\u6bcf\u500b\u7bc0\u9ede\u8a08\u7b97\u7576\u4e0b\u7684 Skew \u6578\u503c\u4e26\u4e14\u4ee5\u6578\u503c\u4f86\u5f71\u97ff\u8abf\u5ea6\u7684\u6c7a\u7b56\u3002"),(0,o.kt)("p",null,"\u4ee5\u4e0b\u5716\u70ba\u7bc4\u4f8b"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://hackmd.io/_uploads/SkWAL7S33.png",alt:null})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"topologyKey")," \u5c07\u7bc0\u9ede\u5206\u6210\u4e09\u7fa4"),(0,o.kt)("li",{parentName:"ol"},"\u6bcf\u500b\u7fa4\u4e0a\u9762\u76ee\u524d\u904b\u884c\u7684 Pod \u6578\u91cf\u5206\u5225\u70ba ",(0,o.kt)("inlineCode",{parentName:"li"},"3,2,1")),(0,o.kt)("li",{parentName:"ol"},"\u7fa4\u4e2d\u6700\u5c11\u7684\u904b\u884c Pod \u6578\u91cf\u70ba 1"),(0,o.kt)("li",{parentName:"ol"},"\u5206\u5225\u8a08\u7b97\u53ef\u4ee5\u5f97\u5230\u6bcf\u7fa4\u5c0d\u61c9\u7684 Skew \u6578\u503c\u70ba 2,1,0")),(0,o.kt)("p",null,"\u4e0b\u5217\u662f\u900f\u904e ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl explain")," \u5f97\u5230\u7684\u6b04\u4f4d\u4ecb\u7d39\uff0c\u7531\u65bc\u7bc7\u5e45\u904e\u7a0b\u6240\u4ee5\u53ea\u4fdd\u7559\u91cd\u9ede\u6b04\u4f4d\uff0c\u5be6\u969b\u4e0a\u9084\u6709\u5f88\u591a\u9078\u9805\u4e0d\u904e\u90e8\u5206\u9078\u9805\u5373\u4f7f\u5230 v1.26 \u90fd\u9084\u662f Beta \u6e2c\u8a66"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash="},'$ kubectl explain pod.spec.topologySpreadConstraints\nKIND:     Pod\nVERSION:  v1\n\nRESOURCE: topologySpreadConstraints <[]Object>\n\nDESCRIPTION:\n     TopologySpreadConstraints describes how a group of pods ought to spread\n     across topology domains. Scheduler will schedule pods in a way which abides\n     by the constraints. All topologySpreadConstraints are ANDed.\n\n     TopologySpreadConstraint specifies how to spread matching pods among the\n     given topology.\n\nFIELDS:\n   labelSelector        <Object>\n     LabelSelector is used to find matching pods. Pods that match this label\n     selector are counted to determine the number of pods in their corresponding\n     topology domain.\n\n   maxSkew      <integer> -required-\n     MaxSkew describes the degree to which pods may be unevenly distributed.\n     required field. Default value is 1 and 0 is not allowed.\n\n\n   topologyKey  <string> -required-\n     TopologyKey is the key of node labels. Nodes that have a label with this\n     key and identical values are considered to be in the same topology. We\n     consider each <key, value> as a "bucket", and try to put balanced number of\n     pods into each bucket. \n\n   whenUnsatisfiable    <string> -required-\n     WhenUnsatisfiable indicates how to deal with a pod if it doesn\'t satisfy\n     Possible enum values:\n     - `"DoNotSchedule"` instructs the scheduler not to schedule the pod when\n     constraints are not satisfied.\n     - `"ScheduleAnyway"` instructs the scheduler to schedule the pod even if\n     constraints are not satisfied.\n')),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"maxSkew \u5247\u662f\u7528\u4f86\u63a7\u5236 skew \u7684\u4e0a\u9650\u503c\uff0c\u82e5 Pod \u90e8\u7f72\u5230\u8a72\u7bc0\u9ede\u5f8c\u6703\u4f7f\u5f97 Skew \u8d85\u904e\u6b64\u9650\u5236\uff0c\u5247\u8a72\u7bc0\u9ede\u5c31\u6703\u88ab\u8df3\u904e"),(0,o.kt)("li",{parentName:"ol"},"topologyKey \u5982\u540c Inter-Pod \u7684\u8a2d\u5b9a\uff0c\u7528\u4f86\u5224\u5b9a\u5982\u4f55\u5206\u985e\u7bc0\u9ede"),(0,o.kt)("li",{parentName:"ol"},"whenUnsatisfiable \u5247\u662f\u7528\u4f86\u8a2d\u5b9a\u7576 maxSkew \u627e\u4e0d\u5230\u4efb\u4f55\u7b26\u5408\u898f\u5247\u7bc0\u9ede\u6642\u8a72\u600e\u8655\u7406\uff0c\u53ef\u4ee5\u5361\u5728 Pending \u72c0\u614b\u6216\u662f\u5c31\u5ffd\u7565\u7576\u524d\u8a2d\u5b9a\u6309\u7167\u5176\u4ed6\u8a2d\u5b9a\u90e8\u7f72"),(0,o.kt)("li",{parentName:"ol"},"labelSelector \u5247\u662f\u7528\u4f86\u9078\u64c7\u8981\u628a\u54ea\u4e9b Pod \u7684\u6578\u91cf\u7d0d\u5165\u8003\u616e")),(0,o.kt)("p",null,"\u56e0\u6b64\u4f7f\u7528\u4e0a\u5f88\u5e38\u900f\u904e\u4e0b\u5217\u65b9\u5f0f\u8b93 Pod \u53ef\u4ee5\u5747\u52fb\u5730\u6563\u843d\u5230\u4e0d\u540c\u7684 Zone \u5167"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml="},"spec:\n  containers:\n    - name: www-server\n      image: hwchiu/netutils\n  topologySpreadConstraints:\n  - maxSkew: 1\n    topologyKey: kind.zone\n    whenUnsatisfiable: DoNotSchedule\n    labelSelector:\n      matchLabels:\n        app: pod-ts-1\n")),(0,o.kt)("p",null,"\u5982\u679c\u8981\u7d30\u90e8\u8abf\u6574\u73fe\u5728\u9084\u6709\u4e0b\u5217\u53c3\u6578\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f7f\u7528\u524d\u8acb\u53c3\u95b1",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/#example-one-topologyspreadconstraint"},"\u5b98\u65b9\u6587\u4ef6")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"nodeAffinityPolicy: ","[Honor|Ignore]"),(0,o.kt)("li",{parentName:"ol"},"nodeTaintsPolicy: ","[Honor|Ignore]"),(0,o.kt)("li",{parentName:"ol"},"matchLabelKeys: list"),(0,o.kt)("li",{parentName:"ol"},"minDomains: integer")),(0,o.kt)("h1",{id:"summary"},"Summary"),(0,o.kt)("p",null,"\u672c\u7cfb\u5217\u6587\u63a2\u8a0e\u5982\u4f55\u900f\u904e Kubernetes \u5167\u5efa\u7684\u65b9\u5f0f\u4f86\u5f71\u97ff Scheduler \u8abf\u5ea6\u7684\u6c7a\u7b56\uff0c\u9019\u985e\u578b\u7684\u8a2d\u5b9a\u80fd\u5920\u65bc Zone/Region \u7b49\u67b6\u69cb\u4e0b\u9054\u5230\u66f4\u597d\u7684\u9ad8\u53ef\u7528\u6027\u8a2d\u5b9a\uff0c\u6b64\u5916\u82e5 Pod \u4e4b\u9593\u6709\u5f37\u70c8\u4f9d\u8cf4\u4e14\u5e0c\u671b\u7db2\u8def\u5ef6\u9072\u76e1\u53ef\u80fd\u4f4e\u7684\uff0c\u4e5f\u53ef\u4ee5\u8003\u616e\u7528\u9019\u985e\u578b\u7684\u8a2d\u5b9a\u4f86\u8655\u7406\u3002"),(0,o.kt)("p",null,"\u4f7f\u7528\u4e0a\u8acb\u52d9\u5fc5\u78ba\u4fdd\u7406\u89e3\u6bcf\u500b\u6b04\u4f4d\u7684\u610f\u601d\uff0c\u7279\u5225\u662f\u7576\u53c3\u6578\u672c\u8eab\u70ba List \u578b\u614b\u7684\u6642\u5019\uff0c\u8981\u78ba\u8a8d\u4e00\u4e0b\u5176\u7d50\u679c\u662f\u57fa\u65bc OR \u6216\u662f AND \u7684\u904b\u7b97\uff0c\u4ee5\u514d\u767c\u751f\u7d50\u679c\u8207\u9810\u671f\u4e0d\u7b26\u5c0e\u81f4\u82b1\u8cbb\u592a\u591a\u6642\u9593\u9664\u932f\u3002"))}u.isMDXComponent=!0}}]);