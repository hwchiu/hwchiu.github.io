"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[66702],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),k=a,d=m["".concat(i,".").concat(k)]||m[k]||u[k]||l;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=k;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},72430:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const l={title:"CNI - Flannel - IP \u7ba1\u7406\u7bc7",sidebar_position:14,date:new Date("2019-09-30T04:44:27.000Z"),tags:["CNI","Kubernetes","Flannel","Network","iThome"],description:"\u672c\u7bc7\u6587\u7ae0\u91dd\u5c0d flannel \u5982\u4f55\u7ba1\u7406 IP \u5730\u5740\u7684\u4e8b\u60c5\u9032\u884c\u63a2\u8a0e\u8207\u7814\u7a76\uff0c\u8a31\u591a\u4eba\u521d\u6b21\u4f7f\u7528 kubeadm \u5b89\u88dd flannel \u7684\u6642\u5019\u90fd\u66fe\u7d93\u56e0\u70ba\u5fd8\u8a18\u52a0\u4e0a --pod-net-cidr \u7b49\u53c3\u6578\u5c0e\u81f4\u5b89\u88dd\u5931\u6557\uff0c\u800c\u9019\u7bc7\u6587\u7ae0\u5c31\u6703\u4f86\u63a2\u8a0e\u9019\u500b\u53c3\u6578\u7684\u610f\u7fa9\uff0c\u70ba\u4ec0\u9ebc\u9700\u8981\u9019\u500b\u53c3\u6578\uff0c\u540c\u6642\u642d\u914d\u524d\u8ff0\u5df2\u7d93\u5206\u4eab\u904e\u7684 IPAM \u7ba1\u7406\uff0c\u4f86\u91cd\u65b0\u4ed4\u7d30\u89c0\u5bdf flannel \u7684\u904b\u4f5c\u904e\u7a0b"},o="\u524d\u8a00",s={unversionedId:"techPost/2019/iThome_Challenge/cni-flannel-ii",id:"techPost/2019/iThome_Challenge/cni-flannel-ii",title:"CNI - Flannel - IP \u7ba1\u7406\u7bc7",description:"\u672c\u7bc7\u6587\u7ae0\u91dd\u5c0d flannel \u5982\u4f55\u7ba1\u7406 IP \u5730\u5740\u7684\u4e8b\u60c5\u9032\u884c\u63a2\u8a0e\u8207\u7814\u7a76\uff0c\u8a31\u591a\u4eba\u521d\u6b21\u4f7f\u7528 kubeadm \u5b89\u88dd flannel \u7684\u6642\u5019\u90fd\u66fe\u7d93\u56e0\u70ba\u5fd8\u8a18\u52a0\u4e0a --pod-net-cidr \u7b49\u53c3\u6578\u5c0e\u81f4\u5b89\u88dd\u5931\u6557\uff0c\u800c\u9019\u7bc7\u6587\u7ae0\u5c31\u6703\u4f86\u63a2\u8a0e\u9019\u500b\u53c3\u6578\u7684\u610f\u7fa9\uff0c\u70ba\u4ec0\u9ebc\u9700\u8981\u9019\u500b\u53c3\u6578\uff0c\u540c\u6642\u642d\u914d\u524d\u8ff0\u5df2\u7d93\u5206\u4eab\u904e\u7684 IPAM \u7ba1\u7406\uff0c\u4f86\u91cd\u65b0\u4ed4\u7d30\u89c0\u5bdf flannel \u7684\u904b\u4f5c\u904e\u7a0b",source:"@site/docs/techPost/2019/iThome_Challenge/cni-flannel-ii.md",sourceDirName:"techPost/2019/iThome_Challenge",slug:"/techPost/2019/iThome_Challenge/cni-flannel-ii",permalink:"/docs/techPost/2019/iThome_Challenge/cni-flannel-ii",draft:!1,tags:[{label:"CNI",permalink:"/docs/tags/cni"},{label:"Kubernetes",permalink:"/docs/tags/kubernetes"},{label:"Flannel",permalink:"/docs/tags/flannel"},{label:"Network",permalink:"/docs/tags/network"},{label:"iThome",permalink:"/docs/tags/i-thome"}],version:"current",sidebarPosition:14,frontMatter:{title:"CNI - Flannel - IP \u7ba1\u7406\u7bc7",sidebar_position:14,date:"2019-09-30T04:44:27.000Z",tags:["CNI","Kubernetes","Flannel","Network","iThome"],description:"\u672c\u7bc7\u6587\u7ae0\u91dd\u5c0d flannel \u5982\u4f55\u7ba1\u7406 IP \u5730\u5740\u7684\u4e8b\u60c5\u9032\u884c\u63a2\u8a0e\u8207\u7814\u7a76\uff0c\u8a31\u591a\u4eba\u521d\u6b21\u4f7f\u7528 kubeadm \u5b89\u88dd flannel \u7684\u6642\u5019\u90fd\u66fe\u7d93\u56e0\u70ba\u5fd8\u8a18\u52a0\u4e0a --pod-net-cidr \u7b49\u53c3\u6578\u5c0e\u81f4\u5b89\u88dd\u5931\u6557\uff0c\u800c\u9019\u7bc7\u6587\u7ae0\u5c31\u6703\u4f86\u63a2\u8a0e\u9019\u500b\u53c3\u6578\u7684\u610f\u7fa9\uff0c\u70ba\u4ec0\u9ebc\u9700\u8981\u9019\u500b\u53c3\u6578\uff0c\u540c\u6642\u642d\u914d\u524d\u8ff0\u5df2\u7d93\u5206\u4eab\u904e\u7684 IPAM \u7ba1\u7406\uff0c\u4f86\u91cd\u65b0\u4ed4\u7d30\u89c0\u5bdf flannel \u7684\u904b\u4f5c\u904e\u7a0b"},sidebar:"techPost",previous:{title:"CNI - Flannel - \u5b89\u88dd\u8a2d\u5b9a\u7bc7",permalink:"/docs/techPost/2019/iThome_Challenge/cni-flannel-i"},next:{title:"CNI - Flannel - VXLAN \u5c01\u5305\u904b\u4f5c\u7bc7",permalink:"/docs/techPost/2019/iThome_Challenge/cni-flannel-iii"}},i={},p=[{value:"Workflow",id:"workflow",level:2},{value:"kubeadm",id:"kubeadm-1",level:2},{value:"Pod Flannel",id:"pod-flannel",level:2},{value:"CNI Flannel",id:"cni-flannel",level:2}],c={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,a.kt)("p",null,"\u524d\u7bc7\u6587\u7ae0\u6211\u5011\u63a2\u8a0e\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u7684\u5b89\u88dd\u904e\u7a0b\uff0c\u5305\u542b\u4e86\u76f8\u95dc\u7684 ",(0,a.kt)("strong",{parentName:"p"},"RBAC/PSP")," \u5b89\u5168\u6027\u8a2d\u5b9a\uff0c\u653e\u7f6e\u76f8\u95dc\u8a2d\u5b9a\u6a94\u6848\u7684 ",(0,a.kt)("strong",{parentName:"p"},"ConfigMap")," \u4ee5\u53ca\u6700\u5f8c\u904b\u884c\u6574\u500b\u904b\u7b97\u908f\u8f2f\u7684 ",(0,a.kt)("strong",{parentName:"p"},"DaemonSet"),"\u3002"),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u672c\u7bc7\u6587\u7ae0\u5c07\u4f86\u63a2\u8a0e ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u662f\u600e\u9ebc\u8655\u7406 ",(0,a.kt)("strong",{parentName:"p"},"IP"),"\u5206\u914d\u7684\u554f\u984c\u3002"),(0,a.kt)("h1",{id:"\u74b0\u5883\u5efa\u7f6e"},"\u74b0\u5883\u5efa\u7f6e"),(0,a.kt)("p",null,"\u70ba\u4e86\u642d\u5efa\u4e00\u500b\u64c1\u6709\u4e09\u500b\u7bc0\u9ede\u7684 kubernetes cluster\uff0c\u6211\u8a8d\u70ba\u76f4\u63a5\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"kubernetes-dind-cluster")," \u662f\u500b\u6eff\u4e0d\u932f\u7684\u9078\u64c7\uff0c\u53ef\u4ee5\u5feb\u901f\u642d\u5efa\u74b0\u5883\uff0c\u53c8\u6709\u591a\u7bc0\u9ede\u3002"),(0,a.kt)("p",null,"\u6216\u662f\u4e5f\u53ef\u4ee5\u571f\u6cd5\u7149\u92fc\u7e7c\u7e8c\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"kubeadm")," \u7684\u65b9\u5f0f\u5275\u5efa\u591a\u7bc0\u9ede\u7684 kubernetes cluster\uff0c \u9019\u90e8\u5206\u4e26\u6c92\u6709\u7279\u5225\u898f\u5b9a\uff0c\u7e3d\u4e4b\u80fd\u642d\u5efa\u8d77\u4f86\u5373\u53ef\u3002"),(0,a.kt)("p",null,"\u6b64\u5916\u76f8\u95dc\u7684\u7248\u672c\u8cc7\u8a0a\u65b9\u9762"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"kubernetes version:v1.15.4"),(0,a.kt)("li",{parentName:"ul"},"flannel: \u4f7f\u7528",(0,a.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"},"\u5b98\u65b9\u5b89\u88dd Yaml")),(0,a.kt)("li",{parentName:"ul"},"kubeadm \u5b89\u88dd\u904e\u7a0b\u4f7f\u7528\u7684\u53c3\u6578 ",(0,a.kt)("strong",{parentName:"li"},"--pod-network-cidr=10.244.0.0/16"))),(0,a.kt)("h1",{id:"kubeadm"},"Kubeadm"),(0,a.kt)("p",null,"\u6240\u6709\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"kubeadm")," \u5b89\u88dd\u904e ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u90fd\u9047\u904e\u9700\u8981\u8a2d\u5b9a ",(0,a.kt)("strong",{parentName:"p"},"--pod-network-cidr")," \u7684\u60c5\u6cc1\uff0c\u4f46\u662f\u5230\u5e95\u9019\u500b\u53c3\u6578\u80cc\u5f8c\u505a\u4e86\u4ec0\u9ebc\uff0c\u4ee5\u53ca\u70ba\u4ec0\u9ebc ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u6703\u9700\u8981\u9019\u500b\u53c3\u6578? \u63a5\u4e0b\u4f86\u5c31\u4f86\u7814\u7a76\u4e00\u4e0b"),(0,a.kt)("h2",{id:"workflow"},"Workflow"),(0,a.kt)("p",null,"\u76f4\u63a5\u5148\u8b1b\u7d50\u8ad6\uff0c\u5f9e\u7d50\u8ad6\u8b1b\u8d77\u518d\u4f86\u8b1b\u6d41\u7a0b\u6703\u6bd4\u8f03\u6e05\u695a\u3002"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"kubernetes")," \u6703\u91dd\u5c0d\u6bcf\u500b ",(0,a.kt)("strong",{parentName:"li"},"node")," \u53bb\u6a19\u793a\u4e00\u500b\u540d\u70ba ",(0,a.kt)("strong",{parentName:"li"},"PodCIDR")," \u7684\u503c\uff0c\u4ee3\u8868\u8a72 ",(0,a.kt)("strong",{parentName:"li"},"Node")," \u53ef\u4ee5\u4f7f\u7528\u7684\u7db2\u6bb5\u662f\u4ec0\u9ebc\uff0c"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"flannel")," \u7684 Pod \u6703\u53bb\u8b80\u53d6\u8a72\u8cc7\u8a0a\uff0c\u4e26\u4e14\u5c07\u8a72\u8cc7\u8a0a\u5beb\u9053 ",(0,a.kt)("strong",{parentName:"li"},"/run/flannel/subnet.env")," \u7684\u9019\u500b\u6a94\u6848\u4e2d"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"flannel CNI")," \u6536\u5230\u4efb\u4f55\u5275\u5efa ",(0,a.kt)("strong",{parentName:"li"},"Pod")," \u7684\u8acb\u6c42\u6642\uff0c\u6703\u53bb\u8b80\u53d6 ",(0,a.kt)("strong",{parentName:"li"},"/run/flannel/subnet.env")," \u7684\u8cc7\u8a0a\uff0c\u4e26\u4e14\u5c07\u5176\u5167\u5bb9\u8f49\u63db\u6700\u5f8c\u547c\u53eb ",(0,a.kt)("strong",{parentName:"li"},"host-local")," \u9019\u96bb ",(0,a.kt)("strong",{parentName:"li"},"IPAM CNI"),"\uff0c\u4f86\u53d6\u5f97\u53ef\u4ee5\u7528\u7684 ",(0,a.kt)("strong",{parentName:"li"},"IP")," \u4e26\u4e14\u8a2d\u5b9a\u5230 ",(0,a.kt)("strong",{parentName:"li"},"POD")," \u8eab\u4e0a")),(0,a.kt)("p",null,"\u76f8\u95dc\u6a94\u6848\u9a57\u8b49"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},'$ kubectl describe nodes | grep PodCIDR\nPodCIDR:                     10.244.0.0/24\nPodCIDR:                     10.244.1.0/24\nPodCIDR:                     10.244.2.0/24\n\n$ sudo cat /run/flannel/subnet.env\nFLANNEL_NETWORK=10.244.0.0/16\nFLANNEL_SUBNET=10.244.0.1/24\nFLANNEL_MTU=1450\nFLANNEL_IPMASQ=true\n\n$ sudo ls /var/lib/cni/networks/cbr0\n10.244.0.2  10.244.0.3  10.244.0.8  last_reserved_ip.0  lock\n\n$ sudo cat /var/lib/cni/networks/cbr0/10.244.0.8\n2d39d5afb81e56314a7fd6bdd57c9ccf6d02c32b556273cfb6b9bb8a248c851b\n\n$ sudo docker ps  --no-trunc | grep $(sudo cat /var/lib/cni/networks/cbr0/10.244.0.8)\n2d39d5afb81e56314a7fd6bdd57c9ccf6d02c32b556273cfb6b9bb8a248c851b   k8s.gcr.io/pause:3.1 "/pause" Up 4 hours  k8s_POD_k8s-udpserver-6576555bcb-7h8jh_default_87196597-ccda-4643-ac5d-85343a3b6c90_0\n')),(0,a.kt)("p",null,"\u5148\u6839\u64da\u4e0a\u9762\u7684\u6307\u4ee4\u89e3\u91cb\u4e00\u4e0b\u6bcf\u500b\u7684\u542b\u7fa9\uff0c\u63a5\u4e0b\u4f86\u518d\u4f86\u7814\u7a76\u5176\u6d41\u7a0b"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u900f\u904e ",(0,a.kt)("strong",{parentName:"li"},"kubectl describe node")," \u53ef\u4ee5\u89c0\u5bdf\u5230\u6bcf\u500b\u7bc0\u9ede\u4e0a\u90fd\u6709\u4e00\u500b ",(0,a.kt)("strong",{parentName:"li"},"PodCIDR")," \u7684\u6b04\u4f4d\uff0c\u4ee3\u8868\u7684\u662f\u8a72\u7bc0\u9ede\u53ef\u4ee5\u4f7f\u7528\u7684\u7db2\u6bb5"),(0,a.kt)("li",{parentName:"ol"},"\u7531\u65bc\u6211\u7684\u7bc0\u9ede\u662f\u5c0d\u61c9\u5230\u7684 ",(0,a.kt)("strong",{parentName:"li"},"PodCIDR")," \u662f ",(0,a.kt)("strong",{parentName:"li"},"10.244.0.0/24"),"\uff0c\u63a5\u4e0b\u4f86\u53bb\u89c0\u5bdf  ",(0,a.kt)("strong",{parentName:"li"},"/run/flannel/subnet.env"),"\uff0c\u78ba\u8a8d\u88e1\u9762\u7684\u6578\u503c\u4e00\u81f4\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u63a5\u4e0b\u4f86\u7531\u65bc\u6211\u7684\u7cfb\u7d71\u4e0a\u6709\u8dd1\u904e\u4e00\u4e9b ",(0,a.kt)("strong",{parentName:"li"},"Pod"),"\uff0c\u9019\u4e9b ",(0,a.kt)("strong",{parentName:"li"},"Pod")," \u5f62\u6210\u7684\u904e\u7a0b\u4e2d\u6703\u547c\u53eb ",(0,a.kt)("strong",{parentName:"li"},"flannel CNI")," \u4f86\u8655\u7406\uff0c\u800c\u8a72 ",(0,a.kt)("strong",{parentName:"li"},"CNI")," \u6700\u5f8c\u6703\u518d\u8f3e\u8f49\u547c\u53eb ",(0,a.kt)("strong",{parentName:"li"},"host-local IPAM CNI")," \u4f86\u8655\u7406\uff0c\u6240\u4ee5\u5c31\u6703\u5728\u9019\u908a\u770b\u5230\u6709 ",(0,a.kt)("strong",{parentName:"li"},"host-local")," \u7684\u7522\u7269"),(0,a.kt)("li",{parentName:"ol"},"\u7531\u65bc\u524d\u7bc7\u4ecb\u7d39 ",(0,a.kt)("strong",{parentName:"li"},"IPAM")," \u7684\u6587\u7ae0\u6709\u4ecb\u7d39\u904e ",(0,a.kt)("strong",{parentName:"li"},"host-local")," \u7684\u904b\u4f5c\uff0c\u8a72\u6a94\u6848\u7684\u5167\u5bb9\u5247\u662f\u5c0d\u61c9\u7684 ",(0,a.kt)("strong",{parentName:"li"},"CONTAINER_ID"),"\uff0c\u56e0\u6b64\u9019\u908a\u5f97\u5230\u7684\u4e5f\u662f ",(0,a.kt)("strong",{parentName:"li"},"CONTAINER_ID")),(0,a.kt)("li",{parentName:"ol"},"\u6700\u5f8c\u5247\u662f\u900f\u904e ",(0,a.kt)("strong",{parentName:"li"},"docker")," \u6307\u4ee4\u53bb\u5c0b\u8a72 ",(0,a.kt)("strong",{parentName:"li"},"CONTAINER_ID"),"\uff0c\u6700\u5f8c\u5c31\u770b\u5230\u5c0d\u61c9\u5230\u7684\u4e0d\u662f\u771f\u6b63\u904b\u884c\u7684 ",(0,a.kt)("strong",{parentName:"li"},"Pod"),"\uff0c\u800c\u662f\u5148\u524d\u4ecb\u7d39\u904e\u7684 ",(0,a.kt)("strong",{parentName:"li"},"Infrastructure Container: Pause"))),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u5c31\u662f\u7d30\u8ac7\u4e0a\u8ff0\u7684\u6d41\u7a0b"),(0,a.kt)("h2",{id:"kubeadm-1"},"kubeadm"),(0,a.kt)("p",null,"\u9996\u5148\u662f ",(0,a.kt)("strong",{parentName:"p"},"kubeadm")," \u8207 ",(0,a.kt)("strong",{parentName:"p"},"controller-manager")," \u5169\u8005\u7684\u95dc\u4fc2\uff0c\u7576\u6211\u5011\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"--pod-network-cidr")," \u53bb\u521d\u59cb\u5316 ",(0,a.kt)("strong",{parentName:"p"},"kubeadm")," \u5f8c\uff0c\u5176\u5275\u9020\u51fa\u4f86\u7684 ",(0,a.kt)("strong",{parentName:"p"},"controller-manager")," \u5c31\u6703\u81ea\u5e36\u4e09\u500b\u53c3\u6578"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},"root     20459  0.8  2.4 217504 100076 ?       Ssl  05:22   0:36 kube-controller-manager\n--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf\n--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf\n--bind-address=127.0.0.1\n--client-ca-file=/etc/kubernetes/pki/ca.crt\n--cluster-cidr=10.244.0.0/16\n--node-cidr-mask-size=24\n--allocate-node-cidrs=true\n--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt\n--cluster-signing-key-file=/etc/kubernetes/pki/ca.key\n--controllers=*,bootstrapsigner,tokencleaner\n--kubeconfig=/etc/kubernetes/controller-manager.conf\n--leader-elect=true\n--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt\n--root-ca-file=/etc/kubernetes/pki/ca.crt\n--service-account-private-key-file=/etc/kubernetes/pki/sa.key\n--use-service-account-credentials=true\n")),(0,a.kt)("p",null,"\u88e1\u9762\u7684\u53c3\u6578\u904e\u591a\uff0c\u76f4\u63a5\u6311\u51fa\u91cd\u9ede\u5c31\u662f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"--cluster-cidr=10.244.0.0/16"),(0,a.kt)("li",{parentName:"ul"},"--allocate-node-cidrs=true"),(0,a.kt)("li",{parentName:"ul"},"--node-cidr-mask-size=24")),(0,a.kt)("p",null,"\u9019\u908a\u5c31\u6a19\u660e\u7684\u6574\u500b ",(0,a.kt)("strong",{parentName:"p"},"cluster network")," \u6703\u4f7f\u7528\u7684\u7db2\u6bb5\uff0c\u9664\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"cidr")," \u5927\u7db2\u6bb5\u4e4b\u5916\u9084\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"node-cide--mask")," \u53bb\u6a19\u793a\u5beb\u7db2\u6bb5\uff0c\u6240\u4ee5\u6839\u64da\u4e0a\u8ff0\u7684\u7bc4\u4f8b\uff0c\u9019\u500b\u7bc0\u9ede\u7684\u6578\u91cf\u4e0d\u80fd\u8d85\u904e255\u53f0\u7bc0\u9ede\uff0c\u4e0d\u7136\u5c31\u6c92\u6709\u8db3\u5920\u7684 ",(0,a.kt)("strong",{parentName:"p"},"\u53ef\u7528\u7db2\u6bb5"),"\u53bb\u5206\u914d\u4e86\u3002"),(0,a.kt)("p",null,"\u6b64\u5916\u5f88\u6709\u8da3\u7684\u4e00\u9ede\u662f\uff0c\u9019\u908a\u7684\u904b\u4f5c\u908f\u8f2f\u518d ",(0,a.kt)("strong",{parentName:"p"},"controller-manager")," \u5167\u88ab\u7a31\u70ba ",(0,a.kt)("strong",{parentName:"p"},"nodeipam"),"\uff0c\u4e5f\u5c31\u662f\u4eca\u5929 ",(0,a.kt)("strong",{parentName:"p"},"kubernetes")," \u81ea\u5df1\u8df3\u4e0b\u4f86\u5e6b\u5fd9\u505a ",(0,a.kt)("strong",{parentName:"p"},"IPAM")," \u7684\u5de5\u4f5c\uff0c\u5e6b\u5fd9\u5206\u914d ",(0,a.kt)("strong",{parentName:"p"},"IP/Subnet"),"\uff0c\u53ea\u662f\u55ae\u4f4d\u662f\u4ee5 ",(0,a.kt)("strong",{parentName:"p"},"Node")," \u70ba\u57fa\u6e96\uff0c\u4e0d\u662f\u4ee5 ",(0,a.kt)("strong",{parentName:"p"},"Pod"),"\u3002"),(0,a.kt)("p",null,"\u6839\u64da ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/103e926604de6f79161b78af3e792d0ed282bc06/pkg/controller/nodeipam/ipam/controller_legacyprovider.go#L65"},"GitHub Controler")," \u53ef\u4ee5\u770b\u5230\u7576 ",(0,a.kt)("strong",{parentName:"p"},"Controller Manager")," \u7269\u4ef6\u88ab\u5275\u9020\u7684\u6642\u5019\u6703\u6839\u64da\u4e0a\u8ff0\u7684\u53c3\u6578\u53bb\u7522\u751f\u4e00\u500b\u540d\u70ba ",(0,a.kt)("strong",{parentName:"p"},"cidrset")," \u7684\u7269\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"....\nset, err := cidrset.NewCIDRSet(clusterCIDR, nodeCIDRMaskSize)\nif err != nil {\n    return nil, err\n}\n...\n")),(0,a.kt)("p",null,"\u800c ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/a3ccea9d8743f2ff82e41b6c2af6dc2c41dc7b10/pkg/controller/nodeipam/ipam/cidrset/cidr_set.go#L31"},"CIDRSet")," \u7684\u7d50\u69cb\u5982\u4e0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},"type CidrSet struct {\n    sync.Mutex\n    clusterCIDR     *net.IPNet\n    clusterIP       net.IP\n    clusterMaskSize int\n    maxCIDRs        int\n    nextCandidate   int\n    used            big.Int\n    subNetMaskSize  int\n}\n")),(0,a.kt)("p",null,"\u57fa\u672c\u4e0a\u5c31\u662f\u5b9a\u7fa9\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"subnet")," \u76f8\u95dc\u7684\u6240\u6709\u8b8a\u6578\uff0c\u63a5\u4e0b\u4f86\u88e1\u9762\u6709\u4e00\u500b\u51fd\u5f0f\u53eb\u505a ",(0,a.kt)("strong",{parentName:"p"},"allocateRange"),"\uff0c\u9867\u540d\u601d\u7fa9\u5c31\u662f\u8981\u51fa\u4e00\u584a\u53ef\u4ee5\u7528\u7684\u7db2\u6bb5"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/a3ccea9d8743f2ff82e41b6c2af6dc2c41dc7b10/pkg/controller/nodeipam/ipam/sync/sync.go#L314"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'func (op *updateOp) allocateRange(ctx context.Context, sync *NodeSync, node *v1.Node) error {\n    if sync.mode != SyncFromCluster {\n        sync.kubeAPI.EmitNodeWarningEvent(node.Name, InvalidModeEvent,\n            "Cannot allocate CIDRs in mode %q", sync.mode)\n        return fmt.Errorf("controller cannot allocate CIDRS in mode %q", sync.mode)\n    }\n\n    cidrRange, err := sync.set.AllocateNext()\n    if err != nil {\n        return err\n    }\n    // If addAlias returns a hard error, cidrRange will be leaked as there\n    // is no durable record of the range. The missing space will be\n    // recovered on the next restart of the controller.\n    if err := sync.cloudAlias.AddAlias(ctx, node.Name, cidrRange); err != nil {\n        klog.Errorf("Could not add alias %v for node %q: %v", cidrRange, node.Name, err)\n        return err\n    }\n\n    if err := sync.kubeAPI.UpdateNodePodCIDR(ctx, node, cidrRange); err != nil {\n        klog.Errorf("Could not update node %q PodCIDR to %v: %v", node.Name, cidrRange, err)\n        return err\n    }\n\n    if err := sync.kubeAPI.UpdateNodeNetworkUnavailable(node.Name, false); err != nil {\n        klog.Errorf("Could not update node NetworkUnavailable status to false: %v", err)\n        return err\n    }\n\n    klog.V(2).Infof("Allocated PodCIDR %v for node %q", cidrRange, node.Name)\n\n    return nil\n}\n')),(0,a.kt)("p",null,"\u88e1\u9762\u6700\u91cd\u8981\u7684\u5c31\u662f\u547c\u53eb ",(0,a.kt)("strong",{parentName:"p"},"UpdateNodePodCIDR")," \u9019\u500b\u51fd\u5f0f\u4f86\u9032\u884c\u6700\u5f8c\u7684\u66f4\u65b0"),(0,a.kt)("p",null,"\u6839\u64da\u5176",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/blob/103e926604de6f79161b78af3e792d0ed282bc06/pkg/controller/nodeipam/ipam/adapter.go#L94"},"\u539f\u59cb\u78bc")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'func (a *adapter) UpdateNodePodCIDR(ctx context.Context, node *v1.Node, cidrRange *net.IPNet) error {\n    patch := map[string]interface{}{\n        "apiVersion": node.APIVersion,\n        "kind":       node.Kind,\n        "metadata":   map[string]interface{}{"name": node.Name},\n        "spec":       map[string]interface{}{"podCIDR": cidrRange.String()},\n    }\n    bytes, err := json.Marshal(patch)\n    if err != nil {\n        return err\n    }\n\n    _, err = a.k8s.CoreV1().Nodes().Patch(node.Name, types.StrategicMergePatchType, bytes)\n    return err\n}\n')),(0,a.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u6700\u5f8c\u6703\u5728 ",(0,a.kt)("strong",{parentName:"p"},"spec"),"\u4e0b\u9762\u7522\u751f\u4e00\u500b\u540d\u7a31\u70ba ",(0,a.kt)("strong",{parentName:"p"},"podCIDR")," \u7684\u5167\u5bb9\uff0c\u4e14\u5176\u6578\u503c\u5c31\u662f\u5206\u914d\u5f8c\u7684\u7db2\u6bb5(cidrRange.String())\u3002"),(0,a.kt)("p",null,"\u9019\u90e8\u5206\u53ef\u4ee5\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"kubectl get nodes xxxx -o yaml")," \u4f86\u9a57\u8b49"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},'$ kubectl get nodes k8s-dev -o yaml\napiVersion: v1\nkind: Node\nmetadata:\n  annotations:\n    flannel.alpha.coreos.com/backend-data: \'{"VtepMAC":"3e:94:52:9b:7e:d9"}\'\n    flannel.alpha.coreos.com/backend-type: vxlan\n    flannel.alpha.coreos.com/kube-subnet-manager: "true"\n    flannel.alpha.coreos.com/public-ip: 10.0.2.15\n    kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock\n    node.alpha.kubernetes.io/ttl: "0"\n    volumes.kubernetes.io/controller-managed-attach-detach: "true"\n  creationTimestamp: "2019-09-23T05:21:46Z"\n  labels:\n    beta.kubernetes.io/arch: amd64\n    beta.kubernetes.io/os: linux\n    kubernetes.io/arch: amd64\n    kubernetes.io/hostname: k8s-dev\n    kubernetes.io/os: linux\n    node-role.kubernetes.io/master: ""\n  name: k8s-dev\n  resourceVersion: "57899"\n  selfLink: /api/v1/nodes/k8s-dev\n  uid: cd8fadc0-e58c-4509-9056-3a06bdb8440f\nspec:\n  podCIDR: 10.244.0.0/24\n...\n')),(0,a.kt)("h2",{id:"pod-flannel"},"Pod Flannel"),(0,a.kt)("p",null,"\u93e1\u982d\u4e00\u8f49\uff0c\u6211\u5011\u4f86\u770b\u7576 ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u90e8\u7f72\u7684 ",(0,a.kt)("strong",{parentName:"p"},"Pod")," \u904b\u884c\u8d77\u4f86\u5f8c\u6703\u505a\u4ec0\u9ebc\u4e8b\u60c5\u3002\n\u524d\u6587\u6709\u63d0\u904e\uff0c\u9810\u8a2d\u7684\u5b89\u88dd\u8a2d\u5b9a\u6a94\u6848\u4e2d\u6703\u4f7f\u5f97 ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"kubernetes API")," \u4f86\u5b58\u53d6\u8cc7\u8a0a\uff0c\u9019\u540c\u6642\u4e5f\u610f\u5473\u5176 ",(0,a.kt)("strong",{parentName:"p"},"subnet manager")," \u6703\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"kubernetes API")," \u4f86\u5b8c\u6210\uff0c\u9019\u90e8\u5206\u7684\u7a0b\u5f0f\u78bc\u90fd\u5728",(0,a.kt)("a",{parentName:"p",href:"https://github.com/coreos/flannel/tree/master/subnet/kube"},"\u9019")),(0,a.kt)("p",null,"\u5176\u4e2d\u8981\u7279\u5225\u6ce8\u610f\u7684\u4e00\u500b\u51fd\u5f0f",(0,a.kt)("a",{parentName:"p",href:"https://github.com/coreos/flannel/blob/master/subnet/kube/kube.go#L222"},"AcquireLease"),"\n\u53ef\u4ee5\u770b\u5230\u88e1\u9762\u5617\u8a66\u91dd\u5c0d ",(0,a.kt)("strong",{parentName:"p"},"node")," \u5e95\u4e0b\u7684 ",(0,a.kt)("strong",{parentName:"p"},"sped.PodCIDR")," \u53bb\u5b58\u53d6\uff0c\u4e26\u4e14\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"net.ParseCIDR")," \u7684\u65b9\u5f0f\u53bb\u89e3\u8b80\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'...\n    if n.Spec.PodCIDR == "" {\n        return nil, fmt.Errorf("node %q pod cidr not assigned", ksm.nodeName)\n    }\n    bd, err := attrs.BackendData.MarshalJSON()\n    if err != nil {\n        return nil, err\n    }\n    _, cidr, err := net.ParseCIDR(n.Spec.PodCIDR)\n    if err != nil {\n        return nil, err\n    }\n...\n')),(0,a.kt)("p",null,"\u63a5\u4e0b\u4f86\u65bc\u4e3b\u8981\u7684 ",(0,a.kt)("strong",{parentName:"p"},"main.go")," \u9019\u908a\u6703\u5728\u547c\u53eb ",(0,a.kt)("strong",{parentName:"p"},"WriteSubnetFile")," \u628a\u76f8\u95dc\u7684\u7d50\u679c\u5beb\u5230\u6a94\u6848\u5167\uff0c\u6700\u5f8c\u5927\u5bb6\u5c31\u53ef\u4ee5\u5230 ",(0,a.kt)("strong",{parentName:"p"},"/run/flannel/subnet.env")," \u53bb\u5f97\u5230\u76f8\u95dc\u8cc7\u8a0a\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'func WriteSubnetFile(path string, nw ip.IP4Net, ipMasq bool, bn backend.Network) error {\n    dir, name := filepath.Split(path)\n    os.MkdirAll(dir, 0755)\n\n    tempFile := filepath.Join(dir, "."+name)\n    f, err := os.Create(tempFile)\n    if err != nil {\n        return err\n    }\n\n    // Write out the first usable IP by incrementing\n    // sn.IP by one\n    sn := bn.Lease().Subnet\n    sn.IP += 1\n\n    fmt.Fprintf(f, "FLANNEL_NETWORK=%s\\n", nw)\n    fmt.Fprintf(f, "FLANNEL_SUBNET=%s\\n", sn)\n    fmt.Fprintf(f, "FLANNEL_MTU=%d\\n", bn.MTU())\n    _, err = fmt.Fprintf(f, "FLANNEL_IPMASQ=%v\\n", ipMasq)\n    f.Close()\n    if err != nil {\n        return err\n    }\n\n    // rename(2) the temporary file to the desired location so that it becomes\n    // atomically visible with the contents\n    return os.Rename(tempFile, path)\n    //TODO - is this safe? What if it\'s not on the same FS?\n}\n')),(0,a.kt)("h2",{id:"cni-flannel"},"CNI Flannel"),(0,a.kt)("p",null,"\u8a71\u984c\u4e00\u8f49\uff0c\u6211\u5011\u4f86\u770b\u6700\u5f8c\u4e00\u500b\u6b65\u9a5f\uff0c\u7576 ",(0,a.kt)("strong",{parentName:"p"},"CRI")," \u6c7a\u5b9a\u5275\u5efa ",(0,a.kt)("strong",{parentName:"p"},"POD")," \u4e26\u4e14\u6e96\u5099\u597d\u76f8\u95dc\u74b0\u53c3\u6578\u547c\u53eb ",(0,a.kt)("strong",{parentName:"p"},"CNI")," \u5f8c\u7684\u904b\u4f5c\u3002"),(0,a.kt)("p",null,"\u9019\u908a\u8981\u984d\u5916\u63d0\u9192\uff0c ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u7684\u7a0b\u5f0f\u78bc\u5206\u5169\u7684\u5730\u65b9\u5b58\u653e"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/coreos/flannel"},"CoreOS - Pod")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/containernetworking/plugins/tree/master/plugins/meta/flannel"},"ContainetNetworking - CNI"))),(0,a.kt)("p",null,"\u540c\u6642\u9019\u4e5f\u53ef\u4ee5\u89e3\u91cb\u70ba\u4ec0\u9ebc\u4e00\u958b\u59cb\u5b89\u88dd\u597d ",(0,a.kt)("strong",{parentName:"p"},"kubernetes")," \u5f8c\uff0c\u7cfb\u7d71\u5167\u5c31\u6709 ",(0,a.kt)("strong",{parentName:"p"},"flannel CNI")," \u7684\u57f7\u884c\u6a94\u6848\u4e86\uff0c\u56e0\u70ba\u88ab\u653e\u5728\u5b98\u65b9\u7684 ",(0,a.kt)("strong",{parentName:"p"},"repo")," \u88e1\u9762\u3002"),(0,a.kt)("p",null,"\u6211\u5011\u5148\u4f86\u770b\u5275\u5efa ",(0,a.kt)("strong",{parentName:"p"},"POD")," \u7684\u6642\u5019 ",(0,a.kt)("strong",{parentName:"p"},"Flannel CNI")," \u6703\u505a\u7684",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/blob/master/plugins/meta/flannel/flannel.go#L186-L216"},"\u4e8b\u60c5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'const (\n    defaultSubnetFile = "/run/flannel/subnet.env"\n    defaultDataDir    = "/var/lib/cni/flannel"\n)\n...\nfunc cmdAdd(args *skel.CmdArgs) error {\n    n, err := loadFlannelNetConf(args.StdinData)\n    if err != nil {\n        return err\n    }\n\n    fenv, err := loadFlannelSubnetEnv(n.SubnetFile)\n    if err != nil {\n        return err\n    }\n\n    if n.Delegate == nil {\n        n.Delegate = make(map[string]interface{})\n    } else {\n        if hasKey(n.Delegate, "type") && !isString(n.Delegate["type"]) {\n            return fmt.Errorf("\'delegate\' dictionary, if present, must have (string) \'type\' field")\n        }\n        if hasKey(n.Delegate, "name") {\n            return fmt.Errorf("\'delegate\' dictionary must not have \'name\' field, it\'ll be set by flannel")\n        }\n        if hasKey(n.Delegate, "ipam") {\n            return fmt.Errorf("\'delegate\' dictionary must not have \'ipam\' field, it\'ll be set by flannel")\n        }\n    }\n\n    if n.RuntimeConfig != nil {\n        n.Delegate["runtimeConfig"] = n.RuntimeConfig\n    }\n\n    return doCmdAdd(args, n, fenv)\n}\n')),(0,a.kt)("p",null,"\u6709\u500b\u5e38\u898b\u4e14\u7fd2\u6163\u7684\u540d\u7a31 ",(0,a.kt)("strong",{parentName:"p"},"cmdAdd"),"\uff0c\u88e1\u9762\u53ef\u4ee5\u770b\u5230\u547c\u53eb\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"loadFlannelSubnetEnv"),"\uff0c\u5176\u4e2d\u82e5\u4f7f\u7528\u8005\u6c92\u6709\u7279\u5225\u8a2d\u5b9a\u7684\u8a71\uff0c\u9810\u8a2d\u7684 ",(0,a.kt)("strong",{parentName:"p"},"SubnetFile")," \u5c31\u662f ",(0,a.kt)("strong",{parentName:"p"},"defaultSubnetFile"),"\uff0c\u5982\u4e0a\u9762\u793a\uff0c\u5176\u503c\u70ba ",(0,a.kt)("strong",{parentName:"p"},"/run/flannel/subnet.env"),"\u3002"),(0,a.kt)("p",null,"\u63a5\u8005\u8a72",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/blob/master/plugins/meta/flannel/flannel.go#L186-L216"},"\u51fd\u5f0f")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},'func loadFlannelSubnetEnv(fn string) (*subnetEnv, error) {\n    f, err := os.Open(fn)\n    if err != nil {\n        return nil, err\n    }\n    defer f.Close()\n\n    se := &subnetEnv{}\n\n    s := bufio.NewScanner(f)\n    for s.Scan() {\n        parts := strings.SplitN(s.Text(), "=", 2)\n        switch parts[0] {\n        case "FLANNEL_NETWORK":\n            _, se.nw, err = net.ParseCIDR(parts[1])\n            if err != nil {\n                return nil, err\n            }\n\n        case "FLANNEL_SUBNET":\n            _, se.sn, err = net.ParseCIDR(parts[1])\n            if err != nil {\n                return nil, err\n            }\n\n        case "FLANNEL_MTU":\n            mtu, err := strconv.ParseUint(parts[1], 10, 32)\n            if err != nil {\n                return nil, err\n            }\n            se.mtu = new(uint)\n            *se.mtu = uint(mtu)\n\n        case "FLANNEL_IPMASQ":\n            ipmasq := parts[1] == "true"\n            se.ipmasq = &ipmasq\n        }\n    }\n    if err := s.Err(); err != nil {\n        return nil, err\n    }\n\n    if m := se.missing(); m != "" {\n        return nil, fmt.Errorf("%v is missing %v", fn, m)\n    }\n\n    return se, nil\n}\n')),(0,a.kt)("p",null,"\u5c31\u6703\u53bb\u8b80\u53d6\u8a72\u6a94\u6848\uff0c\u4e26\u4e14\u6574\u7406\u6210\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"subnetEnv")," \u7684\u7269\u4ef6\u683c\u5f0f\uff0c\u4e00\u5207\u90fd\u8655\u7406\u5b8c\u7562\u5f8c\uff0c\u5c31\u6703\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"CNI")," \u5167\u5efa\u7684\u51fd\u5f0f\u53bb\u547c\u53eb\u5176\u4ed6\u7684 ",(0,a.kt)("strong",{parentName:"p"},"CNI")," \u4f86\u8655\u7406"),(0,a.kt)("p",null,"\u53ef\u4ee5\u518d",(0,a.kt)("a",{parentName:"p",href:"https://github.com/containernetworking/plugins/blob/master/plugins/meta/flannel/flannel_linux.go#L31"},"doCmdAdd")," \u9019\u500b\u51fd\u5f0f\u770b\u5230\u6700\u5f8c\u585e\u4e86\u4e00\u500b ",(0,a.kt)("strong",{parentName:"p"},"ipam")," \u7684\u5b57\u5178\u8cc7\u8a0a\u9032\u53bb\uff0c\u7136\u5f8c\u88e1\u9762\u8a2d\u5b9a\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"host-local")," \u6703\u7528\u5230\u7684\u6240\u6709\u53c3\u6578\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-golang="},'func doCmdAdd(args *skel.CmdArgs, n *NetConf, fenv *subnetEnv) error {\n    n.Delegate["name"] = n.Name\n\n    if !hasKey(n.Delegate, "type") {\n        n.Delegate["type"] = "bridge"\n    }\n\n    if !hasKey(n.Delegate, "ipMasq") {\n        // if flannel is not doing ipmasq, we should\n        ipmasq := !*fenv.ipmasq\n        n.Delegate["ipMasq"] = ipmasq\n    }\n\n    if !hasKey(n.Delegate, "mtu") {\n        mtu := fenv.mtu\n        n.Delegate["mtu"] = mtu\n    }\n\n    if n.Delegate["type"].(string) == "bridge" {\n        if !hasKey(n.Delegate, "isGateway") {\n            n.Delegate["isGateway"] = true\n        }\n    }\n    if n.CNIVersion != "" {\n        n.Delegate["cniVersion"] = n.CNIVersion\n    }\n\n    n.Delegate["ipam"] = map[string]interface{}{\n        "type":   "host-local",\n        "subnet": fenv.sn.String(),\n        "routes": []types.Route{\n            {\n                Dst: *fenv.nw,\n            },\n        },\n    }\n\n    return delegateAdd(args.ContainerID, n.DataDir, n.Delegate)\n}\n')),(0,a.kt)("p",null,"\u9019\u500b\u6a94\u6848\u5176\u5be6\u4e5f\u7121\u5f62\u900f\u9732\u4e86\uff0c ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u6700\u5f8c\u5176\u5be6\u662f\u7522\u751f\u4e00\u500b\u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"bridge")," \u4f5c\u70ba\u4e3b\u9ad4 ",(0,a.kt)("strong",{parentName:"p"},"CNI")," \u4e14 ",(0,a.kt)("strong",{parentName:"p"},"IPAM")," \u4f7f\u7528 ",(0,a.kt)("strong",{parentName:"p"},"host-local")," \u7684\u8a2d\u5b9a\u6a94\u6848\u3002\n\u9019\u4e5f\u662f\u6211\u4e4b\u524d\u6240\u8aaa\u7684\u9019\u4e9b\u7531\u5b98\u65b9\u7dad\u8b77\u7684\u57fa\u672c\u529f\u80fd\u89e3\u6c7a\u65b9\u6848\uff0c\u4e0d\u8ad6\u662f\u57fa\u65bc\u63d0\u4f9b\u7db2\u8def\u529f\u80fd\u7684\uff0c\u6216\u662f ",(0,a.kt)("strong",{parentName:"p"},"IPAM")," \u76f8\u95dc\u7684\u5957\u4ef6\u90fd\u6703\u7d66\u53d7\u5230\u5176\u4ed6\u7684\u5957\u4ef6\u53cd\u8986\u4f7f\u7528\u800c\u7d44\u5408\u51fa\u66f4\u5f37\u5927\u7684\u529f\u80fd\u3002"),(0,a.kt)("p",null,"\u4e00\u65e6\u7576 ",(0,a.kt)("strong",{parentName:"p"},"host-local")," \u8655\u7406\u7d50\u675f\u5f8c\uff0c\u5c31\u6703\u518d ",(0,a.kt)("strong",{parentName:"p"},"/var/run/cni/cbr0/networks")," \u770b\u5230\u4e00\u7cfb\u5217\u7531 ",(0,a.kt)("strong",{parentName:"p"},"host-local")," \u6240\u7dad\u8b77\u7684\u6b63\u5728\u4f7f\u7528 IP \u6e05\u55ae\u3002"),(0,a.kt)("h1",{id:"summary"},"Summary"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"flannel")," \u672c\u8eab\u4e26\u4e0d\u8655\u7406 ",(0,a.kt)("strong",{parentName:"p"},"Linux Bridge")," \u7684\u8a2d\u5b9a\u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"IPAM")," \u76f8\u95dc\u7684\u8a2d\u5b9a\uff0c\u53cd\u800c\u662f\u900f\u904e\u66f4\u4e0a\u5c64\u7684\u8fa6\u6cd5\u53bb\u8655\u7406\u8a2d\u5b9a\u6a94\u6848\u7684\u554f\u984c\uff0c\u78ba\u4fdd\u6bcf\u4e00\u53f0\u6a5f\u5668\u4e0a\u9762 ",(0,a.kt)("strong",{parentName:"p"},"host-local")," \u770b\u5230\u7684\u7db2\u6bb5\u90fd\u4e0d\u540c\uff0c\u800c ",(0,a.kt)("strong",{parentName:"p"},"host-local")," \u5247\u5c08\u6ce8\u65bc\u5c0d\u6bcf\u500b\u7db2\u6bb5\u90fd\u80fd\u5920\u4e0d\u505c\u7684\u7522\u751f\u51fa\u552f\u4e00\u4e0d\u88ab\u4f7f\u7528\u7684 ",(0,a.kt)("strong",{parentName:"p"},"IP")," \u5730\u5740\u3002"),(0,a.kt)("p",null,"\u9019\u7a2e\u5206\u5de5\u5408\u4f5c\u7684\u8fa6\u6cd5\u4e5f\u662f\u73fe\u5728\u8edf\u9ad4\u958b\u767c\u8207\u6574\u5408\u7684\u6a21\u5f0f\uff0c\u96a8\u8005\u6548\u80fd\u8207\u529f\u80fd\u6108\u4f86\u6108\u5f37\u5927\uff0c\u5f88\u96e3\u6709\u4e00\u500b\u8edf\u9ad4\u53ef\u4ee5\u6db5\u62ec\u6240\u6709\u9818\u57df\u7684\u529f\u80fd\uff0c\u9069\u5ea6\u7684\u5408\u4f5c\u8207\u6574\u5408\u624d\u6709\u8fa6\u6cd5\u6253\u9020\u51fa\u66f4\u597d\u7684\u89e3\u6c7a\u65b9\u6848\u3002"),(0,a.kt)("p",null,"\u672c\u7bc7\u6211\u5011\u5927\u6982\u7406\u89e3\u4e86 ",(0,a.kt)("strong",{parentName:"p"},"flannel")," \u662f\u5982\u4f55\u8655\u7406 ",(0,a.kt)("strong",{parentName:"p"},"IP")," \u5206\u914d\u7684\u554f\u984c\uff0c\u900f\u904e ",(0,a.kt)("strong",{parentName:"p"},"kubernetes nodeIPAM")," \u7684\u8a2d\u8a08\uff0c\u4ee5\u53ca ",(0,a.kt)("strong",{parentName:"p"},"CNI Host-local IPAM")," \u7684\u8655\u7406\u4f86\u5b8c\u6210\u3002"),(0,a.kt)("p",null,"\u6700\u5f8c\u4f7f\u7528\u4e0b\u5716\u4f86\u4f5c\u70ba\u4e00\u500b\u7e3d\u7d50"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://i.imgur.com/HHKDtsL.png",alt:null})),(0,a.kt)("h1",{id:"\u53c3\u8003"},"\u53c3\u8003"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/coreos/flannel/blob/443d773037ac0f3b8a996a6de018b903b6a58c62/Documentation/kubernetes.md"},"https://github.com/coreos/flannel/blob/443d773037ac0f3b8a996a6de018b903b6a58c62/Documentation/kubernetes.md")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/coreos/flannel"},"https://github.com/coreos/flannel"))))}u.isMDXComponent=!0}}]);