"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[37840],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62002:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={title:"mpd5 on FreeBSD 10.0",date:"2014-07-26 14:29",comments:!0,tags:["VPN","FreeBSD","Network","System"],description:"VPN server is a very useful tool for your network connectivity, although there're many online VPN service around the world, it's slow speed and money cost and you can't sure they won't collect your connection data. That's why sometimes we want to build the VPN server by ourself and this porst introduce a way to setup a VPN server in your FreeBSD server."},l="Preface",i={unversionedId:"techPost/2014/mpd5-on-freebsd-100",id:"techPost/2014/mpd5-on-freebsd-100",title:"mpd5 on FreeBSD 10.0",description:"VPN server is a very useful tool for your network connectivity, although there're many online VPN service around the world, it's slow speed and money cost and you can't sure they won't collect your connection data. That's why sometimes we want to build the VPN server by ourself and this porst introduce a way to setup a VPN server in your FreeBSD server.",source:"@site/docs/techPost/2014/mpd5-on-freebsd-100.md",sourceDirName:"techPost/2014",slug:"/techPost/2014/mpd5-on-freebsd-100",permalink:"/docs/techPost/2014/mpd5-on-freebsd-100",draft:!1,tags:[{label:"VPN",permalink:"/docs/tags/vpn"},{label:"FreeBSD",permalink:"/docs/tags/free-bsd"},{label:"Network",permalink:"/docs/tags/network"},{label:"System",permalink:"/docs/tags/system"}],version:"current",frontMatter:{title:"mpd5 on FreeBSD 10.0",date:"2014-07-26 14:29",comments:!0,tags:["VPN","FreeBSD","Network","System"],description:"VPN server is a very useful tool for your network connectivity, although there're many online VPN service around the world, it's slow speed and money cost and you can't sure they won't collect your connection data. That's why sometimes we want to build the VPN server by ourself and this porst introduce a way to setup a VPN server in your FreeBSD server."},sidebar:"techPost",previous:{title:"MongoDB",permalink:"/docs/techPost/2014/mongodb"},next:{title:"Multipath  routing with Group table at mininet",permalink:"/docs/techPost/2014/multipath-routing-with-group-table-at-mininet"}},s={},p=[{value:"Pkg",id:"pkg",level:2},{value:"Ports",id:"ports",level:2},{value:"VPN Configuraion",id:"vpn-configuraion",level:2},{value:"Use configuration",id:"use-configuration",level:2},{value:"System configuration",id:"system-configuration",level:2},{value:"Log configuration.",id:"log-configuration",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"preface"},"Preface"),(0,a.kt)("p",null,"Install a VPN server on FreeBSD 10.0-Release on Amazon EC2."),(0,a.kt)("h1",{id:"install"},"Install"),(0,a.kt)("h2",{id:"pkg"},"Pkg"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"pkg install mpd5")),(0,a.kt)("h2",{id:"ports"},"Ports"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"portmaster net/mpd5")),(0,a.kt)("h1",{id:"config"},"Config"),(0,a.kt)("h2",{id:"vpn-configuraion"},"VPN Configuraion"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"cp /usr/local/etc/mpd5/mpd.conf.sample /usr/local/etc/mpd5/mpd.conf")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set user hwchiu 123456")," used to config the admin's accoutn and password of the web page."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set web self 0.0.0.0 5006")," is the listen ip address and port of the web page.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash="},"startup:\n        # configure mpd users\n        set user hwchiu 123456\n        # configure the console\n        set console self 127.0.0.1 5005\n        set console open\n        # configure the web server\n        set web self 0.0.0.0 5006\n        set web open\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"comment the ",(0,a.kt)("inlineCode",{parentName:"li"},"dialup")," and add ",(0,a.kt)("inlineCode",{parentName:"li"},"pptp_server"),", we will config the options of pptp_server later.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"default:\n        #load dialup\n        load pptp_server\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set ippool add pool1 ip_start, ip_end")," is used to set the private ip range for vpn user. the name ",(0,a.kt)("inlineCode",{parentName:"li"},"ippool")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"pool1")," must be the same as ",(0,a.kt)("inlineCode",{parentName:"li"},"set ipcp ranges 192.168.1.1/32 ippool pool1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set ipcp ranges 192.168.1.1/32 ippool pool1")," is the ip address of the server."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set ipcp dns 172.31.0.2")," is used to set the dns server. In my case, since my machine is behind the EC2, i used the same configuration in my FreeBSD."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set ipcp nbns 172.31.0.2"),"is used to for windows client."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"set pptp self 172.31.18.110"),". You should set your ip address which is shown on the network interface.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# Define dynamic IP address pool.\n        set ippool add pool1 192.168.1.50 192.168.1.99\n# Create clonable bundle template named B\n        create bundle template B\n        set iface enable proxy-arp\n        set iface idle 1800\n        set iface enable tcpmssfix\n        set ipcp yes vjcomp\n# Specify IP address pool for dynamic assigment.\n        set ipcp ranges 192.168.1.1/32 ippool pool1\n        set ipcp dns 172.31.0.2\n        set ipcp nbns 172.31.0.2\n# The five lines below enable Microsoft Point-to-Point encryption\n# (MPPE) using the ng_mppc(8) netgraph node type.\n        set bundle enable compression\n        set ccp yes mppc\n        set mppc yes e40\n        set mppc yes e128\n        set mppc yes stateless\n# Create clonable link template named L\n        create link template L pptp\n# Set bundle template to use\n        set link action bundle B\n# Multilink adds some overhead, but gives full 1500 MTU.\n        set link enable multilink\n        set link yes acfcomp protocomp\n        set link no pap chap eap\n        set link enable chap\n# We can use use RADIUS authentication/accounting by including\n# another config section with label 'radius'.\n#       load radius\n        set link keep-alive 10 60\n# We reducing link mtu to avoid GRE packet fragmentation.\n        set link mtu 1460\n# Configure PPTP\n        set pptp self 172.31.18.110\n# Allow to accept calls\n        set link enable incoming\n")),(0,a.kt)("h2",{id:"use-configuration"},"Use configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"cp /usr/local/etc/mpd5/mpd.secret.sample  /usr/local/etc/mpd5/mpd.secret"),"\nThe format of mpd.secret is ",(0,a.kt)("inlineCode",{parentName:"li"},"username password ip_address")," per line."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Example"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'fred            "fred-pw"\njoe             "foobar"        192.168.1.1\n')),(0,a.kt)("h2",{id:"system-configuration"},"System configuration"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"sysctl net.inet.ip.forwarding=1")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Pf configuraion"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"use NAT for internal private network."),(0,a.kt)("li",{parentName:"ol"},"skip the lo interface."),(0,a.kt)("li",{parentName:"ol"},"block adll traffic adn log all packet by default."),(0,a.kt)("li",{parentName:"ol"},"pass in tcp for port 1723 (PPTP)"),(0,a.kt)("li",{parentName:"ol"},"pass in protocol gre"),(0,a.kt)("li",{parentName:"ol"},"pass in from any to internal private network and vice versa."),(0,a.kt)("li",{parentName:"ol"},"Use the ",(0,a.kt)("inlineCode",{parentName:"li"},"pfctl -f file")," to reload the pf instead of ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/rc.d/pf restart"),", the latter will disconnect all exist connection.")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'my_int = "xn0"\ninternal_net = "192.168.0.0/16"\nexternal_addr = "172.31.18.110"\nnat on $my_int from $internal_net to any -> $external_addr\nset skip on lo\nblock in log all\npass in on $my_int proto tcp from any to any port 1723 keep state\npass in on $my_int proto tcp from any to any port 443 keep state\npass in quick on $my_int proto icmp all keep state\npass in proto gre all keep state\npass in from any to $internal_net\npass in from $internal_net to any\npass out proto { gre, tcp, udp, icmp } all keep state\n')),(0,a.kt)("h2",{id:"log-configuration"},"Log configuration."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Edit /etc/syslog.conf")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"!mpd\n    *.*                                             /var/log/mpd.log\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Touch /var/log/mpd.log"),(0,a.kt)("li",{parentName:"ul"},"Restart syslog")),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"/usr/local/etc/rc.d/mpd5 start"))))}d.isMDXComponent=!0}}]);