"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[60703],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,k=u["".concat(l,".").concat(f)]||u[f]||m[f]||c;return n?r.createElement(k,o(o({ref:t},s),{},{components:n})):r.createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},46228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const c={title:"c++ explicit\u4fee\u98fe",date:"2013-03-29 14:12",comments:!0,tags:["C"]},o=void 0,i={permalink:"/2013/03/29/cpp",source:"@site/blog/2013-03-29-cpp.md",title:"c++ explicit\u4fee\u98fe",description:"C++\u4e2d\uff0c\u6709\u6240\u8b02\u7684\u986f\u6027\u8f49\u63db\u8ddf\u96b1\u6027\u8f49\u63db",date:"2013-03-29T14:12:00.000Z",formattedDate:"March 29, 2013",tags:[{label:"C",permalink:"/tags/c"}],readingTime:.585,hasTruncateMarker:!1,authors:[],frontMatter:{title:"c++ explicit\u4fee\u98fe",date:"2013-03-29 14:12",comments:!0,tags:["C"]},prevItem:{title:"Windows VPN",permalink:"/2013/03/29/windows-vpn"},nextItem:{title:"\u6aa2\u67e5port\u4f7f\u7528\u60c5\u6cc1",permalink:"/2013/03/29/port-check"}},l={authorsImageUrls:[]},p=[],s={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"C++\u4e2d\uff0c\u6709\u6240\u8b02\u7684\u986f\u6027\u8f49\u63db\u8ddf\u96b1\u6027\u8f49\u63db"),(0,a.kt)("p",null,"\u5728\u5ba3\u544a\u6642\uff0c\u52a0\u5165explicit \u9019\u500b\u95dc\u9375\u5b57\uff0c\u53ef\u4ee5\u7981\u6b62\u4f7f\u7528\u986f\u6027\u8f49\u63db\uff0c\u4ee5\u4e0b\u70ba\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"    using namespace std;\n    class Stack {\n       public:\n         Stack(int a){};\n    };\n    void Test(Stack b){\n    }\n    int main()\n    {\n     Stack s1 = 1;  //ok\n     Stack s2 = Stack(12); //ok\n     Stack s3(s1); //ok\n     Test(123); //ok\n     return 0;\n    }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c++"},"    using namespace std;\n    class Stack {\n       public:\n       explicit   Stack(int){};\n    };\n    void Test(Stack b){\n    }\n    int main()\n    {\n     Stack s1 = 123;  //error\n     Stack s2 = Stack(123); //ok\n     Stack s3(s1); //ok\n     Test(123); // error\n     return 0;\n    }\n")))}m.isMDXComponent=!0}}]);