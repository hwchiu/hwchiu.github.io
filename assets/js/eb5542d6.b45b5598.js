"use strict";(self.webpackChunkhwchiu=self.webpackChunkhwchiu||[]).push([[66059],{65277:e=>{e.exports=JSON.parse('{"label":"Kernel","permalink":"/docs/tags/kernel","allTagsPath":"/docs/tags","count":16,"items":[{"id":"techPost/2018/introduce-cni-i","title":"[Container Network Interface] Bridge Network In Docker","description":"The most import feature of the container is the resource isolation, including the mount, network, user, UTC and PID. that\'s the reason why we can\'t see those resources status of the host. The resources isolation are supported by the Linux Kernel and we will demostrate the networking part by the network namespace and also show you how does the docekr use the network namespace and Linux Bridge to proivde the network connectivity for each container.","permalink":"/docs/techPost/2018/introduce-cni-i"},{"id":"techPost/2018/introduce-cni-iii","title":"[Container Network Interface] Implement Your CNI In Golang","description":"As we know, the kubernetes use the CNI to provide the network connectivity for its Pod unit and the cluster administrator can choose what kind of the CNI should be installed in the cluster. For example, if the only requirement is the overlay network, you can choose the flannel CNI and choose the calico CNI if you have the requirement of the BGP. In this post, we will learn how to write your own CNI in golang language. Actually, You can implement it with any language as you like.","permalink":"/docs/techPost/2018/introduce-cni-iii"},{"id":"techPost/2018/netfilter-eiptables-i","title":"[netfilter] Introduction to ebtables","description":"\u672c\u6587\u662f iptables/ebtables \u7cfb\u5217\u5206\u4eab\u6587\u7684\u7b2c\u4e00\u7bc7\uff0c\u6703\u5148\u8457\u91cd\u65bc iptables/ebtables \u672c\u8eab\u7684\u67b6\u69cb\uff0c\u66f4\u6e96\u78ba\u7684\u662f netfilter \u7684\u67b6\u69cb\u4ecb\u7d39\uff0c\u5f9e User-Space \u5230 Kernel-Space \u7684\u7d44\u6210\u5143\u4ef6\uff0c\u4e26\u4e14\u7c21\u55ae\u6558\u8ff0\u4e00\u4e0b\u6574\u9ad4\u7684\u904b\u4f5c\u6d41\u7a0b\u3002\u6700\u5f8c\u958b\u59cb\u4ecb\u7d39 ebtables \u9019\u500b\u5b58\u5728\u4f46\u662f\u8f03\u5c11\u4eba\u77e5\u9053\u7684\u5de5\u5177\uff0c\u4e0d\u540c\u65bc iptables, ebtables \u66f4\u5c08\u6ce8\u65bc\u57fa\u65bc MAC \u5730\u5740\u7684 Layer2 \u8f49\u767c\u3002 \u6587\u7ae0\u6700\u5f8c\u4ecb\u7d39\u4e86 ebtables \u7684\u898f\u5247\u7d44\u6210\uff0c\u4e26\u4e14\u5c07 ebtables \u898f\u5247\u7684\u8655\u7406\u9806\u5e8f\u4ee5\u5716\u8868\u7684\u65b9\u5f0f\u5448\u73fe\uff0c\u8b93\u5927\u5bb6\u66f4\u5bb9\u6613\u7406\u89e3\u5728 Layer2 \u8f49\u767c\u6642\uff0c\u8a72\u600e\u9ebc\u900f\u904e `ebtables` \u53bb\u8a2d\u5b9a\u76f8\u95dc\u7684\u898f\u5247\u4f86\u8655\u7406\u5c01\u5305\u3002","permalink":"/docs/techPost/2018/netfilter-eiptables-i"},{"id":"techPost/2018/netfilter-eiptables-ii","title":"[netfilter] Introduction to iptables","description":"\u900f\u904e\u77ad\u89e3 iptables \u898f\u5247\u7684\u56db\u5927\u7d44\u6210 Table/Chian/Match/Target \u4f86\u5b78\u7fd2 iptables \u7684\u898f\u5247\u542b\u7fa9\uff0c\u540c\u6642\u900f\u904e\u5716\u8868\u7684\u65b9\u5f0f\u4f86\u91d0\u6e05\u5c01\u5305\u5728 Linux Kernel \u50b3\u8f38\u904e\u7a0b\u4e2d\u53d7\u5230 iptables \u898f\u5247\u7684\u8655\u7406\u9806\u5e8f\u3002\u6700\u5f8c\u6703\u5c07 iptables \u4ee5\u53ca ebtables \u5169\u8005\u7684\u6d41\u7a0b\u5716\u6574\u5408\u5728\u4e00\u8d77\uff0c\u69cb\u5efa\u51fa\u4e00\u500b\u66f4\u5168\u9762\u7684\u5c01\u5305\u8f49\u9001\u6d41\u7a0b\u5716\uff0c\u65bc\u6b64\u6d41\u7a0b\u5716\u4e2d\u53ef\u4ee5\u89c0\u5bdf\u5230\u5c01\u5305\u5728 Routing/Bridging \u4e0d\u540c\u904e\u7a0b\u4e2d\uff0c\u662f\u5982\u4f55\u901a\u904e\u4e0d\u540c\u7684 ebtables/iptables \u898f\u5247\u7684\u8655\u7406\u3002 \u64c1\u6709\u9019\u4e9b\u8cc7\u8a0a\u80fd\u5920\u8b93\u4f60\u5c0d\u7cfb\u7d71\u4e0a\u7684 iptables/ebtables \u6709\u66f4\u5168\u9762\u6027\u7684\u7406\u89e3\u5176\u529f\u7528\u4ee5\u53ca\u767c\u751f\u6642\u6a5f","permalink":"/docs/techPost/2018/netfilter-eiptables-ii"},{"id":"techPost/2016/switchdev-ii","title":"[Switchdev] How Kernel Implement SwitchDev(i)","description":"\u63a2\u8a0e Kernel \u5982\u4f55\u5be6\u4f5c SwitchDev (I)","permalink":"/docs/techPost/2016/switchdev-ii"},{"id":"techPost/2016/switchdev-iii","title":"[Switchdev] How Kernel Implement SwitchDev(ii)","description":"\u63a2\u8a0e Kernel \u5982\u4f55\u5be6\u4f5c SwitchDev (II)","permalink":"/docs/techPost/2016/switchdev-iii"},{"id":"techPost/2016/switchdev-i","title":"[Switchdev] Introduuction To Switchdev","description":"\u63a2\u8a0e SwitchDev \u67b6\u69cb\u554f\u984c","permalink":"/docs/techPost/2016/switchdev-i"},{"id":"techPost/2017/paper-maglve","title":"[\u8ad6\u6587\u5c0e\u8b80] Maglev: A Fast and Reliable Software Network Load Balancer","description":"\u672c\u7bc7\u6587\u7ae0\u662f\u5c6c\u65bc\u8ad6\u6587\u5c0e\u8b80\u7cfb\u5217\uff0c\u9019\u6b21\u7684\u5c0d\u8c61\u662fGoogle\u6240\u63a8\u51fa\u7684Software Network Load Balancer, Meglev. \u900f\u904e\u5c0d\u8a72\u8ad6\u6587\u7684\u7814\u7a76\u5f8c\u53ef\u4ee5\u5b78\u7fd2\u5230Google\u5c0d\u65bc\u4e00\u500b Network Load Balancer \u7684\u671f\u8a31\u4ee5\u53ca\u8a2d\u8a08\u7684\u601d\u8003\u8108\u7d61\uff0c\u4e26\u4e14\u5be6\u969b\u7406\u89e3\u5176\u67b6\u69cb\u4f86\u5b78\u7fd2\u5230\u5982\u4f55\u8a2d\u8a08\u4e00\u500b\u901a\u7528(\u53ef\u904b\u884c\u5728\u4efb\u610f\u7684 Linux Server\u4e0a), \u5206\u6563\u5f0f\u4e14\u6613\u65bc\u64f4\u5145\u7684\u5f48\u6027\u67b6\u69cb\u4ee5\u53ca\u9ad8PPS(Packet Per Second)\u8655\u7406\u80fd\u529b\u7684\u8edf\u9ad4\u7a0b\u5f0f\u3002\u6700\u5f8c\u900f\u904e\u8ad6\u6587\u4e2d\u7684\u5be6\u9a57\u8207\u6548\u80fd\u8a55\u4f30\u4f86\u89c0\u5bdf\u5be6\u969b\u4e0a Meglev \u7684\u6548\u80fd\u4ee5\u53ca\u662f\u5426\u6709\u6eff\u8db3Google\u5c0d\u8a72\u8edf\u9ad4\u67b6\u69cb\u7684\u671f\u671b\u3002","permalink":"/docs/techPost/2017/paper-maglve"},{"id":"techPost/2017/DRBD-networking-structure","title":"Drbd Networking Structure Introduction","description":"Introduction","permalink":"/docs/techPost/2017/DRBD-networking-structure"},{"id":"techPost/2020/ipvs-3","title":"IPvS \u5b78\u7fd2\u624b\u518a(\u4e09)","description":"\u672c\u6587\u4f5c\u70ba IPVS \u7cfb\u5217\u6587\u7b2c\u4e09\u7bc7\uff0c \u6703\u5f9e Kernel \u4f5c\u70ba\u51fa\u767c\u9ede\uff0c\u63a2\u8a0e\u4e00\u4e0b IPVS \u672c\u8eab\u7684\u6a21\u7d44\u6982\u5ff5\uff0c\u5206\u4eab\u5169\u7a2e\u4e0d\u540c\u7684\u5167\u5efa\u9664\u932f\u65b9\u5f0f\uff0c\u6b64\u5916\u4e5f\u6703\u5f9e\u539f\u59cb\u78bc\u7684\u90e8\u5206\u770b\u4e00\u4e0b IPVS \u521d\u59cb\u5316\u7684\u904e\u7a0b\u505a\u4e86\u54ea\u4e9b\u4e8b\u60c5","permalink":"/docs/techPost/2020/ipvs-3"},{"id":"techPost/2020/ipvs-4","title":"IPvS \u5b78\u7fd2\u624b\u518a(\u56db)","description":"\u672c\u6587\u4f5c\u70ba IPVS \u7cfb\u5217\u6587\u7b2c\u56db\u7bc7\uff0c\u4e3b\u8981\u662f\u8ddf\u5927\u5bb6\u4ecb\u7d39 IPVS \u65bc Linux Kernel \u5167\u7684\u67b6\u69cb\u8a2d\u8a08\uff0c\u900f\u904e\u7406\u89e3\u5176\u8a2d\u8a08\u66f4\u53ef\u4ee5\u5e6b\u52a9\u6211\u5011\u53bb\u77ad\u89e3 IPVS \u8207 IPTABLES \u7684\u5dee\u7570\uff0c\u9762\u5c0d\u8af8\u5982\u6b64\u985e\u7684\u63a2\u8a0e\u6587\u7ae0\u66f4\u80fd\u5920\u6709\u8db3\u5920\u7684\u80cc\u666f\u53bb\u601d\u8003\u8207\u5b78\u7fd2","permalink":"/docs/techPost/2020/ipvs-4"},{"id":"techPost/2013/linux-capture-packets","title":"Linux-Kernel-PacketCapture","description":"\u6700\u8fd1\u7a81\u7136\u5c0d\u6293\u5c01\u5305\u633a\u6709\u8208\u8da3\u7684\uff0c\u6b63\u597d\u4ee5\u524d\u4fee\u7db2\u969b\u7db2\u8def\u898f\u7d04\u6642\uff0c\u6709trace\u904elinux\u4e2dTCP/IP\u76f8\u95dc\u7684code","permalink":"/docs/techPost/2013/linux-capture-packets"},{"id":"techPost/2016/netfilter-nfqueue","title":"NFQUEUE drop UDP packets","description":"\u63a2\u8a0e NFQUEUE + iptables \u7d50\u5408\u5f8c\u4e1f\u68c4 UDP \u5c01\u5305\u7684\u554f\u984c","permalink":"/docs/techPost/2016/netfilter-nfqueue"},{"id":"techPost/2017/ovs-dpdk-docker","title":"OVS + DPDK + Docker \u5171\u540c\u73a9\u800d","description":"\u672c\u6587\u4ecb\u7d39\u4e86\u4e00\u7a2e\u5c07 Contaienr \u5275\u5efa\u65bc OpenvSwitch \u8207 DPDK \u6574\u5408\u7684\u7db2\u8def\u62d3\u58a3\u4e0b\u6240\u9047\u5230\u7684\u9023\u7dda\u554f\u984c\u3002\u958b\u982d\u5148\u95e1\u8ff0\u4e86\u62d3\u58a3\u67b6\u69cb\u4ee5\u53ca\u76f8\u95dc\u7684\u8edf\u9ad4\u7248\u672c\uff0c\u63a5\u8005\u4ecb\u7d39\u662f\u5982\u4f55\u642d\u5efa\u8d77\u6574\u500b\u6e2c\u8a66\u74b0\u5883\uff0c\u4e26\u4e14\u5728\u6e2c\u8a66\u74b0\u5883\u4e2d\u9047\u5230\u4e86\u7db2\u8def\u9023\u7dda\u7684\u554f\u984c\uff0c\u773e\u591a\u7684\u6e2c\u8a66\u7d44\u5408\u4e2d\uff0c\u537b\u53ea\u6709\u4e00\u7a2e\u7d44\u5408\u80fd\u5920\u6b63\u5e38\u7684\u5728 Container \u9593\u5efa\u7acb\u8d77\u80fd\u5920\u50b3\u8f38\u7684 TCP \u9023\u7dda\u3002\u6700\u5f8c\u900f\u904e AB \u6e2c\u8a66\u7684\u65b9\u6cd5\u6b78\u7d0d\u51fa\u4e00\u4e9b\u6703\u9020\u6210\u554f\u984c\u51fa\u73fe\u7684\u74b0\u5883\u3002","permalink":"/docs/techPost/2017/ovs-dpdk-docker"},{"id":"techPost/2017/ovs-dpdk-docker-2","title":"OVS + DPDK + Docker \u5171\u540c\u73a9\u800d(\u4e8c)","description":"\u672c\u6587\u5ef6\u7e8c\u524d\u7bc7\u6587\u7ae0\u95dc\u65bc Docker/OpenvSwitch/DPDK \u6574\u5408\u9047\u5230\u7684\u9023\u7dda\u554f\u984c\uff0c\u6b64\u6587\u7ae0\u6703\u5c08\u6ce8\u65bc\u9019\u500b\u9023\u7dda\u554f\u984c\uff0c\u5f9e\u554f\u984c\u767c\u751f\u7684\u539f\u56e0\u5230\u5982\u4f55\u89e3\u6c7a\uff0c\u4ee5\u53ca\u8a72\u554f\u984c\u70ba\u4ec0\u9ebc\u6703\u5728\u4e0a\u8ff0\u7684\u7d44\u5408\u4e2d\u767c\u751f\u90fd\u9032\u884c\u4e00\u4e9b\u7814\u7a76\u8207\u5206\u6790\uff0c\u96d6\u7136\u6700\u5f8c\u9084\u6c92\u6709\u627e\u5230\u771f\u6b63\u9020\u6210\u5c01\u5305\u640d\u58de\u7684\u539f\u56e0\uff0c\u4f46\u662f\u81f3\u5c11\u4e5f\u628a\u554f\u984c\u7bc4\u570d\u7d66\u7e2e\u5c0f\u5230 OpenvSwitch/DPDK \u4e0a.","permalink":"/docs/techPost/2017/ovs-dpdk-docker-2"},{"id":"techPost/2021/ping-implementations","title":"\u4f60\u771f\u7684\u7406\u89e3\u904e PING \u9019\u500b\u6307\u4ee4\u55ce?","description":"\u63a2\u8a0e ping \u6307\u4ee4\u7684\u4e0d\u540c\u5be6\u4f5c\u65b9\u5f0f","permalink":"/docs/techPost/2021/ping-implementations"}]}')}}]);